### YamlMime:ManagedReference
items:
- uid: SadConsole.CellSurfaceEditor
  commentId: T:SadConsole.CellSurfaceEditor
  id: CellSurfaceEditor
  parent: SadConsole
  children:
  - SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface)
  - SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  - SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point})
  - SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.ClearDecorators(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.ClearDecorators(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.ClearShiftValues(SadConsole.ISurface)
  - SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface)
  - SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface,System.Int32[])
  - SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface,System.Int32[],SadRogue.Primitives.Rectangle)
  - SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,SadConsole.ICellSurface)
  - SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,SadConsole.ICellSurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ICellSurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,SadConsole.ICellSurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.DrawBox(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ShapeParameters)
  - SadConsole.CellSurfaceEditor.DrawCircle(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ShapeParameters)
  - SadConsole.CellSurfaceEditor.DrawLine(SadConsole.ISurface,SadRogue.Primitives.Point,SadRogue.Primitives.Point,System.Nullable{System.Int32},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadConsole.Mirror})
  - SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface)
  - SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,SadConsole.ColoredGlyphBase)
  - SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,SadRogue.Primitives.Rectangle,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  - SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  - SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  - SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface,SadConsole.IFont)
  - SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface,System.Int32)
  - SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface,System.Int32,SadRogue.Primitives.Rectangle)
  - SadConsole.CellSurfaceEditor.GetBackground(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.GetCellAppearance(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.GetCells(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  - SadConsole.CellSurfaceEditor.GetEffect(SadConsole.ISurface,System.Int32)
  - SadConsole.CellSurfaceEditor.GetEffect(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.GetForeground(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.GetGlyph(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.GetMirror(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.GetString(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.GetString(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.GetStringColored(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.GetStringColored(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.GetSubSurface(SadConsole.ISurface)
  - SadConsole.CellSurfaceEditor.GetSubSurface(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  - SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface,System.Int32)
  - SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface,System.Int32,System.Int32,System.Int32@)
  - SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredGlyphBase[])
  - SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredString)
  - SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase})
  - SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String)
  - SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadConsole.ColoredGlyphBase,SadConsole.Effects.ICellEffect)
  - SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadConsole.Mirror)
  - SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color)
  - SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  - SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror)
  - SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.PrintTheDraw(SadConsole.ICellSurface,System.Int32,System.Int32,System.String,SadConsole.Readers.TheDrawFont)
  - SadConsole.CellSurfaceEditor.PrintTheDraw(SadConsole.ICellSurface,System.Int32,System.String,SadConsole.Readers.TheDrawFont,SadConsole.HorizontalAlignment,System.Int32)
  - SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.SetBackground(SadConsole.ISurface,System.Int32,System.Int32,SadRogue.Primitives.Color)
  - SadConsole.CellSurfaceEditor.SetCellAppearance(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredGlyphBase)
  - SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  - SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,SadConsole.ColoredGlyphBase,SadConsole.Effects.ICellEffect)
  - SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase},SadConsole.Effects.ICellEffect)
  - SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point},SadConsole.Effects.ICellEffect)
  - SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{System.Int32},SadConsole.Effects.ICellEffect)
  - SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Int32,SadConsole.Effects.ICellEffect)
  - SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.Effects.ICellEffect)
  - SadConsole.CellSurfaceEditor.SetForeground(SadConsole.ISurface,System.Int32,System.Int32,SadRogue.Primitives.Color)
  - SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  - SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color)
  - SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  - SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror)
  - SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,System.Collections.Generic.IEnumerable{SadConsole.CellDecorator})
  - SadConsole.CellSurfaceEditor.SetMirror(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.Mirror)
  - SadConsole.CellSurfaceEditor.SetPixels(SadConsole.ISurface,SadRogue.Primitives.Color[])
  - SadConsole.CellSurfaceEditor.SetPixels(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadRogue.Primitives.Color[])
  - SadConsole.CellSurfaceEditor.ShiftColumn(SadConsole.ISurface,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftColumn(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftColumnDown(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftColumnDownUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftColumnUp(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftColumnUpUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftDown(SadConsole.ISurface)
  - SadConsole.CellSurfaceEditor.ShiftDown(SadConsole.ISurface,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftLeft(SadConsole.ISurface)
  - SadConsole.CellSurfaceEditor.ShiftLeft(SadConsole.ISurface,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftRight(SadConsole.ISurface)
  - SadConsole.CellSurfaceEditor.ShiftRight(SadConsole.ISurface,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftRow(SadConsole.ISurface,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftRow(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftRowLeft(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftRowLeftUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftRowRight(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftRowRightUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - SadConsole.CellSurfaceEditor.ShiftUp(SadConsole.ISurface)
  - SadConsole.CellSurfaceEditor.ShiftUp(SadConsole.ISurface,System.Int32,System.Boolean)
  langs:
  - csharp
  - vb
  name: CellSurfaceEditor
  nameWithType: CellSurfaceEditor
  fullName: SadConsole.CellSurfaceEditor
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static class CellSurfaceEditor
    content.vb: Public Module CellSurfaceEditor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: SadConsole.CellSurfaceEditor.SetPixels(SadConsole.ISurface,SadRogue.Primitives.Color[])
  commentId: M:SadConsole.CellSurfaceEditor.SetPixels(SadConsole.ISurface,SadRogue.Primitives.Color[])
  id: SetPixels(SadConsole.ISurface,SadRogue.Primitives.Color[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetPixels(ISurface, Color[])
  nameWithType: CellSurfaceEditor.SetPixels(ISurface, Color[])
  fullName: SadConsole.CellSurfaceEditor.SetPixels(SadConsole.ISurface, SadRogue.Primitives.Color[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetPixels(this ISurface obj, Color[] pixels)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: pixels
      type: SadRogue.Primitives.Color[]
    content.vb: Public Shared Sub SetPixels(obj As ISurface, pixels As Color())
  overload: SadConsole.CellSurfaceEditor.SetPixels*
  nameWithType.vb: CellSurfaceEditor.SetPixels(ISurface, Color())
  fullName.vb: SadConsole.CellSurfaceEditor.SetPixels(SadConsole.ISurface, SadRogue.Primitives.Color())
  name.vb: SetPixels(ISurface, Color())
- uid: SadConsole.CellSurfaceEditor.SetPixels(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadRogue.Primitives.Color[])
  commentId: M:SadConsole.CellSurfaceEditor.SetPixels(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadRogue.Primitives.Color[])
  id: SetPixels(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadRogue.Primitives.Color[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetPixels(ISurface, Rectangle, Color[])
  nameWithType: CellSurfaceEditor.SetPixels(ISurface, Rectangle, Color[])
  fullName: SadConsole.CellSurfaceEditor.SetPixels(SadConsole.ISurface, SadRogue.Primitives.Rectangle, SadRogue.Primitives.Color[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetPixels(this ISurface obj, Rectangle area, Color[] pixels)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: area
      type: SadRogue.Primitives.Rectangle
    - id: pixels
      type: SadRogue.Primitives.Color[]
    content.vb: Public Shared Sub SetPixels(obj As ISurface, area As Rectangle, pixels As Color())
  overload: SadConsole.CellSurfaceEditor.SetPixels*
  nameWithType.vb: CellSurfaceEditor.SetPixels(ISurface, Rectangle, Color())
  fullName.vb: SadConsole.CellSurfaceEditor.SetPixels(SadConsole.ISurface, SadRogue.Primitives.Rectangle, SadRogue.Primitives.Color())
  name.vb: SetPixels(ISurface, Rectangle, Color())
- uid: SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface,System.Int32,System.Int32)
  id: IsValidCell(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: IsValidCell(ISurface, int, int)
  nameWithType: CellSurfaceEditor.IsValidCell(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static bool IsValidCell(this ISurface obj, int x, int y)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValidCell(obj As ISurface, x As Integer, y As Integer) As Boolean
  overload: SadConsole.CellSurfaceEditor.IsValidCell*
  nameWithType.vb: CellSurfaceEditor.IsValidCell(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface, Integer, Integer)
  name.vb: IsValidCell(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface,System.Int32,System.Int32,System.Int32@)
  commentId: M:SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface,System.Int32,System.Int32,System.Int32@)
  id: IsValidCell(SadConsole.ISurface,System.Int32,System.Int32,System.Int32@)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: IsValidCell(ISurface, int, int, out int)
  nameWithType: CellSurfaceEditor.IsValidCell(ISurface, int, int, out int)
  fullName: SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface, int, int, out int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static bool IsValidCell(this ISurface obj, int x, int y, out int index)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValidCell(obj As ISurface, x As Integer, y As Integer, index As Integer) As Boolean
  overload: SadConsole.CellSurfaceEditor.IsValidCell*
  nameWithType.vb: CellSurfaceEditor.IsValidCell(ISurface, Integer, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface, Integer, Integer, Integer)
  name.vb: IsValidCell(ISurface, Integer, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface,System.Int32)
  id: IsValidCell(SadConsole.ISurface,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: IsValidCell(ISurface, int)
  nameWithType: CellSurfaceEditor.IsValidCell(ISurface, int)
  fullName: SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static bool IsValidCell(this ISurface obj, int index)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValidCell(obj As ISurface, index As Integer) As Boolean
  overload: SadConsole.CellSurfaceEditor.IsValidCell*
  nameWithType.vb: CellSurfaceEditor.IsValidCell(ISurface, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.IsValidCell(SadConsole.ISurface, Integer)
  name.vb: IsValidCell(ISurface, Integer)
- uid: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  id: SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetGlyph(ISurface, int, int, int)
  nameWithType: CellSurfaceEditor.SetGlyph(ISurface, int, int, int)
  fullName: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface, int, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetGlyph(this ISurface obj, int x, int y, int glyph)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: glyph
      type: System.Int32
    content.vb: Public Shared Sub SetGlyph(obj As ISurface, x As Integer, y As Integer, glyph As Integer)
  overload: SadConsole.CellSurfaceEditor.SetGlyph*
  nameWithType.vb: CellSurfaceEditor.SetGlyph(ISurface, Integer, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface, Integer, Integer, Integer)
  name.vb: SetGlyph(ISurface, Integer, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color)
  commentId: M:SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color)
  id: SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetGlyph(ISurface, int, int, int, Color)
  nameWithType: CellSurfaceEditor.SetGlyph(ISurface, int, int, int, Color)
  fullName: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface, int, int, int, SadRogue.Primitives.Color)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetGlyph(this ISurface obj, int x, int y, int glyph, Color foreground)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: glyph
      type: System.Int32
    - id: foreground
      type: SadRogue.Primitives.Color
    content.vb: Public Shared Sub SetGlyph(obj As ISurface, x As Integer, y As Integer, glyph As Integer, foreground As Color)
  overload: SadConsole.CellSurfaceEditor.SetGlyph*
  nameWithType.vb: CellSurfaceEditor.SetGlyph(ISurface, Integer, Integer, Integer, Color)
  fullName.vb: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface, Integer, Integer, Integer, SadRogue.Primitives.Color)
  name.vb: SetGlyph(ISurface, Integer, Integer, Integer, Color)
- uid: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  commentId: M:SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  id: SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetGlyph(ISurface, int, int, int, Color, Color)
  nameWithType: CellSurfaceEditor.SetGlyph(ISurface, int, int, int, Color, Color)
  fullName: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface, int, int, int, SadRogue.Primitives.Color, SadRogue.Primitives.Color)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetGlyph(this ISurface obj, int x, int y, int glyph, Color foreground, Color background)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: glyph
      type: System.Int32
    - id: foreground
      type: SadRogue.Primitives.Color
    - id: background
      type: SadRogue.Primitives.Color
    content.vb: Public Shared Sub SetGlyph(obj As ISurface, x As Integer, y As Integer, glyph As Integer, foreground As Color, background As Color)
  overload: SadConsole.CellSurfaceEditor.SetGlyph*
  nameWithType.vb: CellSurfaceEditor.SetGlyph(ISurface, Integer, Integer, Integer, Color, Color)
  fullName.vb: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface, Integer, Integer, Integer, SadRogue.Primitives.Color, SadRogue.Primitives.Color)
  name.vb: SetGlyph(ISurface, Integer, Integer, Integer, Color, Color)
- uid: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror)
  commentId: M:SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror)
  id: SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetGlyph(ISurface, int, int, int, Color, Color, Mirror)
  nameWithType: CellSurfaceEditor.SetGlyph(ISurface, int, int, int, Color, Color, Mirror)
  fullName: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface, int, int, int, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadConsole.Mirror)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetGlyph(this ISurface obj, int x, int y, int glyph, Color foreground, Color background, Mirror mirror)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: glyph
      type: System.Int32
    - id: foreground
      type: SadRogue.Primitives.Color
    - id: background
      type: SadRogue.Primitives.Color
    - id: mirror
      type: SadConsole.Mirror
    content.vb: Public Shared Sub SetGlyph(obj As ISurface, x As Integer, y As Integer, glyph As Integer, foreground As Color, background As Color, mirror As Mirror)
  overload: SadConsole.CellSurfaceEditor.SetGlyph*
  nameWithType.vb: CellSurfaceEditor.SetGlyph(ISurface, Integer, Integer, Integer, Color, Color, Mirror)
  fullName.vb: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface, Integer, Integer, Integer, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadConsole.Mirror)
  name.vb: SetGlyph(ISurface, Integer, Integer, Integer, Color, Color, Mirror)
- uid: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,System.Collections.Generic.IEnumerable{SadConsole.CellDecorator})
  commentId: M:SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,System.Collections.Generic.IEnumerable{SadConsole.CellDecorator})
  id: SetGlyph(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,System.Collections.Generic.IEnumerable{SadConsole.CellDecorator})
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetGlyph(ISurface, int, int, int, Color, Color, Mirror, IEnumerable<CellDecorator>)
  nameWithType: CellSurfaceEditor.SetGlyph(ISurface, int, int, int, Color, Color, Mirror, IEnumerable<CellDecorator>)
  fullName: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface, int, int, int, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadConsole.Mirror, System.Collections.Generic.IEnumerable<SadConsole.CellDecorator>)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetGlyph(this ISurface obj, int x, int y, int glyph, Color foreground, Color background, Mirror mirror, IEnumerable<CellDecorator> decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: glyph
      type: System.Int32
    - id: foreground
      type: SadRogue.Primitives.Color
    - id: background
      type: SadRogue.Primitives.Color
    - id: mirror
      type: SadConsole.Mirror
    - id: decorators
      type: System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
    content.vb: Public Shared Sub SetGlyph(obj As ISurface, x As Integer, y As Integer, glyph As Integer, foreground As Color, background As Color, mirror As Mirror, decorators As IEnumerable(Of CellDecorator))
  overload: SadConsole.CellSurfaceEditor.SetGlyph*
  nameWithType.vb: CellSurfaceEditor.SetGlyph(ISurface, Integer, Integer, Integer, Color, Color, Mirror, IEnumerable(Of CellDecorator))
  fullName.vb: SadConsole.CellSurfaceEditor.SetGlyph(SadConsole.ISurface, Integer, Integer, Integer, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadConsole.Mirror, System.Collections.Generic.IEnumerable(Of SadConsole.CellDecorator))
  name.vb: SetGlyph(ISurface, Integer, Integer, Integer, Color, Color, Mirror, IEnumerable(Of CellDecorator))
- uid: SadConsole.CellSurfaceEditor.GetGlyph(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetGlyph(SadConsole.ISurface,System.Int32,System.Int32)
  id: GetGlyph(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetGlyph(ISurface, int, int)
  nameWithType: CellSurfaceEditor.GetGlyph(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.GetGlyph(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static int GetGlyph(this ISurface obj, int x, int y)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetGlyph(obj As ISurface, x As Integer, y As Integer) As Integer
  overload: SadConsole.CellSurfaceEditor.GetGlyph*
  nameWithType.vb: CellSurfaceEditor.GetGlyph(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetGlyph(SadConsole.ISurface, Integer, Integer)
  name.vb: GetGlyph(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.SetForeground(SadConsole.ISurface,System.Int32,System.Int32,SadRogue.Primitives.Color)
  commentId: M:SadConsole.CellSurfaceEditor.SetForeground(SadConsole.ISurface,System.Int32,System.Int32,SadRogue.Primitives.Color)
  id: SetForeground(SadConsole.ISurface,System.Int32,System.Int32,SadRogue.Primitives.Color)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetForeground(ISurface, int, int, Color)
  nameWithType: CellSurfaceEditor.SetForeground(ISurface, int, int, Color)
  fullName: SadConsole.CellSurfaceEditor.SetForeground(SadConsole.ISurface, int, int, SadRogue.Primitives.Color)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetForeground(this ISurface obj, int x, int y, Color color)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: color
      type: SadRogue.Primitives.Color
    content.vb: Public Shared Sub SetForeground(obj As ISurface, x As Integer, y As Integer, color As Color)
  overload: SadConsole.CellSurfaceEditor.SetForeground*
  nameWithType.vb: CellSurfaceEditor.SetForeground(ISurface, Integer, Integer, Color)
  fullName.vb: SadConsole.CellSurfaceEditor.SetForeground(SadConsole.ISurface, Integer, Integer, SadRogue.Primitives.Color)
  name.vb: SetForeground(ISurface, Integer, Integer, Color)
- uid: SadConsole.CellSurfaceEditor.GetForeground(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetForeground(SadConsole.ISurface,System.Int32,System.Int32)
  id: GetForeground(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetForeground(ISurface, int, int)
  nameWithType: CellSurfaceEditor.GetForeground(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.GetForeground(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static Color GetForeground(this ISurface obj, int x, int y)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: SadRogue.Primitives.Color
    content.vb: Public Shared Function GetForeground(obj As ISurface, x As Integer, y As Integer) As Color
  overload: SadConsole.CellSurfaceEditor.GetForeground*
  nameWithType.vb: CellSurfaceEditor.GetForeground(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetForeground(SadConsole.ISurface, Integer, Integer)
  name.vb: GetForeground(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.SetBackground(SadConsole.ISurface,System.Int32,System.Int32,SadRogue.Primitives.Color)
  commentId: M:SadConsole.CellSurfaceEditor.SetBackground(SadConsole.ISurface,System.Int32,System.Int32,SadRogue.Primitives.Color)
  id: SetBackground(SadConsole.ISurface,System.Int32,System.Int32,SadRogue.Primitives.Color)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetBackground(ISurface, int, int, Color)
  nameWithType: CellSurfaceEditor.SetBackground(ISurface, int, int, Color)
  fullName: SadConsole.CellSurfaceEditor.SetBackground(SadConsole.ISurface, int, int, SadRogue.Primitives.Color)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetBackground(this ISurface obj, int x, int y, Color color)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: color
      type: SadRogue.Primitives.Color
    content.vb: Public Shared Sub SetBackground(obj As ISurface, x As Integer, y As Integer, color As Color)
  overload: SadConsole.CellSurfaceEditor.SetBackground*
  nameWithType.vb: CellSurfaceEditor.SetBackground(ISurface, Integer, Integer, Color)
  fullName.vb: SadConsole.CellSurfaceEditor.SetBackground(SadConsole.ISurface, Integer, Integer, SadRogue.Primitives.Color)
  name.vb: SetBackground(ISurface, Integer, Integer, Color)
- uid: SadConsole.CellSurfaceEditor.GetBackground(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetBackground(SadConsole.ISurface,System.Int32,System.Int32)
  id: GetBackground(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetBackground(ISurface, int, int)
  nameWithType: CellSurfaceEditor.GetBackground(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.GetBackground(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static Color GetBackground(this ISurface obj, int x, int y)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: SadRogue.Primitives.Color
    content.vb: Public Shared Function GetBackground(obj As ISurface, x As Integer, y As Integer) As Color
  overload: SadConsole.CellSurfaceEditor.GetBackground*
  nameWithType.vb: CellSurfaceEditor.GetBackground(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetBackground(SadConsole.ISurface, Integer, Integer)
  name.vb: GetBackground(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.Effects.ICellEffect)
  commentId: M:SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.Effects.ICellEffect)
  id: SetEffect(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.Effects.ICellEffect)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetEffect(ISurface, int, int, ICellEffect?)
  nameWithType: CellSurfaceEditor.SetEffect(ISurface, int, int, ICellEffect?)
  fullName: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, int, int, SadConsole.Effects.ICellEffect?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetEffect(this ISurface obj, int x, int y, ICellEffect? effect)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: effect
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Shared Sub SetEffect(obj As ISurface, x As Integer, y As Integer, effect As ICellEffect)
  overload: SadConsole.CellSurfaceEditor.SetEffect*
  nameWithType.vb: CellSurfaceEditor.SetEffect(ISurface, Integer, Integer, ICellEffect)
  fullName.vb: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, Integer, Integer, SadConsole.Effects.ICellEffect)
  name.vb: SetEffect(ISurface, Integer, Integer, ICellEffect)
- uid: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Int32,SadConsole.Effects.ICellEffect)
  commentId: M:SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Int32,SadConsole.Effects.ICellEffect)
  id: SetEffect(SadConsole.ISurface,System.Int32,SadConsole.Effects.ICellEffect)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetEffect(ISurface, int, ICellEffect?)
  nameWithType: CellSurfaceEditor.SetEffect(ISurface, int, ICellEffect?)
  fullName: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, int, SadConsole.Effects.ICellEffect?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetEffect(this ISurface obj, int index, ICellEffect? effect)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    - id: effect
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Shared Sub SetEffect(obj As ISurface, index As Integer, effect As ICellEffect)
  overload: SadConsole.CellSurfaceEditor.SetEffect*
  nameWithType.vb: CellSurfaceEditor.SetEffect(ISurface, Integer, ICellEffect)
  fullName.vb: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, Integer, SadConsole.Effects.ICellEffect)
  name.vb: SetEffect(ISurface, Integer, ICellEffect)
- uid: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point},SadConsole.Effects.ICellEffect)
  commentId: M:SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point},SadConsole.Effects.ICellEffect)
  id: SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point},SadConsole.Effects.ICellEffect)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetEffect(ISurface, IEnumerable<Point>, ICellEffect?)
  nameWithType: CellSurfaceEditor.SetEffect(ISurface, IEnumerable<Point>, ICellEffect?)
  fullName: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, System.Collections.Generic.IEnumerable<SadRogue.Primitives.Point>, SadConsole.Effects.ICellEffect?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetEffect(this ISurface obj, IEnumerable<Point> cells, ICellEffect? effect)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: cells
      type: System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point}
    - id: effect
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Shared Sub SetEffect(obj As ISurface, cells As IEnumerable(Of Point), effect As ICellEffect)
  overload: SadConsole.CellSurfaceEditor.SetEffect*
  nameWithType.vb: CellSurfaceEditor.SetEffect(ISurface, IEnumerable(Of Point), ICellEffect)
  fullName.vb: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, System.Collections.Generic.IEnumerable(Of SadRogue.Primitives.Point), SadConsole.Effects.ICellEffect)
  name.vb: SetEffect(ISurface, IEnumerable(Of Point), ICellEffect)
- uid: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{System.Int32},SadConsole.Effects.ICellEffect)
  commentId: M:SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{System.Int32},SadConsole.Effects.ICellEffect)
  id: SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{System.Int32},SadConsole.Effects.ICellEffect)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetEffect(ISurface, IEnumerable<int>, ICellEffect?)
  nameWithType: CellSurfaceEditor.SetEffect(ISurface, IEnumerable<int>, ICellEffect?)
  fullName: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, System.Collections.Generic.IEnumerable<int>, SadConsole.Effects.ICellEffect?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetEffect(this ISurface obj, IEnumerable<int> cells, ICellEffect? effect)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: cells
      type: System.Collections.Generic.IEnumerable{System.Int32}
    - id: effect
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Shared Sub SetEffect(obj As ISurface, cells As IEnumerable(Of Integer), effect As ICellEffect)
  overload: SadConsole.CellSurfaceEditor.SetEffect*
  nameWithType.vb: CellSurfaceEditor.SetEffect(ISurface, IEnumerable(Of Integer), ICellEffect)
  fullName.vb: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, System.Collections.Generic.IEnumerable(Of Integer), SadConsole.Effects.ICellEffect)
  name.vb: SetEffect(ISurface, IEnumerable(Of Integer), ICellEffect)
- uid: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,SadConsole.ColoredGlyphBase,SadConsole.Effects.ICellEffect)
  commentId: M:SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,SadConsole.ColoredGlyphBase,SadConsole.Effects.ICellEffect)
  id: SetEffect(SadConsole.ISurface,SadConsole.ColoredGlyphBase,SadConsole.Effects.ICellEffect)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetEffect(ISurface, ColoredGlyphBase, ICellEffect?)
  nameWithType: CellSurfaceEditor.SetEffect(ISurface, ColoredGlyphBase, ICellEffect?)
  fullName: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, SadConsole.ColoredGlyphBase, SadConsole.Effects.ICellEffect?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetEffect(this ISurface obj, ColoredGlyphBase cell, ICellEffect? effect)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: cell
      type: SadConsole.ColoredGlyphBase
    - id: effect
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Shared Sub SetEffect(obj As ISurface, cell As ColoredGlyphBase, effect As ICellEffect)
  overload: SadConsole.CellSurfaceEditor.SetEffect*
  nameWithType.vb: CellSurfaceEditor.SetEffect(ISurface, ColoredGlyphBase, ICellEffect)
  fullName.vb: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, SadConsole.ColoredGlyphBase, SadConsole.Effects.ICellEffect)
  name.vb: SetEffect(ISurface, ColoredGlyphBase, ICellEffect)
- uid: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase},SadConsole.Effects.ICellEffect)
  commentId: M:SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase},SadConsole.Effects.ICellEffect)
  id: SetEffect(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase},SadConsole.Effects.ICellEffect)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetEffect(ISurface, IEnumerable<ColoredGlyphBase>, ICellEffect?)
  nameWithType: CellSurfaceEditor.SetEffect(ISurface, IEnumerable<ColoredGlyphBase>, ICellEffect?)
  fullName: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, System.Collections.Generic.IEnumerable<SadConsole.ColoredGlyphBase>, SadConsole.Effects.ICellEffect?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetEffect(this ISurface obj, IEnumerable<ColoredGlyphBase> cells, ICellEffect? effect)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: cells
      type: System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase}
    - id: effect
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Shared Sub SetEffect(obj As ISurface, cells As IEnumerable(Of ColoredGlyphBase), effect As ICellEffect)
  overload: SadConsole.CellSurfaceEditor.SetEffect*
  nameWithType.vb: CellSurfaceEditor.SetEffect(ISurface, IEnumerable(Of ColoredGlyphBase), ICellEffect)
  fullName.vb: SadConsole.CellSurfaceEditor.SetEffect(SadConsole.ISurface, System.Collections.Generic.IEnumerable(Of SadConsole.ColoredGlyphBase), SadConsole.Effects.ICellEffect)
  name.vb: SetEffect(ISurface, IEnumerable(Of ColoredGlyphBase), ICellEffect)
- uid: SadConsole.CellSurfaceEditor.GetEffect(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetEffect(SadConsole.ISurface,System.Int32,System.Int32)
  id: GetEffect(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetEffect(ISurface, int, int)
  nameWithType: CellSurfaceEditor.GetEffect(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.GetEffect(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ICellEffect? GetEffect(this ISurface obj, int x, int y)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Shared Function GetEffect(obj As ISurface, x As Integer, y As Integer) As ICellEffect
  overload: SadConsole.CellSurfaceEditor.GetEffect*
  nameWithType.vb: CellSurfaceEditor.GetEffect(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetEffect(SadConsole.ISurface, Integer, Integer)
  name.vb: GetEffect(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.GetEffect(SadConsole.ISurface,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetEffect(SadConsole.ISurface,System.Int32)
  id: GetEffect(SadConsole.ISurface,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetEffect(ISurface, int)
  nameWithType: CellSurfaceEditor.GetEffect(ISurface, int)
  fullName: SadConsole.CellSurfaceEditor.GetEffect(SadConsole.ISurface, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ICellEffect? GetEffect(this ISurface obj, int index)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    return:
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Shared Function GetEffect(obj As ISurface, index As Integer) As ICellEffect
  overload: SadConsole.CellSurfaceEditor.GetEffect*
  nameWithType.vb: CellSurfaceEditor.GetEffect(ISurface, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetEffect(SadConsole.ISurface, Integer)
  name.vb: GetEffect(ISurface, Integer)
- uid: SadConsole.CellSurfaceEditor.SetCellAppearance(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.CellSurfaceEditor.SetCellAppearance(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredGlyphBase)
  id: SetCellAppearance(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredGlyphBase)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetCellAppearance(ISurface, int, int, ColoredGlyphBase)
  nameWithType: CellSurfaceEditor.SetCellAppearance(ISurface, int, int, ColoredGlyphBase)
  fullName: SadConsole.CellSurfaceEditor.SetCellAppearance(SadConsole.ISurface, int, int, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetCellAppearance(this ISurface obj, int x, int y, ColoredGlyphBase appearance)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: appearance
      type: SadConsole.ColoredGlyphBase
    content.vb: Public Shared Sub SetCellAppearance(obj As ISurface, x As Integer, y As Integer, appearance As ColoredGlyphBase)
  overload: SadConsole.CellSurfaceEditor.SetCellAppearance*
  nameWithType.vb: CellSurfaceEditor.SetCellAppearance(ISurface, Integer, Integer, ColoredGlyphBase)
  fullName.vb: SadConsole.CellSurfaceEditor.SetCellAppearance(SadConsole.ISurface, Integer, Integer, SadConsole.ColoredGlyphBase)
  name.vb: SetCellAppearance(ISurface, Integer, Integer, ColoredGlyphBase)
- uid: SadConsole.CellSurfaceEditor.GetCellAppearance(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetCellAppearance(SadConsole.ISurface,System.Int32,System.Int32)
  id: GetCellAppearance(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetCellAppearance(ISurface, int, int)
  nameWithType: CellSurfaceEditor.GetCellAppearance(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.GetCellAppearance(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ColoredGlyphBase GetCellAppearance(this ISurface obj, int x, int y)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: SadConsole.ColoredGlyphBase
    content.vb: Public Shared Function GetCellAppearance(obj As ISurface, x As Integer, y As Integer) As ColoredGlyphBase
  overload: SadConsole.CellSurfaceEditor.GetCellAppearance*
  nameWithType.vb: CellSurfaceEditor.GetCellAppearance(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetCellAppearance(SadConsole.ISurface, Integer, Integer)
  name.vb: GetCellAppearance(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.GetCells(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  commentId: M:SadConsole.CellSurfaceEditor.GetCells(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  id: GetCells(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetCells(ISurface, Rectangle)
  nameWithType: CellSurfaceEditor.GetCells(ISurface, Rectangle)
  fullName: SadConsole.CellSurfaceEditor.GetCells(SadConsole.ISurface, SadRogue.Primitives.Rectangle)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static IEnumerable<ColoredGlyphBase> GetCells(this ISurface obj, Rectangle area)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: area
      type: SadRogue.Primitives.Rectangle
    return:
      type: System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase}
    content.vb: Public Shared Function GetCells(obj As ISurface, area As Rectangle) As IEnumerable(Of ColoredGlyphBase)
  overload: SadConsole.CellSurfaceEditor.GetCells*
- uid: SadConsole.CellSurfaceEditor.GetSubSurface(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  commentId: M:SadConsole.CellSurfaceEditor.GetSubSurface(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  id: GetSubSurface(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetSubSurface(ISurface, Rectangle)
  nameWithType: CellSurfaceEditor.GetSubSurface(ISurface, Rectangle)
  fullName: SadConsole.CellSurfaceEditor.GetSubSurface(SadConsole.ISurface, SadRogue.Primitives.Rectangle)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ICellSurface GetSubSurface(this ISurface obj, Rectangle view)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: view
      type: SadRogue.Primitives.Rectangle
    return:
      type: SadConsole.ICellSurface
    content.vb: Public Shared Function GetSubSurface(obj As ISurface, view As Rectangle) As ICellSurface
  overload: SadConsole.CellSurfaceEditor.GetSubSurface*
- uid: SadConsole.CellSurfaceEditor.GetSubSurface(SadConsole.ISurface)
  commentId: M:SadConsole.CellSurfaceEditor.GetSubSurface(SadConsole.ISurface)
  id: GetSubSurface(SadConsole.ISurface)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetSubSurface(ISurface)
  nameWithType: CellSurfaceEditor.GetSubSurface(ISurface)
  fullName: SadConsole.CellSurfaceEditor.GetSubSurface(SadConsole.ISurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ICellSurface GetSubSurface(this ISurface obj)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    return:
      type: SadConsole.ICellSurface
    content.vb: Public Shared Function GetSubSurface(obj As ISurface) As ICellSurface
  overload: SadConsole.CellSurfaceEditor.GetSubSurface*
- uid: SadConsole.CellSurfaceEditor.GetMirror(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetMirror(SadConsole.ISurface,System.Int32,System.Int32)
  id: GetMirror(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetMirror(ISurface, int, int)
  nameWithType: CellSurfaceEditor.GetMirror(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.GetMirror(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static Mirror GetMirror(this ISurface obj, int x, int y)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: SadConsole.Mirror
    content.vb: Public Shared Function GetMirror(obj As ISurface, x As Integer, y As Integer) As Mirror
  overload: SadConsole.CellSurfaceEditor.GetMirror*
  nameWithType.vb: CellSurfaceEditor.GetMirror(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetMirror(SadConsole.ISurface, Integer, Integer)
  name.vb: GetMirror(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.SetMirror(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.Mirror)
  commentId: M:SadConsole.CellSurfaceEditor.SetMirror(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.Mirror)
  id: SetMirror(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.Mirror)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetMirror(ISurface, int, int, Mirror)
  nameWithType: CellSurfaceEditor.SetMirror(ISurface, int, int, Mirror)
  fullName: SadConsole.CellSurfaceEditor.SetMirror(SadConsole.ISurface, int, int, SadConsole.Mirror)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetMirror(this ISurface obj, int x, int y, Mirror mirror)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: mirror
      type: SadConsole.Mirror
    content.vb: Public Shared Sub SetMirror(obj As ISurface, x As Integer, y As Integer, mirror As Mirror)
  overload: SadConsole.CellSurfaceEditor.SetMirror*
  nameWithType.vb: CellSurfaceEditor.SetMirror(ISurface, Integer, Integer, Mirror)
  fullName.vb: SadConsole.CellSurfaceEditor.SetMirror(SadConsole.ISurface, Integer, Integer, SadConsole.Mirror)
  name.vb: SetMirror(ISurface, Integer, Integer, Mirror)
- uid: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  id: SetDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetDecorator(ISurface, int, int, int, params CellDecorator[]?)
  nameWithType: CellSurfaceEditor.SetDecorator(ISurface, int, int, int, params CellDecorator[]?)
  fullName: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface, int, int, int, params SadConsole.CellDecorator[]?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetDecorator(this ISurface obj, int x, int y, int count, params CellDecorator[]? decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: count
      type: System.Int32
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub SetDecorator(obj As ISurface, x As Integer, y As Integer, count As Integer, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.SetDecorator*
  nameWithType.vb: CellSurfaceEditor.SetDecorator(ISurface, Integer, Integer, Integer, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface, Integer, Integer, Integer, ParamArray SadConsole.CellDecorator())
  name.vb: SetDecorator(ISurface, Integer, Integer, Integer, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  id: SetDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetDecorator(ISurface, Point, params CellDecorator[]?)
  nameWithType: CellSurfaceEditor.SetDecorator(ISurface, Point, params CellDecorator[]?)
  fullName: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface, SadRogue.Primitives.Point, params SadConsole.CellDecorator[]?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetDecorator(this ISurface obj, Point position, params CellDecorator[]? decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: position
      type: SadRogue.Primitives.Point
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub SetDecorator(obj As ISurface, position As Point, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.SetDecorator*
  nameWithType.vb: CellSurfaceEditor.SetDecorator(ISurface, Point, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface, SadRogue.Primitives.Point, ParamArray SadConsole.CellDecorator())
  name.vb: SetDecorator(ISurface, Point, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  id: SetDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetDecorator(ISurface, int, int, params CellDecorator[]?)
  nameWithType: CellSurfaceEditor.SetDecorator(ISurface, int, int, params CellDecorator[]?)
  fullName: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface, int, int, params SadConsole.CellDecorator[]?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetDecorator(this ISurface obj, int index, int count, params CellDecorator[]? decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub SetDecorator(obj As ISurface, index As Integer, count As Integer, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.SetDecorator*
  nameWithType.vb: CellSurfaceEditor.SetDecorator(ISurface, Integer, Integer, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface, Integer, Integer, ParamArray SadConsole.CellDecorator())
  name.vb: SetDecorator(ISurface, Integer, Integer, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  id: SetDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: SetDecorator(ISurface, int, params CellDecorator[]?)
  nameWithType: CellSurfaceEditor.SetDecorator(ISurface, int, params CellDecorator[]?)
  fullName: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface, int, params SadConsole.CellDecorator[]?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void SetDecorator(this ISurface obj, int index, params CellDecorator[]? decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub SetDecorator(obj As ISurface, index As Integer, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.SetDecorator*
  nameWithType.vb: CellSurfaceEditor.SetDecorator(ISurface, Integer, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.SetDecorator(SadConsole.ISurface, Integer, ParamArray SadConsole.CellDecorator())
  name.vb: SetDecorator(ISurface, Integer, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  id: AddDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: AddDecorator(ISurface, int, int, int, params CellDecorator[])
  nameWithType: CellSurfaceEditor.AddDecorator(ISurface, int, int, int, params CellDecorator[])
  fullName: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface, int, int, int, params SadConsole.CellDecorator[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void AddDecorator(this ISurface obj, int x, int y, int count, params CellDecorator[] decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: count
      type: System.Int32
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub AddDecorator(obj As ISurface, x As Integer, y As Integer, count As Integer, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.AddDecorator*
  nameWithType.vb: CellSurfaceEditor.AddDecorator(ISurface, Integer, Integer, Integer, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface, Integer, Integer, Integer, ParamArray SadConsole.CellDecorator())
  name.vb: AddDecorator(ISurface, Integer, Integer, Integer, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  id: AddDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: AddDecorator(ISurface, Point, params CellDecorator[])
  nameWithType: CellSurfaceEditor.AddDecorator(ISurface, Point, params CellDecorator[])
  fullName: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface, SadRogue.Primitives.Point, params SadConsole.CellDecorator[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void AddDecorator(this ISurface obj, Point position, params CellDecorator[] decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: position
      type: SadRogue.Primitives.Point
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub AddDecorator(obj As ISurface, position As Point, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.AddDecorator*
  nameWithType.vb: CellSurfaceEditor.AddDecorator(ISurface, Point, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface, SadRogue.Primitives.Point, ParamArray SadConsole.CellDecorator())
  name.vb: AddDecorator(ISurface, Point, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  id: AddDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: AddDecorator(ISurface, int, int, params CellDecorator[])
  nameWithType: CellSurfaceEditor.AddDecorator(ISurface, int, int, params CellDecorator[])
  fullName: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface, int, int, params SadConsole.CellDecorator[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void AddDecorator(this ISurface obj, int index, int count, params CellDecorator[] decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub AddDecorator(obj As ISurface, index As Integer, count As Integer, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.AddDecorator*
  nameWithType.vb: CellSurfaceEditor.AddDecorator(ISurface, Integer, Integer, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface, Integer, Integer, ParamArray SadConsole.CellDecorator())
  name.vb: AddDecorator(ISurface, Integer, Integer, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  id: AddDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: AddDecorator(ISurface, int, params CellDecorator[]?)
  nameWithType: CellSurfaceEditor.AddDecorator(ISurface, int, params CellDecorator[]?)
  fullName: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface, int, params SadConsole.CellDecorator[]?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void AddDecorator(this ISurface obj, int index, params CellDecorator[]? decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub AddDecorator(obj As ISurface, index As Integer, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.AddDecorator*
  nameWithType.vb: CellSurfaceEditor.AddDecorator(ISurface, Integer, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.AddDecorator(SadConsole.ISurface, Integer, ParamArray SadConsole.CellDecorator())
  name.vb: AddDecorator(ISurface, Integer, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  id: RemoveDecorator(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: RemoveDecorator(ISurface, int, int, int, params CellDecorator[])
  nameWithType: CellSurfaceEditor.RemoveDecorator(ISurface, int, int, int, params CellDecorator[])
  fullName: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface, int, int, int, params SadConsole.CellDecorator[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void RemoveDecorator(this ISurface obj, int x, int y, int count, params CellDecorator[] decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: count
      type: System.Int32
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub RemoveDecorator(obj As ISurface, x As Integer, y As Integer, count As Integer, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.RemoveDecorator*
  nameWithType.vb: CellSurfaceEditor.RemoveDecorator(ISurface, Integer, Integer, Integer, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface, Integer, Integer, Integer, ParamArray SadConsole.CellDecorator())
  name.vb: RemoveDecorator(ISurface, Integer, Integer, Integer, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  id: RemoveDecorator(SadConsole.ISurface,SadRogue.Primitives.Point,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: RemoveDecorator(ISurface, Point, params CellDecorator[])
  nameWithType: CellSurfaceEditor.RemoveDecorator(ISurface, Point, params CellDecorator[])
  fullName: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface, SadRogue.Primitives.Point, params SadConsole.CellDecorator[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void RemoveDecorator(this ISurface obj, Point position, params CellDecorator[] decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: position
      type: SadRogue.Primitives.Point
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub RemoveDecorator(obj As ISurface, position As Point, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.RemoveDecorator*
  nameWithType.vb: CellSurfaceEditor.RemoveDecorator(ISurface, Point, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface, SadRogue.Primitives.Point, ParamArray SadConsole.CellDecorator())
  name.vb: RemoveDecorator(ISurface, Point, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  id: RemoveDecorator(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: RemoveDecorator(ISurface, int, int, params CellDecorator[])
  nameWithType: CellSurfaceEditor.RemoveDecorator(ISurface, int, int, params CellDecorator[])
  fullName: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface, int, int, params SadConsole.CellDecorator[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void RemoveDecorator(this ISurface obj, int index, int count, params CellDecorator[] decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub RemoveDecorator(obj As ISurface, index As Integer, count As Integer, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.RemoveDecorator*
  nameWithType.vb: CellSurfaceEditor.RemoveDecorator(ISurface, Integer, Integer, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface, Integer, Integer, ParamArray SadConsole.CellDecorator())
  name.vb: RemoveDecorator(ISurface, Integer, Integer, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  id: RemoveDecorator(SadConsole.ISurface,System.Int32,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: RemoveDecorator(ISurface, int, params CellDecorator[])
  nameWithType: CellSurfaceEditor.RemoveDecorator(ISurface, int, params CellDecorator[])
  fullName: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface, int, params SadConsole.CellDecorator[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void RemoveDecorator(this ISurface obj, int index, params CellDecorator[] decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub RemoveDecorator(obj As ISurface, index As Integer, ParamArray decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.RemoveDecorator*
  nameWithType.vb: CellSurfaceEditor.RemoveDecorator(ISurface, Integer, ParamArray CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.RemoveDecorator(SadConsole.ISurface, Integer, ParamArray SadConsole.CellDecorator())
  name.vb: RemoveDecorator(ISurface, Integer, ParamArray CellDecorator())
- uid: SadConsole.CellSurfaceEditor.ClearDecorators(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.ClearDecorators(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  id: ClearDecorators(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ClearDecorators(ISurface, int, int, int)
  nameWithType: CellSurfaceEditor.ClearDecorators(ISurface, int, int, int)
  fullName: SadConsole.CellSurfaceEditor.ClearDecorators(SadConsole.ISurface, int, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ClearDecorators(this ISurface obj, int x, int y, int count)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: count
      type: System.Int32
    content.vb: Public Shared Sub ClearDecorators(obj As ISurface, x As Integer, y As Integer, count As Integer)
  overload: SadConsole.CellSurfaceEditor.ClearDecorators*
  nameWithType.vb: CellSurfaceEditor.ClearDecorators(ISurface, Integer, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.ClearDecorators(SadConsole.ISurface, Integer, Integer, Integer)
  name.vb: ClearDecorators(ISurface, Integer, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.ClearDecorators(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.ClearDecorators(SadConsole.ISurface,System.Int32,System.Int32)
  id: ClearDecorators(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ClearDecorators(ISurface, int, int)
  nameWithType: CellSurfaceEditor.ClearDecorators(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.ClearDecorators(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ClearDecorators(this ISurface obj, int index, int count)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    content.vb: Public Shared Sub ClearDecorators(obj As ISurface, index As Integer, count As Integer)
  overload: SadConsole.CellSurfaceEditor.ClearDecorators*
  nameWithType.vb: CellSurfaceEditor.ClearDecorators(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.ClearDecorators(SadConsole.ISurface, Integer, Integer)
  name.vb: ClearDecorators(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String)
  commentId: M:SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String)
  id: Print(SadConsole.ISurface,System.Int32,System.Int32,System.String)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Print(ISurface, int, int, string)
  nameWithType: CellSurfaceEditor.Print(ISurface, int, int, string)
  fullName: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, int, int, string)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Print(this ISurface obj, int x, int y, string text)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: text
      type: System.String
    content.vb: Public Shared Sub Print(obj As ISurface, x As Integer, y As Integer, text As String)
  overload: SadConsole.CellSurfaceEditor.Print*
  nameWithType.vb: CellSurfaceEditor.Print(ISurface, Integer, Integer, String)
  fullName.vb: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, Integer, Integer, String)
  name.vb: Print(ISurface, Integer, Integer, String)
- uid: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color)
  commentId: M:SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color)
  id: Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Print(ISurface, int, int, string, Color)
  nameWithType: CellSurfaceEditor.Print(ISurface, int, int, string, Color)
  fullName: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, int, int, string, SadRogue.Primitives.Color)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Print(this ISurface obj, int x, int y, string text, Color foreground)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: text
      type: System.String
    - id: foreground
      type: SadRogue.Primitives.Color
    content.vb: Public Shared Sub Print(obj As ISurface, x As Integer, y As Integer, text As String, foreground As Color)
  overload: SadConsole.CellSurfaceEditor.Print*
  nameWithType.vb: CellSurfaceEditor.Print(ISurface, Integer, Integer, String, Color)
  fullName.vb: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, Integer, Integer, String, SadRogue.Primitives.Color)
  name.vb: Print(ISurface, Integer, Integer, String, Color)
- uid: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  commentId: M:SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  id: Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Print(ISurface, int, int, string, Color, Color)
  nameWithType: CellSurfaceEditor.Print(ISurface, int, int, string, Color, Color)
  fullName: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, int, int, string, SadRogue.Primitives.Color, SadRogue.Primitives.Color)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Print(this ISurface obj, int x, int y, string text, Color foreground, Color background)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: text
      type: System.String
    - id: foreground
      type: SadRogue.Primitives.Color
    - id: background
      type: SadRogue.Primitives.Color
    content.vb: Public Shared Sub Print(obj As ISurface, x As Integer, y As Integer, text As String, foreground As Color, background As Color)
  overload: SadConsole.CellSurfaceEditor.Print*
  nameWithType.vb: CellSurfaceEditor.Print(ISurface, Integer, Integer, String, Color, Color)
  fullName.vb: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, Integer, Integer, String, SadRogue.Primitives.Color, SadRogue.Primitives.Color)
  name.vb: Print(ISurface, Integer, Integer, String, Color, Color)
- uid: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror)
  commentId: M:SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror)
  id: Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Print(ISurface, int, int, string, Color, Color, Mirror)
  nameWithType: CellSurfaceEditor.Print(ISurface, int, int, string, Color, Color, Mirror)
  fullName: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, int, int, string, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadConsole.Mirror)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Print(this ISurface obj, int x, int y, string text, Color foreground, Color background, Mirror mirror)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: text
      type: System.String
    - id: foreground
      type: SadRogue.Primitives.Color
    - id: background
      type: SadRogue.Primitives.Color
    - id: mirror
      type: SadConsole.Mirror
    content.vb: Public Shared Sub Print(obj As ISurface, x As Integer, y As Integer, text As String, foreground As Color, background As Color, mirror As Mirror)
  overload: SadConsole.CellSurfaceEditor.Print*
  nameWithType.vb: CellSurfaceEditor.Print(ISurface, Integer, Integer, String, Color, Color, Mirror)
  fullName.vb: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, Integer, Integer, String, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadConsole.Mirror)
  name.vb: Print(ISurface, Integer, Integer, String, Color, Color, Mirror)
- uid: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,SadConsole.CellDecorator[])
  commentId: M:SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,SadConsole.CellDecorator[])
  id: Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Print(ISurface, int, int, string, Color, Color, Mirror, CellDecorator[])
  nameWithType: CellSurfaceEditor.Print(ISurface, int, int, string, Color, Color, Mirror, CellDecorator[])
  fullName: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, int, int, string, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadConsole.Mirror, SadConsole.CellDecorator[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Print(this ISurface obj, int x, int y, string text, Color foreground, Color background, Mirror mirror, CellDecorator[] decorators)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: text
      type: System.String
    - id: foreground
      type: SadRogue.Primitives.Color
    - id: background
      type: SadRogue.Primitives.Color
    - id: mirror
      type: SadConsole.Mirror
    - id: decorators
      type: SadConsole.CellDecorator[]
    content.vb: Public Shared Sub Print(obj As ISurface, x As Integer, y As Integer, text As String, foreground As Color, background As Color, mirror As Mirror, decorators As CellDecorator())
  overload: SadConsole.CellSurfaceEditor.Print*
  nameWithType.vb: CellSurfaceEditor.Print(ISurface, Integer, Integer, String, Color, Color, Mirror, CellDecorator())
  fullName.vb: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, Integer, Integer, String, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadConsole.Mirror, SadConsole.CellDecorator())
  name.vb: Print(ISurface, Integer, Integer, String, Color, Color, Mirror, CellDecorator())
- uid: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadConsole.Mirror)
  commentId: M:SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadConsole.Mirror)
  id: Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadConsole.Mirror)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Print(ISurface, int, int, string, Mirror)
  nameWithType: CellSurfaceEditor.Print(ISurface, int, int, string, Mirror)
  fullName: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, int, int, string, SadConsole.Mirror)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Print(this ISurface obj, int x, int y, string text, Mirror mirror)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: text
      type: System.String
    - id: mirror
      type: SadConsole.Mirror
    content.vb: Public Shared Sub Print(obj As ISurface, x As Integer, y As Integer, text As String, mirror As Mirror)
  overload: SadConsole.CellSurfaceEditor.Print*
  nameWithType.vb: CellSurfaceEditor.Print(ISurface, Integer, Integer, String, Mirror)
  fullName.vb: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, Integer, Integer, String, SadConsole.Mirror)
  name.vb: Print(ISurface, Integer, Integer, String, Mirror)
- uid: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadConsole.ColoredGlyphBase,SadConsole.Effects.ICellEffect)
  commentId: M:SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadConsole.ColoredGlyphBase,SadConsole.Effects.ICellEffect)
  id: Print(SadConsole.ISurface,System.Int32,System.Int32,System.String,SadConsole.ColoredGlyphBase,SadConsole.Effects.ICellEffect)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Print(ISurface, int, int, string, ColoredGlyphBase, ICellEffect?)
  nameWithType: CellSurfaceEditor.Print(ISurface, int, int, string, ColoredGlyphBase, ICellEffect?)
  fullName: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, int, int, string, SadConsole.ColoredGlyphBase, SadConsole.Effects.ICellEffect?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Print(this ISurface obj, int x, int y, string text, ColoredGlyphBase appearance, ICellEffect? effect = null)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: text
      type: System.String
    - id: appearance
      type: SadConsole.ColoredGlyphBase
    - id: effect
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Shared Sub Print(obj As ISurface, x As Integer, y As Integer, text As String, appearance As ColoredGlyphBase, effect As ICellEffect = Nothing)
  overload: SadConsole.CellSurfaceEditor.Print*
  nameWithType.vb: CellSurfaceEditor.Print(ISurface, Integer, Integer, String, ColoredGlyphBase, ICellEffect)
  fullName.vb: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, Integer, Integer, String, SadConsole.ColoredGlyphBase, SadConsole.Effects.ICellEffect)
  name.vb: Print(ISurface, Integer, Integer, String, ColoredGlyphBase, ICellEffect)
- uid: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredString)
  commentId: M:SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredString)
  id: Print(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredString)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Print(ISurface, int, int, ColoredString)
  nameWithType: CellSurfaceEditor.Print(ISurface, int, int, ColoredString)
  fullName: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, int, int, SadConsole.ColoredString)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Print(this ISurface obj, int x, int y, ColoredString text)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: text
      type: SadConsole.ColoredString
    content.vb: Public Shared Sub Print(obj As ISurface, x As Integer, y As Integer, text As ColoredString)
  overload: SadConsole.CellSurfaceEditor.Print*
  nameWithType.vb: CellSurfaceEditor.Print(ISurface, Integer, Integer, ColoredString)
  fullName.vb: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, Integer, Integer, SadConsole.ColoredString)
  name.vb: Print(ISurface, Integer, Integer, ColoredString)
- uid: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredGlyphBase[])
  commentId: M:SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredGlyphBase[])
  id: Print(SadConsole.ISurface,System.Int32,System.Int32,SadConsole.ColoredGlyphBase[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Print(ISurface, int, int, ColoredGlyphBase[])
  nameWithType: CellSurfaceEditor.Print(ISurface, int, int, ColoredGlyphBase[])
  fullName: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, int, int, SadConsole.ColoredGlyphBase[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Print(this ISurface obj, int x, int y, ColoredGlyphBase[] glyphs)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: glyphs
      type: SadConsole.ColoredGlyphBase[]
    content.vb: Public Shared Sub Print(obj As ISurface, x As Integer, y As Integer, glyphs As ColoredGlyphBase())
  overload: SadConsole.CellSurfaceEditor.Print*
  nameWithType.vb: CellSurfaceEditor.Print(ISurface, Integer, Integer, ColoredGlyphBase())
  fullName.vb: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, Integer, Integer, SadConsole.ColoredGlyphBase())
  name.vb: Print(ISurface, Integer, Integer, ColoredGlyphBase())
- uid: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase})
  commentId: M:SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase})
  id: Print(SadConsole.ISurface,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase})
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Print(ISurface, int, int, IEnumerable<ColoredGlyphBase>)
  nameWithType: CellSurfaceEditor.Print(ISurface, int, int, IEnumerable<ColoredGlyphBase>)
  fullName: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, int, int, System.Collections.Generic.IEnumerable<SadConsole.ColoredGlyphBase>)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Print(this ISurface obj, int x, int y, IEnumerable<ColoredGlyphBase> glyphs)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: glyphs
      type: System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase}
    content.vb: Public Shared Sub Print(obj As ISurface, x As Integer, y As Integer, glyphs As IEnumerable(Of ColoredGlyphBase))
  overload: SadConsole.CellSurfaceEditor.Print*
  nameWithType.vb: CellSurfaceEditor.Print(ISurface, Integer, Integer, IEnumerable(Of ColoredGlyphBase))
  fullName.vb: SadConsole.CellSurfaceEditor.Print(SadConsole.ISurface, Integer, Integer, System.Collections.Generic.IEnumerable(Of SadConsole.ColoredGlyphBase))
  name.vb: Print(ISurface, Integer, Integer, IEnumerable(Of ColoredGlyphBase))
- uid: SadConsole.CellSurfaceEditor.GetString(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetString(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  id: GetString(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetString(ISurface, int, int, int)
  nameWithType: CellSurfaceEditor.GetString(ISurface, int, int, int)
  fullName: SadConsole.CellSurfaceEditor.GetString(SadConsole.ISurface, int, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static string GetString(this ISurface obj, int x, int y, int length)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function GetString(obj As ISurface, x As Integer, y As Integer, length As Integer) As String
  overload: SadConsole.CellSurfaceEditor.GetString*
  nameWithType.vb: CellSurfaceEditor.GetString(ISurface, Integer, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetString(SadConsole.ISurface, Integer, Integer, Integer)
  name.vb: GetString(ISurface, Integer, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.GetString(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetString(SadConsole.ISurface,System.Int32,System.Int32)
  id: GetString(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetString(ISurface, int, int)
  nameWithType: CellSurfaceEditor.GetString(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.GetString(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static string GetString(this ISurface obj, int index, int length)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function GetString(obj As ISurface, index As Integer, length As Integer) As String
  overload: SadConsole.CellSurfaceEditor.GetString*
  nameWithType.vb: CellSurfaceEditor.GetString(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetString(SadConsole.ISurface, Integer, Integer)
  name.vb: GetString(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.GetStringColored(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetStringColored(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  id: GetStringColored(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetStringColored(ISurface, int, int, int)
  nameWithType: CellSurfaceEditor.GetStringColored(ISurface, int, int, int)
  fullName: SadConsole.CellSurfaceEditor.GetStringColored(SadConsole.ISurface, int, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ColoredString GetStringColored(this ISurface obj, int x, int y, int length)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: SadConsole.ColoredString
    content.vb: Public Shared Function GetStringColored(obj As ISurface, x As Integer, y As Integer, length As Integer) As ColoredString
  overload: SadConsole.CellSurfaceEditor.GetStringColored*
  nameWithType.vb: CellSurfaceEditor.GetStringColored(ISurface, Integer, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetStringColored(SadConsole.ISurface, Integer, Integer, Integer)
  name.vb: GetStringColored(ISurface, Integer, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.GetStringColored(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.GetStringColored(SadConsole.ISurface,System.Int32,System.Int32)
  id: GetStringColored(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: GetStringColored(ISurface, int, int)
  nameWithType: CellSurfaceEditor.GetStringColored(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.GetStringColored(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ColoredString GetStringColored(this ISurface obj, int index, int length)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: index
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: SadConsole.ColoredString
    content.vb: Public Shared Function GetStringColored(obj As ISurface, index As Integer, length As Integer) As ColoredString
  overload: SadConsole.CellSurfaceEditor.GetStringColored*
  nameWithType.vb: CellSurfaceEditor.GetStringColored(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.GetStringColored(SadConsole.ISurface, Integer, Integer)
  name.vb: GetStringColored(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.ClearShiftValues(SadConsole.ISurface)
  commentId: M:SadConsole.CellSurfaceEditor.ClearShiftValues(SadConsole.ISurface)
  id: ClearShiftValues(SadConsole.ISurface)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ClearShiftValues(ISurface)
  nameWithType: CellSurfaceEditor.ClearShiftValues(ISurface)
  fullName: SadConsole.CellSurfaceEditor.ClearShiftValues(SadConsole.ISurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ClearShiftValues(this ISurface obj)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    content.vb: Public Shared Sub ClearShiftValues(obj As ISurface)
  overload: SadConsole.CellSurfaceEditor.ClearShiftValues*
- uid: SadConsole.CellSurfaceEditor.ShiftRow(SadConsole.ISurface,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftRow(SadConsole.ISurface,System.Int32,System.Int32,System.Boolean)
  id: ShiftRow(SadConsole.ISurface,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftRow(ISurface, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftRow(ISurface, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftRow(SadConsole.ISurface, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftRow(this ISurface obj, int row, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: row
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftRow(obj As ISurface, row As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftRow*
  nameWithType.vb: CellSurfaceEditor.ShiftRow(ISurface, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftRow(SadConsole.ISurface, Integer, Integer, Boolean)
  name.vb: ShiftRow(ISurface, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftRow(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftRow(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ShiftRow(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftRow(ISurface, int, int, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftRow(ISurface, int, int, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftRow(SadConsole.ISurface, int, int, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftRow(this ISurface obj, int row, int startingX, int count, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: row
      type: System.Int32
    - id: startingX
      type: System.Int32
    - id: count
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftRow(obj As ISurface, row As Integer, startingX As Integer, count As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftRow*
  nameWithType.vb: CellSurfaceEditor.ShiftRow(ISurface, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftRow(SadConsole.ISurface, Integer, Integer, Integer, Integer, Boolean)
  name.vb: ShiftRow(ISurface, Integer, Integer, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftRowRight(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftRowRight(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ShiftRowRight(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftRowRight(ISurface, int, int, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftRowRight(ISurface, int, int, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftRowRight(SadConsole.ISurface, int, int, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftRowRight(this ISurface obj, int row, int startingX, int count, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: row
      type: System.Int32
    - id: startingX
      type: System.Int32
    - id: count
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftRowRight(obj As ISurface, row As Integer, startingX As Integer, count As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftRowRight*
  nameWithType.vb: CellSurfaceEditor.ShiftRowRight(ISurface, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftRowRight(SadConsole.ISurface, Integer, Integer, Integer, Integer, Boolean)
  name.vb: ShiftRowRight(ISurface, Integer, Integer, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftRowLeft(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftRowLeft(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ShiftRowLeft(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftRowLeft(ISurface, int, int, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftRowLeft(ISurface, int, int, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftRowLeft(SadConsole.ISurface, int, int, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftRowLeft(this ISurface obj, int row, int startingX, int count, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: row
      type: System.Int32
    - id: startingX
      type: System.Int32
    - id: count
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftRowLeft(obj As ISurface, row As Integer, startingX As Integer, count As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftRowLeft*
  nameWithType.vb: CellSurfaceEditor.ShiftRowLeft(ISurface, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftRowLeft(SadConsole.ISurface, Integer, Integer, Integer, Integer, Boolean)
  name.vb: ShiftRowLeft(ISurface, Integer, Integer, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftRowRightUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftRowRightUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ShiftRowRightUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftRowRightUnchecked(ISurface, int, int, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftRowRightUnchecked(ISurface, int, int, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftRowRightUnchecked(SadConsole.ISurface, int, int, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftRowRightUnchecked(this ISurface obj, int row, int startingX, int count, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: row
      type: System.Int32
    - id: startingX
      type: System.Int32
    - id: count
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftRowRightUnchecked(obj As ISurface, row As Integer, startingX As Integer, count As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftRowRightUnchecked*
  nameWithType.vb: CellSurfaceEditor.ShiftRowRightUnchecked(ISurface, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftRowRightUnchecked(SadConsole.ISurface, Integer, Integer, Integer, Integer, Boolean)
  name.vb: ShiftRowRightUnchecked(ISurface, Integer, Integer, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftRowLeftUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftRowLeftUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ShiftRowLeftUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftRowLeftUnchecked(ISurface, int, int, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftRowLeftUnchecked(ISurface, int, int, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftRowLeftUnchecked(SadConsole.ISurface, int, int, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftRowLeftUnchecked(this ISurface obj, int row, int startingX, int count, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: row
      type: System.Int32
    - id: startingX
      type: System.Int32
    - id: count
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftRowLeftUnchecked(obj As ISurface, row As Integer, startingX As Integer, count As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftRowLeftUnchecked*
  nameWithType.vb: CellSurfaceEditor.ShiftRowLeftUnchecked(ISurface, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftRowLeftUnchecked(SadConsole.ISurface, Integer, Integer, Integer, Integer, Boolean)
  name.vb: ShiftRowLeftUnchecked(ISurface, Integer, Integer, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftColumn(SadConsole.ISurface,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftColumn(SadConsole.ISurface,System.Int32,System.Int32,System.Boolean)
  id: ShiftColumn(SadConsole.ISurface,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftColumn(ISurface, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftColumn(ISurface, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftColumn(SadConsole.ISurface, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftColumn(this ISurface obj, int col, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: col
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftColumn(obj As ISurface, col As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftColumn*
  nameWithType.vb: CellSurfaceEditor.ShiftColumn(ISurface, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftColumn(SadConsole.ISurface, Integer, Integer, Boolean)
  name.vb: ShiftColumn(ISurface, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftColumn(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftColumn(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ShiftColumn(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftColumn(ISurface, int, int, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftColumn(ISurface, int, int, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftColumn(SadConsole.ISurface, int, int, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftColumn(this ISurface obj, int col, int startingY, int count, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: col
      type: System.Int32
    - id: startingY
      type: System.Int32
    - id: count
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftColumn(obj As ISurface, col As Integer, startingY As Integer, count As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftColumn*
  nameWithType.vb: CellSurfaceEditor.ShiftColumn(ISurface, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftColumn(SadConsole.ISurface, Integer, Integer, Integer, Integer, Boolean)
  name.vb: ShiftColumn(ISurface, Integer, Integer, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftColumnDown(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftColumnDown(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ShiftColumnDown(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftColumnDown(ISurface, int, int, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftColumnDown(ISurface, int, int, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftColumnDown(SadConsole.ISurface, int, int, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftColumnDown(this ISurface obj, int col, int startingY, int count, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: col
      type: System.Int32
    - id: startingY
      type: System.Int32
    - id: count
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftColumnDown(obj As ISurface, col As Integer, startingY As Integer, count As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftColumnDown*
  nameWithType.vb: CellSurfaceEditor.ShiftColumnDown(ISurface, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftColumnDown(SadConsole.ISurface, Integer, Integer, Integer, Integer, Boolean)
  name.vb: ShiftColumnDown(ISurface, Integer, Integer, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftColumnUp(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftColumnUp(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ShiftColumnUp(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftColumnUp(ISurface, int, int, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftColumnUp(ISurface, int, int, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftColumnUp(SadConsole.ISurface, int, int, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftColumnUp(this ISurface obj, int col, int startingY, int count, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: col
      type: System.Int32
    - id: startingY
      type: System.Int32
    - id: count
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftColumnUp(obj As ISurface, col As Integer, startingY As Integer, count As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftColumnUp*
  nameWithType.vb: CellSurfaceEditor.ShiftColumnUp(ISurface, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftColumnUp(SadConsole.ISurface, Integer, Integer, Integer, Integer, Boolean)
  name.vb: ShiftColumnUp(ISurface, Integer, Integer, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftColumnDownUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftColumnDownUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ShiftColumnDownUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftColumnDownUnchecked(ISurface, int, int, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftColumnDownUnchecked(ISurface, int, int, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftColumnDownUnchecked(SadConsole.ISurface, int, int, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftColumnDownUnchecked(this ISurface obj, int col, int startingY, int count, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: col
      type: System.Int32
    - id: startingY
      type: System.Int32
    - id: count
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftColumnDownUnchecked(obj As ISurface, col As Integer, startingY As Integer, count As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftColumnDownUnchecked*
  nameWithType.vb: CellSurfaceEditor.ShiftColumnDownUnchecked(ISurface, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftColumnDownUnchecked(SadConsole.ISurface, Integer, Integer, Integer, Integer, Boolean)
  name.vb: ShiftColumnDownUnchecked(ISurface, Integer, Integer, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftColumnUpUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftColumnUpUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ShiftColumnUpUnchecked(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftColumnUpUnchecked(ISurface, int, int, int, int, bool)
  nameWithType: CellSurfaceEditor.ShiftColumnUpUnchecked(ISurface, int, int, int, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftColumnUpUnchecked(SadConsole.ISurface, int, int, int, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftColumnUpUnchecked(this ISurface obj, int col, int startingY, int count, int amount, bool wrap)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: col
      type: System.Int32
    - id: startingY
      type: System.Int32
    - id: count
      type: System.Int32
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftColumnUpUnchecked(obj As ISurface, col As Integer, startingY As Integer, count As Integer, amount As Integer, wrap As Boolean)
  overload: SadConsole.CellSurfaceEditor.ShiftColumnUpUnchecked*
  nameWithType.vb: CellSurfaceEditor.ShiftColumnUpUnchecked(ISurface, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftColumnUpUnchecked(SadConsole.ISurface, Integer, Integer, Integer, Integer, Boolean)
  name.vb: ShiftColumnUpUnchecked(ISurface, Integer, Integer, Integer, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftUp(SadConsole.ISurface)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftUp(SadConsole.ISurface)
  id: ShiftUp(SadConsole.ISurface)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftUp(ISurface)
  nameWithType: CellSurfaceEditor.ShiftUp(ISurface)
  fullName: SadConsole.CellSurfaceEditor.ShiftUp(SadConsole.ISurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftUp(this ISurface obj)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    content.vb: Public Shared Sub ShiftUp(obj As ISurface)
  overload: SadConsole.CellSurfaceEditor.ShiftUp*
- uid: SadConsole.CellSurfaceEditor.ShiftUp(SadConsole.ISurface,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftUp(SadConsole.ISurface,System.Int32,System.Boolean)
  id: ShiftUp(SadConsole.ISurface,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftUp(ISurface, int, bool)
  nameWithType: CellSurfaceEditor.ShiftUp(ISurface, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftUp(SadConsole.ISurface, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftUp(this ISurface obj, int amount, bool wrap = false)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftUp(obj As ISurface, amount As Integer, wrap As Boolean = False)
  overload: SadConsole.CellSurfaceEditor.ShiftUp*
  nameWithType.vb: CellSurfaceEditor.ShiftUp(ISurface, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftUp(SadConsole.ISurface, Integer, Boolean)
  name.vb: ShiftUp(ISurface, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftDown(SadConsole.ISurface)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftDown(SadConsole.ISurface)
  id: ShiftDown(SadConsole.ISurface)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftDown(ISurface)
  nameWithType: CellSurfaceEditor.ShiftDown(ISurface)
  fullName: SadConsole.CellSurfaceEditor.ShiftDown(SadConsole.ISurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftDown(this ISurface obj)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    content.vb: Public Shared Sub ShiftDown(obj As ISurface)
  overload: SadConsole.CellSurfaceEditor.ShiftDown*
- uid: SadConsole.CellSurfaceEditor.ShiftDown(SadConsole.ISurface,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftDown(SadConsole.ISurface,System.Int32,System.Boolean)
  id: ShiftDown(SadConsole.ISurface,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftDown(ISurface, int, bool)
  nameWithType: CellSurfaceEditor.ShiftDown(ISurface, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftDown(SadConsole.ISurface, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftDown(this ISurface obj, int amount, bool wrap = false)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftDown(obj As ISurface, amount As Integer, wrap As Boolean = False)
  overload: SadConsole.CellSurfaceEditor.ShiftDown*
  nameWithType.vb: CellSurfaceEditor.ShiftDown(ISurface, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftDown(SadConsole.ISurface, Integer, Boolean)
  name.vb: ShiftDown(ISurface, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftRight(SadConsole.ISurface)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftRight(SadConsole.ISurface)
  id: ShiftRight(SadConsole.ISurface)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftRight(ISurface)
  nameWithType: CellSurfaceEditor.ShiftRight(ISurface)
  fullName: SadConsole.CellSurfaceEditor.ShiftRight(SadConsole.ISurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftRight(this ISurface obj)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    content.vb: Public Shared Sub ShiftRight(obj As ISurface)
  overload: SadConsole.CellSurfaceEditor.ShiftRight*
- uid: SadConsole.CellSurfaceEditor.ShiftRight(SadConsole.ISurface,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftRight(SadConsole.ISurface,System.Int32,System.Boolean)
  id: ShiftRight(SadConsole.ISurface,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftRight(ISurface, int, bool)
  nameWithType: CellSurfaceEditor.ShiftRight(ISurface, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftRight(SadConsole.ISurface, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftRight(this ISurface obj, int amount, bool wrap = false)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftRight(obj As ISurface, amount As Integer, wrap As Boolean = False)
  overload: SadConsole.CellSurfaceEditor.ShiftRight*
  nameWithType.vb: CellSurfaceEditor.ShiftRight(ISurface, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftRight(SadConsole.ISurface, Integer, Boolean)
  name.vb: ShiftRight(ISurface, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.ShiftLeft(SadConsole.ISurface)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftLeft(SadConsole.ISurface)
  id: ShiftLeft(SadConsole.ISurface)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftLeft(ISurface)
  nameWithType: CellSurfaceEditor.ShiftLeft(ISurface)
  fullName: SadConsole.CellSurfaceEditor.ShiftLeft(SadConsole.ISurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftLeft(this ISurface obj)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    content.vb: Public Shared Sub ShiftLeft(obj As ISurface)
  overload: SadConsole.CellSurfaceEditor.ShiftLeft*
- uid: SadConsole.CellSurfaceEditor.ShiftLeft(SadConsole.ISurface,System.Int32,System.Boolean)
  commentId: M:SadConsole.CellSurfaceEditor.ShiftLeft(SadConsole.ISurface,System.Int32,System.Boolean)
  id: ShiftLeft(SadConsole.ISurface,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ShiftLeft(ISurface, int, bool)
  nameWithType: CellSurfaceEditor.ShiftLeft(ISurface, int, bool)
  fullName: SadConsole.CellSurfaceEditor.ShiftLeft(SadConsole.ISurface, int, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ShiftLeft(this ISurface obj, int amount, bool wrap = false)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: amount
      type: System.Int32
    - id: wrap
      type: System.Boolean
    content.vb: Public Shared Sub ShiftLeft(obj As ISurface, amount As Integer, wrap As Boolean = False)
  overload: SadConsole.CellSurfaceEditor.ShiftLeft*
  nameWithType.vb: CellSurfaceEditor.ShiftLeft(ISurface, Integer, Boolean)
  fullName.vb: SadConsole.CellSurfaceEditor.ShiftLeft(SadConsole.ISurface, Integer, Boolean)
  name.vb: ShiftLeft(ISurface, Integer, Boolean)
- uid: SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  id: Erase(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Erase(ISurface, int, int, int)
  nameWithType: CellSurfaceEditor.Erase(ISurface, int, int, int)
  fullName: SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface, int, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ColoredGlyphBase[] Erase(this ISurface obj, int x, int y, int count)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: SadConsole.ColoredGlyphBase[]
    content.vb: Public Shared Function [Erase](obj As ISurface, x As Integer, y As Integer, count As Integer) As ColoredGlyphBase()
  overload: SadConsole.CellSurfaceEditor.Erase*
  nameWithType.vb: CellSurfaceEditor.Erase(ISurface, Integer, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface, Integer, Integer, Integer)
  name.vb: Erase(ISurface, Integer, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface,System.Int32,System.Int32)
  id: Erase(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Erase(ISurface, int, int)
  nameWithType: CellSurfaceEditor.Erase(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Erase(this ISurface obj, int x, int y)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    content.vb: Public Shared Sub [Erase](obj As ISurface, x As Integer, y As Integer)
  overload: SadConsole.CellSurfaceEditor.Erase*
  nameWithType.vb: CellSurfaceEditor.Erase(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface, Integer, Integer)
  name.vb: Erase(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface)
  commentId: M:SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface)
  id: Erase(SadConsole.ISurface)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Erase(ISurface)
  nameWithType: CellSurfaceEditor.Erase(ISurface)
  fullName: SadConsole.CellSurfaceEditor.Erase(SadConsole.ISurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Erase(this ISurface obj)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    content.vb: Public Shared Sub [Erase](obj As ISurface)
  overload: SadConsole.CellSurfaceEditor.Erase*
- uid: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface)
  commentId: M:SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface)
  id: Clear(SadConsole.ISurface)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Clear(ISurface)
  nameWithType: CellSurfaceEditor.Clear(ISurface)
  fullName: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Clear(this ISurface obj)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    content.vb: Public Shared Sub Clear(obj As ISurface)
  overload: SadConsole.CellSurfaceEditor.Clear*
- uid: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,System.Int32,System.Int32)
  id: Clear(SadConsole.ISurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Clear(ISurface, int, int)
  nameWithType: CellSurfaceEditor.Clear(ISurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Clear(this ISurface obj, int x, int y)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    content.vb: Public Shared Sub Clear(obj As ISurface, x As Integer, y As Integer)
  overload: SadConsole.CellSurfaceEditor.Clear*
  nameWithType.vb: CellSurfaceEditor.Clear(ISurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface, Integer, Integer)
  name.vb: Clear(ISurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  id: Clear(SadConsole.ISurface,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Clear(ISurface, int, int, int)
  nameWithType: CellSurfaceEditor.Clear(ISurface, int, int, int)
  fullName: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface, int, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Clear(this ISurface obj, int x, int y, int length)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub Clear(obj As ISurface, x As Integer, y As Integer, length As Integer)
  overload: SadConsole.CellSurfaceEditor.Clear*
  nameWithType.vb: CellSurfaceEditor.Clear(ISurface, Integer, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface, Integer, Integer, Integer)
  name.vb: Clear(ISurface, Integer, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  commentId: M:SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  id: Clear(SadConsole.ISurface,SadRogue.Primitives.Rectangle)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Clear(ISurface, Rectangle)
  nameWithType: CellSurfaceEditor.Clear(ISurface, Rectangle)
  fullName: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface, SadRogue.Primitives.Rectangle)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Clear(this ISurface obj, Rectangle area)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: area
      type: SadRogue.Primitives.Rectangle
    content.vb: Public Shared Sub Clear(obj As ISurface, area As Rectangle)
  overload: SadConsole.CellSurfaceEditor.Clear*
- uid: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point})
  commentId: M:SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point})
  id: Clear(SadConsole.ISurface,System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point})
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Clear(ISurface, IEnumerable<Point>)
  nameWithType: CellSurfaceEditor.Clear(ISurface, IEnumerable<Point>)
  fullName: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface, System.Collections.Generic.IEnumerable<SadRogue.Primitives.Point>)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Clear(this ISurface obj, IEnumerable<Point> cellPositions)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: cellPositions
      type: System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point}
    content.vb: Public Shared Sub Clear(obj As ISurface, cellPositions As IEnumerable(Of Point))
  overload: SadConsole.CellSurfaceEditor.Clear*
  nameWithType.vb: CellSurfaceEditor.Clear(ISurface, IEnumerable(Of Point))
  fullName.vb: SadConsole.CellSurfaceEditor.Clear(SadConsole.ISurface, System.Collections.Generic.IEnumerable(Of SadRogue.Primitives.Point))
  name.vb: Clear(ISurface, IEnumerable(Of Point))
- uid: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,SadConsole.ColoredGlyphBase)
  id: Fill(SadConsole.ISurface,SadConsole.ColoredGlyphBase)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Fill(ISurface, ColoredGlyphBase)
  nameWithType: CellSurfaceEditor.Fill(ISurface, ColoredGlyphBase)
  fullName: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ColoredGlyphBase[] Fill(this ISurface obj, ColoredGlyphBase iconAppearance)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: iconAppearance
      type: SadConsole.ColoredGlyphBase
    return:
      type: SadConsole.ColoredGlyphBase[]
    content.vb: Public Shared Function Fill(obj As ISurface, iconAppearance As ColoredGlyphBase) As ColoredGlyphBase()
  overload: SadConsole.CellSurfaceEditor.Fill*
- uid: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  commentId: M:SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  id: Fill(SadConsole.ISurface,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Fill(ISurface, Color?, Color?, int?, Mirror?)
  nameWithType: CellSurfaceEditor.Fill(ISurface, Color?, Color?, int?, Mirror?)
  fullName: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, int?, SadConsole.Mirror?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ColoredGlyphBase[] Fill(this ISurface obj, Color? foreground = null, Color? background = null, int? glyph = null, Mirror? mirror = null)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: foreground
      type: System.Nullable{SadRogue.Primitives.Color}
    - id: background
      type: System.Nullable{SadRogue.Primitives.Color}
    - id: glyph
      type: System.Nullable{System.Int32}
    - id: mirror
      type: System.Nullable{SadConsole.Mirror}
    return:
      type: SadConsole.ColoredGlyphBase[]
    content.vb: Public Shared Function Fill(obj As ISurface, foreground As Color? = Nothing, background As Color? = Nothing, glyph As Integer? = Nothing, mirror As Mirror? = Nothing) As ColoredGlyphBase()
  overload: SadConsole.CellSurfaceEditor.Fill*
  nameWithType.vb: CellSurfaceEditor.Fill(ISurface, Color?, Color?, Integer?, Mirror?)
  fullName.vb: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, Integer?, SadConsole.Mirror?)
  name.vb: Fill(ISurface, Color?, Color?, Integer?, Mirror?)
- uid: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  commentId: M:SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  id: Fill(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Fill(ISurface, int, int, int, Color?, Color?, int?, Mirror?)
  nameWithType: CellSurfaceEditor.Fill(ISurface, int, int, int, Color?, Color?, int?, Mirror?)
  fullName: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface, int, int, int, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, int?, SadConsole.Mirror?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ColoredGlyphBase[] Fill(this ISurface obj, int x, int y, int length, Color? foreground = null, Color? background = null, int? glyph = null, Mirror? mirror = null)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: length
      type: System.Int32
    - id: foreground
      type: System.Nullable{SadRogue.Primitives.Color}
    - id: background
      type: System.Nullable{SadRogue.Primitives.Color}
    - id: glyph
      type: System.Nullable{System.Int32}
    - id: mirror
      type: System.Nullable{SadConsole.Mirror}
    return:
      type: SadConsole.ColoredGlyphBase[]
    content.vb: Public Shared Function Fill(obj As ISurface, x As Integer, y As Integer, length As Integer, foreground As Color? = Nothing, background As Color? = Nothing, glyph As Integer? = Nothing, mirror As Mirror? = Nothing) As ColoredGlyphBase()
  overload: SadConsole.CellSurfaceEditor.Fill*
  nameWithType.vb: CellSurfaceEditor.Fill(ISurface, Integer, Integer, Integer, Color?, Color?, Integer?, Mirror?)
  fullName.vb: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface, Integer, Integer, Integer, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, Integer?, SadConsole.Mirror?)
  name.vb: Fill(ISurface, Integer, Integer, Integer, Color?, Color?, Integer?, Mirror?)
- uid: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,SadRogue.Primitives.Rectangle,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  commentId: M:SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface,SadRogue.Primitives.Rectangle,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  id: Fill(SadConsole.ISurface,SadRogue.Primitives.Rectangle,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{System.Int32},System.Nullable{SadConsole.Mirror})
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Fill(ISurface, Rectangle, Color?, Color?, int?, Mirror?)
  nameWithType: CellSurfaceEditor.Fill(ISurface, Rectangle, Color?, Color?, int?, Mirror?)
  fullName: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface, SadRogue.Primitives.Rectangle, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, int?, SadConsole.Mirror?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static ColoredGlyphBase[] Fill(this ISurface obj, Rectangle area, Color? foreground = null, Color? background = null, int? glyph = null, Mirror? mirror = null)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: area
      type: SadRogue.Primitives.Rectangle
    - id: foreground
      type: System.Nullable{SadRogue.Primitives.Color}
    - id: background
      type: System.Nullable{SadRogue.Primitives.Color}
    - id: glyph
      type: System.Nullable{System.Int32}
    - id: mirror
      type: System.Nullable{SadConsole.Mirror}
    return:
      type: SadConsole.ColoredGlyphBase[]
    content.vb: Public Shared Function Fill(obj As ISurface, area As Rectangle, foreground As Color? = Nothing, background As Color? = Nothing, glyph As Integer? = Nothing, mirror As Mirror? = Nothing) As ColoredGlyphBase()
  overload: SadConsole.CellSurfaceEditor.Fill*
  nameWithType.vb: CellSurfaceEditor.Fill(ISurface, Rectangle, Color?, Color?, Integer?, Mirror?)
  fullName.vb: SadConsole.CellSurfaceEditor.Fill(SadConsole.ISurface, SadRogue.Primitives.Rectangle, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, Integer?, SadConsole.Mirror?)
  name.vb: Fill(ISurface, Rectangle, Color?, Color?, Integer?, Mirror?)
- uid: SadConsole.CellSurfaceEditor.DrawLine(SadConsole.ISurface,SadRogue.Primitives.Point,SadRogue.Primitives.Point,System.Nullable{System.Int32},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadConsole.Mirror})
  commentId: M:SadConsole.CellSurfaceEditor.DrawLine(SadConsole.ISurface,SadRogue.Primitives.Point,SadRogue.Primitives.Point,System.Nullable{System.Int32},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadConsole.Mirror})
  id: DrawLine(SadConsole.ISurface,SadRogue.Primitives.Point,SadRogue.Primitives.Point,System.Nullable{System.Int32},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadConsole.Mirror})
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: DrawLine(ISurface, Point, Point, int?, Color?, Color?, Mirror?)
  nameWithType: CellSurfaceEditor.DrawLine(ISurface, Point, Point, int?, Color?, Color?, Mirror?)
  fullName: SadConsole.CellSurfaceEditor.DrawLine(SadConsole.ISurface, SadRogue.Primitives.Point, SadRogue.Primitives.Point, int?, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, SadConsole.Mirror?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static IEnumerable<ColoredGlyphBase> DrawLine(this ISurface obj, Point start, Point end, int? glyph, Color? foreground = null, Color? background = null, Mirror? mirror = null)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: start
      type: SadRogue.Primitives.Point
    - id: end
      type: SadRogue.Primitives.Point
    - id: glyph
      type: System.Nullable{System.Int32}
    - id: foreground
      type: System.Nullable{SadRogue.Primitives.Color}
    - id: background
      type: System.Nullable{SadRogue.Primitives.Color}
    - id: mirror
      type: System.Nullable{SadConsole.Mirror}
    return:
      type: System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase}
    content.vb: Public Shared Function DrawLine(obj As ISurface, start As Point, [end] As Point, glyph As Integer?, foreground As Color? = Nothing, background As Color? = Nothing, mirror As Mirror? = Nothing) As IEnumerable(Of ColoredGlyphBase)
  overload: SadConsole.CellSurfaceEditor.DrawLine*
  nameWithType.vb: CellSurfaceEditor.DrawLine(ISurface, Point, Point, Integer?, Color?, Color?, Mirror?)
  fullName.vb: SadConsole.CellSurfaceEditor.DrawLine(SadConsole.ISurface, SadRogue.Primitives.Point, SadRogue.Primitives.Point, Integer?, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, SadConsole.Mirror?)
  name.vb: DrawLine(ISurface, Point, Point, Integer?, Color?, Color?, Mirror?)
- uid: SadConsole.CellSurfaceEditor.DrawBox(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ShapeParameters)
  commentId: M:SadConsole.CellSurfaceEditor.DrawBox(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ShapeParameters)
  id: DrawBox(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ShapeParameters)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: DrawBox(ISurface, Rectangle, ShapeParameters)
  nameWithType: CellSurfaceEditor.DrawBox(ISurface, Rectangle, ShapeParameters)
  fullName: SadConsole.CellSurfaceEditor.DrawBox(SadConsole.ISurface, SadRogue.Primitives.Rectangle, SadConsole.ShapeParameters)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void DrawBox(this ISurface obj, Rectangle area, ShapeParameters parameters)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: area
      type: SadRogue.Primitives.Rectangle
    - id: parameters
      type: SadConsole.ShapeParameters
    content.vb: Public Shared Sub DrawBox(obj As ISurface, area As Rectangle, parameters As ShapeParameters)
  overload: SadConsole.CellSurfaceEditor.DrawBox*
- uid: SadConsole.CellSurfaceEditor.DrawCircle(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ShapeParameters)
  commentId: M:SadConsole.CellSurfaceEditor.DrawCircle(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ShapeParameters)
  id: DrawCircle(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ShapeParameters)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: DrawCircle(ISurface, Rectangle, ShapeParameters)
  nameWithType: CellSurfaceEditor.DrawCircle(ISurface, Rectangle, ShapeParameters)
  fullName: SadConsole.CellSurfaceEditor.DrawCircle(SadConsole.ISurface, SadRogue.Primitives.Rectangle, SadConsole.ShapeParameters)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void DrawCircle(this ISurface obj, Rectangle area, ShapeParameters parameters)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: area
      type: SadRogue.Primitives.Rectangle
    - id: parameters
      type: SadConsole.ShapeParameters
    content.vb: Public Shared Sub DrawCircle(obj As ISurface, area As Rectangle, parameters As ShapeParameters)
  overload: SadConsole.CellSurfaceEditor.DrawCircle*
- uid: SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface)
  commentId: M:SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface)
  id: ConnectLines(SadConsole.ISurface)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ConnectLines(ISurface)
  nameWithType: CellSurfaceEditor.ConnectLines(ISurface)
  fullName: SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ConnectLines(this ISurface obj)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    content.vb: Public Shared Sub ConnectLines(obj As ISurface)
  overload: SadConsole.CellSurfaceEditor.ConnectLines*
- uid: SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface,System.Int32[])
  commentId: M:SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface,System.Int32[])
  id: ConnectLines(SadConsole.ISurface,System.Int32[])
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ConnectLines(ISurface, int[])
  nameWithType: CellSurfaceEditor.ConnectLines(ISurface, int[])
  fullName: SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface, int[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ConnectLines(this ISurface obj, int[] lineStyle)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: lineStyle
      type: System.Int32[]
    content.vb: Public Shared Sub ConnectLines(obj As ISurface, lineStyle As Integer())
  overload: SadConsole.CellSurfaceEditor.ConnectLines*
  nameWithType.vb: CellSurfaceEditor.ConnectLines(ISurface, Integer())
  fullName.vb: SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface, Integer())
  name.vb: ConnectLines(ISurface, Integer())
- uid: SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface,System.Int32[],SadRogue.Primitives.Rectangle)
  commentId: M:SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface,System.Int32[],SadRogue.Primitives.Rectangle)
  id: ConnectLines(SadConsole.ISurface,System.Int32[],SadRogue.Primitives.Rectangle)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: ConnectLines(ISurface, int[], Rectangle)
  nameWithType: CellSurfaceEditor.ConnectLines(ISurface, int[], Rectangle)
  fullName: SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface, int[], SadRogue.Primitives.Rectangle)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void ConnectLines(this ISurface obj, int[] lineStyle, Rectangle area)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: lineStyle
      type: System.Int32[]
    - id: area
      type: SadRogue.Primitives.Rectangle
    content.vb: Public Shared Sub ConnectLines(obj As ISurface, lineStyle As Integer(), area As Rectangle)
  overload: SadConsole.CellSurfaceEditor.ConnectLines*
  nameWithType.vb: CellSurfaceEditor.ConnectLines(ISurface, Integer(), Rectangle)
  fullName.vb: SadConsole.CellSurfaceEditor.ConnectLines(SadConsole.ISurface, Integer(), SadRogue.Primitives.Rectangle)
  name.vb: ConnectLines(ISurface, Integer(), Rectangle)
- uid: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,SadConsole.ICellSurface)
  commentId: M:SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,SadConsole.ICellSurface)
  id: Copy(SadConsole.ISurface,SadConsole.ICellSurface)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Copy(ISurface, ICellSurface)
  nameWithType: CellSurfaceEditor.Copy(ISurface, ICellSurface)
  fullName: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface, SadConsole.ICellSurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Copy(this ISurface obj, ICellSurface destination)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: destination
      type: SadConsole.ICellSurface
    content.vb: Public Shared Sub Copy(obj As ISurface, destination As ICellSurface)
  overload: SadConsole.CellSurfaceEditor.Copy*
- uid: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,SadConsole.ICellSurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,SadConsole.ICellSurface,System.Int32,System.Int32)
  id: Copy(SadConsole.ISurface,SadConsole.ICellSurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Copy(ISurface, ICellSurface, int, int)
  nameWithType: CellSurfaceEditor.Copy(ISurface, ICellSurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface, SadConsole.ICellSurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Copy(this ISurface obj, ICellSurface destination, int x, int y)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: destination
      type: SadConsole.ICellSurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    content.vb: Public Shared Sub Copy(obj As ISurface, destination As ICellSurface, x As Integer, y As Integer)
  overload: SadConsole.CellSurfaceEditor.Copy*
  nameWithType.vb: CellSurfaceEditor.Copy(ISurface, ICellSurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface, SadConsole.ICellSurface, Integer, Integer)
  name.vb: Copy(ISurface, ICellSurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ICellSurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ICellSurface,System.Int32,System.Int32)
  id: Copy(SadConsole.ISurface,SadRogue.Primitives.Rectangle,SadConsole.ICellSurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Copy(ISurface, Rectangle, ICellSurface, int, int)
  nameWithType: CellSurfaceEditor.Copy(ISurface, Rectangle, ICellSurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface, SadRogue.Primitives.Rectangle, SadConsole.ICellSurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Copy(this ISurface obj, Rectangle area, ICellSurface destination, int destinationX, int destinationY)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: area
      type: SadRogue.Primitives.Rectangle
    - id: destination
      type: SadConsole.ICellSurface
    - id: destinationX
      type: System.Int32
    - id: destinationY
      type: System.Int32
    content.vb: Public Shared Sub Copy(obj As ISurface, area As Rectangle, destination As ICellSurface, destinationX As Integer, destinationY As Integer)
  overload: SadConsole.CellSurfaceEditor.Copy*
  nameWithType.vb: CellSurfaceEditor.Copy(ISurface, Rectangle, ICellSurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface, SadRogue.Primitives.Rectangle, SadConsole.ICellSurface, Integer, Integer)
  name.vb: Copy(ISurface, Rectangle, ICellSurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,SadConsole.ICellSurface,System.Int32,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,SadConsole.ICellSurface,System.Int32,System.Int32)
  id: Copy(SadConsole.ISurface,System.Int32,System.Int32,System.Int32,System.Int32,SadConsole.ICellSurface,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: Copy(ISurface, int, int, int, int, ICellSurface, int, int)
  nameWithType: CellSurfaceEditor.Copy(ISurface, int, int, int, int, ICellSurface, int, int)
  fullName: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface, int, int, int, int, SadConsole.ICellSurface, int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void Copy(this ISurface obj, int x, int y, int width, int height, ICellSurface destination, int destinationX, int destinationY)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: destination
      type: SadConsole.ICellSurface
    - id: destinationX
      type: System.Int32
    - id: destinationY
      type: System.Int32
    content.vb: Public Shared Sub Copy(obj As ISurface, x As Integer, y As Integer, width As Integer, height As Integer, destination As ICellSurface, destinationX As Integer, destinationY As Integer)
  overload: SadConsole.CellSurfaceEditor.Copy*
  nameWithType.vb: CellSurfaceEditor.Copy(ISurface, Integer, Integer, Integer, Integer, ICellSurface, Integer, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.Copy(SadConsole.ISurface, Integer, Integer, Integer, Integer, SadConsole.ICellSurface, Integer, Integer)
  name.vb: Copy(ISurface, Integer, Integer, Integer, Integer, ICellSurface, Integer, Integer)
- uid: SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface,SadConsole.IFont)
  commentId: M:SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface,SadConsole.IFont)
  id: FillWithRandomGarbage(SadConsole.ISurface,SadConsole.IFont)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: FillWithRandomGarbage(ISurface, IFont)
  nameWithType: CellSurfaceEditor.FillWithRandomGarbage(ISurface, IFont)
  fullName: SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface, SadConsole.IFont)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void FillWithRandomGarbage(this ISurface obj, IFont associatedFont)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: associatedFont
      type: SadConsole.IFont
    content.vb: Public Shared Sub FillWithRandomGarbage(obj As ISurface, associatedFont As IFont)
  overload: SadConsole.CellSurfaceEditor.FillWithRandomGarbage*
- uid: SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface,System.Int32)
  id: FillWithRandomGarbage(SadConsole.ISurface,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: FillWithRandomGarbage(ISurface, int)
  nameWithType: CellSurfaceEditor.FillWithRandomGarbage(ISurface, int)
  fullName: SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void FillWithRandomGarbage(this ISurface obj, int maxGlyphValue)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: maxGlyphValue
      type: System.Int32
    content.vb: Public Shared Sub FillWithRandomGarbage(obj As ISurface, maxGlyphValue As Integer)
  overload: SadConsole.CellSurfaceEditor.FillWithRandomGarbage*
  nameWithType.vb: CellSurfaceEditor.FillWithRandomGarbage(ISurface, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface, Integer)
  name.vb: FillWithRandomGarbage(ISurface, Integer)
- uid: SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface,System.Int32,SadRogue.Primitives.Rectangle)
  commentId: M:SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface,System.Int32,SadRogue.Primitives.Rectangle)
  id: FillWithRandomGarbage(SadConsole.ISurface,System.Int32,SadRogue.Primitives.Rectangle)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: FillWithRandomGarbage(ISurface, int, Rectangle)
  nameWithType: CellSurfaceEditor.FillWithRandomGarbage(ISurface, int, Rectangle)
  fullName: SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface, int, SadRogue.Primitives.Rectangle)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void FillWithRandomGarbage(this ISurface obj, int maxGlyphValue, Rectangle area)
    parameters:
    - id: obj
      type: SadConsole.ISurface
    - id: maxGlyphValue
      type: System.Int32
    - id: area
      type: SadRogue.Primitives.Rectangle
    content.vb: Public Shared Sub FillWithRandomGarbage(obj As ISurface, maxGlyphValue As Integer, area As Rectangle)
  overload: SadConsole.CellSurfaceEditor.FillWithRandomGarbage*
  nameWithType.vb: CellSurfaceEditor.FillWithRandomGarbage(ISurface, Integer, Rectangle)
  fullName.vb: SadConsole.CellSurfaceEditor.FillWithRandomGarbage(SadConsole.ISurface, Integer, SadRogue.Primitives.Rectangle)
  name.vb: FillWithRandomGarbage(ISurface, Integer, Rectangle)
- uid: SadConsole.CellSurfaceEditor.PrintTheDraw(SadConsole.ICellSurface,System.Int32,System.String,SadConsole.Readers.TheDrawFont,SadConsole.HorizontalAlignment,System.Int32)
  commentId: M:SadConsole.CellSurfaceEditor.PrintTheDraw(SadConsole.ICellSurface,System.Int32,System.String,SadConsole.Readers.TheDrawFont,SadConsole.HorizontalAlignment,System.Int32)
  id: PrintTheDraw(SadConsole.ICellSurface,System.Int32,System.String,SadConsole.Readers.TheDrawFont,SadConsole.HorizontalAlignment,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: PrintTheDraw(ICellSurface, int, string, TheDrawFont, HorizontalAlignment, int)
  nameWithType: CellSurfaceEditor.PrintTheDraw(ICellSurface, int, string, TheDrawFont, HorizontalAlignment, int)
  fullName: SadConsole.CellSurfaceEditor.PrintTheDraw(SadConsole.ICellSurface, int, string, SadConsole.Readers.TheDrawFont, SadConsole.HorizontalAlignment, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void PrintTheDraw(this ICellSurface cellSurface, int y, string text, TheDrawFont drawFont, HorizontalAlignment alignment, int padding = 0)
    parameters:
    - id: cellSurface
      type: SadConsole.ICellSurface
    - id: y
      type: System.Int32
    - id: text
      type: System.String
    - id: drawFont
      type: SadConsole.Readers.TheDrawFont
    - id: alignment
      type: SadConsole.HorizontalAlignment
    - id: padding
      type: System.Int32
    content.vb: Public Shared Sub PrintTheDraw(cellSurface As ICellSurface, y As Integer, text As String, drawFont As TheDrawFont, alignment As HorizontalAlignment, padding As Integer = 0)
  overload: SadConsole.CellSurfaceEditor.PrintTheDraw*
  nameWithType.vb: CellSurfaceEditor.PrintTheDraw(ICellSurface, Integer, String, TheDrawFont, HorizontalAlignment, Integer)
  fullName.vb: SadConsole.CellSurfaceEditor.PrintTheDraw(SadConsole.ICellSurface, Integer, String, SadConsole.Readers.TheDrawFont, SadConsole.HorizontalAlignment, Integer)
  name.vb: PrintTheDraw(ICellSurface, Integer, String, TheDrawFont, HorizontalAlignment, Integer)
- uid: SadConsole.CellSurfaceEditor.PrintTheDraw(SadConsole.ICellSurface,System.Int32,System.Int32,System.String,SadConsole.Readers.TheDrawFont)
  commentId: M:SadConsole.CellSurfaceEditor.PrintTheDraw(SadConsole.ICellSurface,System.Int32,System.Int32,System.String,SadConsole.Readers.TheDrawFont)
  id: PrintTheDraw(SadConsole.ICellSurface,System.Int32,System.Int32,System.String,SadConsole.Readers.TheDrawFont)
  isExtensionMethod: true
  parent: SadConsole.CellSurfaceEditor
  langs:
  - csharp
  - vb
  name: PrintTheDraw(ICellSurface, int, int, string, TheDrawFont)
  nameWithType: CellSurfaceEditor.PrintTheDraw(ICellSurface, int, int, string, TheDrawFont)
  fullName: SadConsole.CellSurfaceEditor.PrintTheDraw(SadConsole.ICellSurface, int, int, string, SadConsole.Readers.TheDrawFont)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  syntax:
    content: public static void PrintTheDraw(this ICellSurface cellSurface, int x, int y, string text, TheDrawFont drawFont)
    parameters:
    - id: cellSurface
      type: SadConsole.ICellSurface
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: text
      type: System.String
    - id: drawFont
      type: SadConsole.Readers.TheDrawFont
    content.vb: Public Shared Sub PrintTheDraw(cellSurface As ICellSurface, x As Integer, y As Integer, text As String, drawFont As TheDrawFont)
  overload: SadConsole.CellSurfaceEditor.PrintTheDraw*
  nameWithType.vb: CellSurfaceEditor.PrintTheDraw(ICellSurface, Integer, Integer, String, TheDrawFont)
  fullName.vb: SadConsole.CellSurfaceEditor.PrintTheDraw(SadConsole.ICellSurface, Integer, Integer, String, SadConsole.Readers.TheDrawFont)
  name.vb: PrintTheDraw(ICellSurface, Integer, Integer, String, TheDrawFont)
references:
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.CellSurfaceEditor.SetPixels*
  commentId: Overload:SadConsole.CellSurfaceEditor.SetPixels
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_SetPixels_SadConsole_ISurface_SadRogue_Primitives_Color___
  name: SetPixels
  nameWithType: CellSurfaceEditor.SetPixels
  fullName: SadConsole.CellSurfaceEditor.SetPixels
- uid: SadConsole.ISurface
  commentId: T:SadConsole.ISurface
  parent: SadConsole
  isExternal: true
  href: SadConsole.ISurface.html
  name: ISurface
  nameWithType: ISurface
  fullName: SadConsole.ISurface
- uid: SadRogue.Primitives.Color[]
  isExternal: true
  name: Color[]
  nameWithType: Color[]
  fullName: SadRogue.Primitives.Color[]
  nameWithType.vb: Color()
  fullName.vb: SadRogue.Primitives.Color()
  name.vb: Color()
  spec.csharp:
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: (
  - name: )
- uid: SadRogue.Primitives.Rectangle
  commentId: T:SadRogue.Primitives.Rectangle
  parent: SadRogue.Primitives
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: SadRogue.Primitives.Rectangle
- uid: SadRogue.Primitives
  commentId: N:SadRogue.Primitives
  isExternal: true
  href: SadRogue.html
  name: SadRogue.Primitives
  nameWithType: SadRogue.Primitives
  fullName: SadRogue.Primitives
  spec.csharp:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
  spec.vb:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
- uid: SadConsole.CellSurfaceEditor.IsValidCell*
  commentId: Overload:SadConsole.CellSurfaceEditor.IsValidCell
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_IsValidCell_SadConsole_ISurface_System_Int32_System_Int32_
  name: IsValidCell
  nameWithType: CellSurfaceEditor.IsValidCell
  fullName: SadConsole.CellSurfaceEditor.IsValidCell
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.CellSurfaceEditor.SetGlyph*
  commentId: Overload:SadConsole.CellSurfaceEditor.SetGlyph
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_SetGlyph_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_
  name: SetGlyph
  nameWithType: CellSurfaceEditor.SetGlyph
  fullName: SadConsole.CellSurfaceEditor.SetGlyph
- uid: SadRogue.Primitives.Color
  commentId: T:SadRogue.Primitives.Color
  parent: SadRogue.Primitives
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: SadRogue.Primitives.Color
- uid: SadConsole.Mirror
  commentId: T:SadConsole.Mirror
  parent: SadConsole
  isExternal: true
  href: SadConsole.Mirror.html
  name: Mirror
  nameWithType: Mirror
  fullName: SadConsole.Mirror
- uid: System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
  commentId: T:System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<CellDecorator>
  nameWithType: IEnumerable<CellDecorator>
  fullName: System.Collections.Generic.IEnumerable<SadConsole.CellDecorator>
  nameWithType.vb: IEnumerable(Of CellDecorator)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.CellDecorator)
  name.vb: IEnumerable(Of CellDecorator)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SadConsole.CellSurfaceEditor.GetGlyph*
  commentId: Overload:SadConsole.CellSurfaceEditor.GetGlyph
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_GetGlyph_SadConsole_ISurface_System_Int32_System_Int32_
  name: GetGlyph
  nameWithType: CellSurfaceEditor.GetGlyph
  fullName: SadConsole.CellSurfaceEditor.GetGlyph
- uid: SadConsole.CellSurfaceEditor.SetForeground*
  commentId: Overload:SadConsole.CellSurfaceEditor.SetForeground
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_SetForeground_SadConsole_ISurface_System_Int32_System_Int32_SadRogue_Primitives_Color_
  name: SetForeground
  nameWithType: CellSurfaceEditor.SetForeground
  fullName: SadConsole.CellSurfaceEditor.SetForeground
- uid: SadConsole.CellSurfaceEditor.GetForeground*
  commentId: Overload:SadConsole.CellSurfaceEditor.GetForeground
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_GetForeground_SadConsole_ISurface_System_Int32_System_Int32_
  name: GetForeground
  nameWithType: CellSurfaceEditor.GetForeground
  fullName: SadConsole.CellSurfaceEditor.GetForeground
- uid: SadConsole.CellSurfaceEditor.SetBackground*
  commentId: Overload:SadConsole.CellSurfaceEditor.SetBackground
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_SetBackground_SadConsole_ISurface_System_Int32_System_Int32_SadRogue_Primitives_Color_
  name: SetBackground
  nameWithType: CellSurfaceEditor.SetBackground
  fullName: SadConsole.CellSurfaceEditor.SetBackground
- uid: SadConsole.CellSurfaceEditor.GetBackground*
  commentId: Overload:SadConsole.CellSurfaceEditor.GetBackground
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_GetBackground_SadConsole_ISurface_System_Int32_System_Int32_
  name: GetBackground
  nameWithType: CellSurfaceEditor.GetBackground
  fullName: SadConsole.CellSurfaceEditor.GetBackground
- uid: SadConsole.CellSurfaceEditor.SetEffect*
  commentId: Overload:SadConsole.CellSurfaceEditor.SetEffect
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_SetEffect_SadConsole_ISurface_System_Int32_System_Int32_SadConsole_Effects_ICellEffect_
  name: SetEffect
  nameWithType: CellSurfaceEditor.SetEffect
  fullName: SadConsole.CellSurfaceEditor.SetEffect
- uid: SadConsole.Effects.ICellEffect
  commentId: T:SadConsole.Effects.ICellEffect
  parent: SadConsole.Effects
  isExternal: true
  href: SadConsole.Effects.ICellEffect.html
  name: ICellEffect
  nameWithType: ICellEffect
  fullName: SadConsole.Effects.ICellEffect
- uid: SadConsole.Effects
  commentId: N:SadConsole.Effects
  isExternal: true
  href: SadConsole.html
  name: SadConsole.Effects
  nameWithType: SadConsole.Effects
  fullName: SadConsole.Effects
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
- uid: System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point}
  commentId: T:System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Point>
  nameWithType: IEnumerable<Point>
  fullName: System.Collections.Generic.IEnumerable<SadRogue.Primitives.Point>
  nameWithType.vb: IEnumerable(Of Point)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadRogue.Primitives.Point)
  name.vb: IEnumerable(Of Point)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadRogue.Primitives.Point
    name: Point
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadRogue.Primitives.Point
    name: Point
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<int>
  nameWithType: IEnumerable<int>
  fullName: System.Collections.Generic.IEnumerable<int>
  nameWithType.vb: IEnumerable(Of Integer)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Integer)
  name.vb: IEnumerable(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SadConsole.ColoredGlyphBase
  commentId: T:SadConsole.ColoredGlyphBase
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredGlyphBase.html
  name: ColoredGlyphBase
  nameWithType: ColoredGlyphBase
  fullName: SadConsole.ColoredGlyphBase
- uid: System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase}
  commentId: T:System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ColoredGlyphBase>
  nameWithType: IEnumerable<ColoredGlyphBase>
  fullName: System.Collections.Generic.IEnumerable<SadConsole.ColoredGlyphBase>
  nameWithType.vb: IEnumerable(Of ColoredGlyphBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.ColoredGlyphBase)
  name.vb: IEnumerable(Of ColoredGlyphBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: )
- uid: SadConsole.CellSurfaceEditor.GetEffect*
  commentId: Overload:SadConsole.CellSurfaceEditor.GetEffect
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_GetEffect_SadConsole_ISurface_System_Int32_System_Int32_
  name: GetEffect
  nameWithType: CellSurfaceEditor.GetEffect
  fullName: SadConsole.CellSurfaceEditor.GetEffect
- uid: SadConsole.CellSurfaceEditor.SetCellAppearance*
  commentId: Overload:SadConsole.CellSurfaceEditor.SetCellAppearance
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_SetCellAppearance_SadConsole_ISurface_System_Int32_System_Int32_SadConsole_ColoredGlyphBase_
  name: SetCellAppearance
  nameWithType: CellSurfaceEditor.SetCellAppearance
  fullName: SadConsole.CellSurfaceEditor.SetCellAppearance
- uid: SadConsole.CellSurfaceEditor.GetCellAppearance*
  commentId: Overload:SadConsole.CellSurfaceEditor.GetCellAppearance
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_GetCellAppearance_SadConsole_ISurface_System_Int32_System_Int32_
  name: GetCellAppearance
  nameWithType: CellSurfaceEditor.GetCellAppearance
  fullName: SadConsole.CellSurfaceEditor.GetCellAppearance
- uid: SadConsole.CellSurfaceEditor.GetCells*
  commentId: Overload:SadConsole.CellSurfaceEditor.GetCells
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_GetCells_SadConsole_ISurface_SadRogue_Primitives_Rectangle_
  name: GetCells
  nameWithType: CellSurfaceEditor.GetCells
  fullName: SadConsole.CellSurfaceEditor.GetCells
- uid: SadConsole.CellSurfaceEditor.GetSubSurface*
  commentId: Overload:SadConsole.CellSurfaceEditor.GetSubSurface
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_GetSubSurface_SadConsole_ISurface_SadRogue_Primitives_Rectangle_
  name: GetSubSurface
  nameWithType: CellSurfaceEditor.GetSubSurface
  fullName: SadConsole.CellSurfaceEditor.GetSubSurface
- uid: SadConsole.ICellSurface
  commentId: T:SadConsole.ICellSurface
  parent: SadConsole
  isExternal: true
  href: SadConsole.ICellSurface.html
  name: ICellSurface
  nameWithType: ICellSurface
  fullName: SadConsole.ICellSurface
- uid: SadConsole.CellSurfaceEditor.GetMirror*
  commentId: Overload:SadConsole.CellSurfaceEditor.GetMirror
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_GetMirror_SadConsole_ISurface_System_Int32_System_Int32_
  name: GetMirror
  nameWithType: CellSurfaceEditor.GetMirror
  fullName: SadConsole.CellSurfaceEditor.GetMirror
- uid: SadConsole.CellSurfaceEditor.SetMirror*
  commentId: Overload:SadConsole.CellSurfaceEditor.SetMirror
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_SetMirror_SadConsole_ISurface_System_Int32_System_Int32_SadConsole_Mirror_
  name: SetMirror
  nameWithType: CellSurfaceEditor.SetMirror
  fullName: SadConsole.CellSurfaceEditor.SetMirror
- uid: SadConsole.CellSurfaceEditor.SetDecorator*
  commentId: Overload:SadConsole.CellSurfaceEditor.SetDecorator
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_SetDecorator_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_SadConsole_CellDecorator___
  name: SetDecorator
  nameWithType: CellSurfaceEditor.SetDecorator
  fullName: SadConsole.CellSurfaceEditor.SetDecorator
- uid: SadConsole.CellDecorator[]
  isExternal: true
  href: SadConsole.CellDecorator.html
  name: CellDecorator[]
  nameWithType: CellDecorator[]
  fullName: SadConsole.CellDecorator[]
  nameWithType.vb: CellDecorator()
  fullName.vb: SadConsole.CellDecorator()
  name.vb: CellDecorator()
  spec.csharp:
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: (
  - name: )
- uid: SadRogue.Primitives.Point
  commentId: T:SadRogue.Primitives.Point
  parent: SadRogue.Primitives
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: SadRogue.Primitives.Point
- uid: SadConsole.CellSurfaceEditor.AddDecorator*
  commentId: Overload:SadConsole.CellSurfaceEditor.AddDecorator
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_AddDecorator_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_SadConsole_CellDecorator___
  name: AddDecorator
  nameWithType: CellSurfaceEditor.AddDecorator
  fullName: SadConsole.CellSurfaceEditor.AddDecorator
- uid: SadConsole.CellSurfaceEditor.RemoveDecorator*
  commentId: Overload:SadConsole.CellSurfaceEditor.RemoveDecorator
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_RemoveDecorator_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_SadConsole_CellDecorator___
  name: RemoveDecorator
  nameWithType: CellSurfaceEditor.RemoveDecorator
  fullName: SadConsole.CellSurfaceEditor.RemoveDecorator
- uid: SadConsole.CellSurfaceEditor.ClearDecorators*
  commentId: Overload:SadConsole.CellSurfaceEditor.ClearDecorators
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ClearDecorators_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_
  name: ClearDecorators
  nameWithType: CellSurfaceEditor.ClearDecorators
  fullName: SadConsole.CellSurfaceEditor.ClearDecorators
- uid: SadConsole.CellSurfaceEditor.Print*
  commentId: Overload:SadConsole.CellSurfaceEditor.Print
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_Print_SadConsole_ISurface_System_Int32_System_Int32_System_String_
  name: Print
  nameWithType: CellSurfaceEditor.Print
  fullName: SadConsole.CellSurfaceEditor.Print
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SadConsole.ColoredString
  commentId: T:SadConsole.ColoredString
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredString.html
  name: ColoredString
  nameWithType: ColoredString
  fullName: SadConsole.ColoredString
- uid: SadConsole.ColoredGlyphBase[]
  isExternal: true
  href: SadConsole.ColoredGlyphBase.html
  name: ColoredGlyphBase[]
  nameWithType: ColoredGlyphBase[]
  fullName: SadConsole.ColoredGlyphBase[]
  nameWithType.vb: ColoredGlyphBase()
  fullName.vb: SadConsole.ColoredGlyphBase()
  name.vb: ColoredGlyphBase()
  spec.csharp:
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: (
  - name: )
- uid: SadConsole.CellSurfaceEditor.GetString*
  commentId: Overload:SadConsole.CellSurfaceEditor.GetString
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_GetString_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_
  name: GetString
  nameWithType: CellSurfaceEditor.GetString
  fullName: SadConsole.CellSurfaceEditor.GetString
- uid: SadConsole.CellSurfaceEditor.GetStringColored*
  commentId: Overload:SadConsole.CellSurfaceEditor.GetStringColored
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_GetStringColored_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_
  name: GetStringColored
  nameWithType: CellSurfaceEditor.GetStringColored
  fullName: SadConsole.CellSurfaceEditor.GetStringColored
- uid: SadConsole.CellSurfaceEditor.ClearShiftValues*
  commentId: Overload:SadConsole.CellSurfaceEditor.ClearShiftValues
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ClearShiftValues_SadConsole_ISurface_
  name: ClearShiftValues
  nameWithType: CellSurfaceEditor.ClearShiftValues
  fullName: SadConsole.CellSurfaceEditor.ClearShiftValues
- uid: SadConsole.CellSurfaceEditor.ShiftRow*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftRow
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftRow_SadConsole_ISurface_System_Int32_System_Int32_System_Boolean_
  name: ShiftRow
  nameWithType: CellSurfaceEditor.ShiftRow
  fullName: SadConsole.CellSurfaceEditor.ShiftRow
- uid: SadConsole.CellSurfaceEditor.ShiftRowRight*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftRowRight
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftRowRight_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: ShiftRowRight
  nameWithType: CellSurfaceEditor.ShiftRowRight
  fullName: SadConsole.CellSurfaceEditor.ShiftRowRight
- uid: SadConsole.CellSurfaceEditor.ShiftRowLeft*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftRowLeft
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftRowLeft_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: ShiftRowLeft
  nameWithType: CellSurfaceEditor.ShiftRowLeft
  fullName: SadConsole.CellSurfaceEditor.ShiftRowLeft
- uid: SadConsole.CellSurfaceEditor.ShiftRowRightUnchecked*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftRowRightUnchecked
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftRowRightUnchecked_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: ShiftRowRightUnchecked
  nameWithType: CellSurfaceEditor.ShiftRowRightUnchecked
  fullName: SadConsole.CellSurfaceEditor.ShiftRowRightUnchecked
- uid: SadConsole.CellSurfaceEditor.ShiftRowLeftUnchecked*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftRowLeftUnchecked
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftRowLeftUnchecked_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: ShiftRowLeftUnchecked
  nameWithType: CellSurfaceEditor.ShiftRowLeftUnchecked
  fullName: SadConsole.CellSurfaceEditor.ShiftRowLeftUnchecked
- uid: SadConsole.CellSurfaceEditor.ShiftColumn*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftColumn
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftColumn_SadConsole_ISurface_System_Int32_System_Int32_System_Boolean_
  name: ShiftColumn
  nameWithType: CellSurfaceEditor.ShiftColumn
  fullName: SadConsole.CellSurfaceEditor.ShiftColumn
- uid: SadConsole.CellSurfaceEditor.ShiftColumnDown*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftColumnDown
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftColumnDown_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: ShiftColumnDown
  nameWithType: CellSurfaceEditor.ShiftColumnDown
  fullName: SadConsole.CellSurfaceEditor.ShiftColumnDown
- uid: SadConsole.CellSurfaceEditor.ShiftColumnUp*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftColumnUp
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftColumnUp_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: ShiftColumnUp
  nameWithType: CellSurfaceEditor.ShiftColumnUp
  fullName: SadConsole.CellSurfaceEditor.ShiftColumnUp
- uid: SadConsole.CellSurfaceEditor.ShiftColumnDownUnchecked*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftColumnDownUnchecked
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftColumnDownUnchecked_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: ShiftColumnDownUnchecked
  nameWithType: CellSurfaceEditor.ShiftColumnDownUnchecked
  fullName: SadConsole.CellSurfaceEditor.ShiftColumnDownUnchecked
- uid: SadConsole.CellSurfaceEditor.ShiftColumnUpUnchecked*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftColumnUpUnchecked
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftColumnUpUnchecked_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: ShiftColumnUpUnchecked
  nameWithType: CellSurfaceEditor.ShiftColumnUpUnchecked
  fullName: SadConsole.CellSurfaceEditor.ShiftColumnUpUnchecked
- uid: SadConsole.CellSurfaceEditor.ShiftUp*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftUp
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftUp_SadConsole_ISurface_
  name: ShiftUp
  nameWithType: CellSurfaceEditor.ShiftUp
  fullName: SadConsole.CellSurfaceEditor.ShiftUp
- uid: SadConsole.CellSurfaceEditor.ShiftDown*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftDown
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftDown_SadConsole_ISurface_
  name: ShiftDown
  nameWithType: CellSurfaceEditor.ShiftDown
  fullName: SadConsole.CellSurfaceEditor.ShiftDown
- uid: SadConsole.CellSurfaceEditor.ShiftRight*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftRight
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftRight_SadConsole_ISurface_
  name: ShiftRight
  nameWithType: CellSurfaceEditor.ShiftRight
  fullName: SadConsole.CellSurfaceEditor.ShiftRight
- uid: SadConsole.CellSurfaceEditor.ShiftLeft*
  commentId: Overload:SadConsole.CellSurfaceEditor.ShiftLeft
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ShiftLeft_SadConsole_ISurface_
  name: ShiftLeft
  nameWithType: CellSurfaceEditor.ShiftLeft
  fullName: SadConsole.CellSurfaceEditor.ShiftLeft
- uid: SadConsole.CellSurfaceEditor.Erase*
  commentId: Overload:SadConsole.CellSurfaceEditor.Erase
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_Erase_SadConsole_ISurface_System_Int32_System_Int32_System_Int32_
  name: Erase
  nameWithType: CellSurfaceEditor.Erase
  fullName: SadConsole.CellSurfaceEditor.Erase
- uid: SadConsole.CellSurfaceEditor.Clear*
  commentId: Overload:SadConsole.CellSurfaceEditor.Clear
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_Clear_SadConsole_ISurface_
  name: Clear
  nameWithType: CellSurfaceEditor.Clear
  fullName: SadConsole.CellSurfaceEditor.Clear
- uid: SadConsole.CellSurfaceEditor.Fill*
  commentId: Overload:SadConsole.CellSurfaceEditor.Fill
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_Fill_SadConsole_ISurface_SadConsole_ColoredGlyphBase_
  name: Fill
  nameWithType: CellSurfaceEditor.Fill
  fullName: SadConsole.CellSurfaceEditor.Fill
- uid: System.Nullable{SadRogue.Primitives.Color}
  commentId: T:System.Nullable{SadRogue.Primitives.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: SadRogue.Primitives.Color?
  spec.csharp:
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable{SadConsole.Mirror}
  commentId: T:System.Nullable{SadConsole.Mirror}
  parent: System
  definition: System.Nullable`1
  href: SadConsole.Mirror.html
  name: Mirror?
  nameWithType: Mirror?
  fullName: SadConsole.Mirror?
  spec.csharp:
  - uid: SadConsole.Mirror
    name: Mirror
    isExternal: true
    href: SadConsole.Mirror.html
  - name: '?'
  spec.vb:
  - uid: SadConsole.Mirror
    name: Mirror
    isExternal: true
    href: SadConsole.Mirror.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.CellSurfaceEditor.DrawLine*
  commentId: Overload:SadConsole.CellSurfaceEditor.DrawLine
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_DrawLine_SadConsole_ISurface_SadRogue_Primitives_Point_SadRogue_Primitives_Point_System_Nullable_System_Int32__System_Nullable_SadRogue_Primitives_Color__System_Nullable_SadRogue_Primitives_Color__System_Nullable_SadConsole_Mirror__
  name: DrawLine
  nameWithType: CellSurfaceEditor.DrawLine
  fullName: SadConsole.CellSurfaceEditor.DrawLine
- uid: SadConsole.CellSurfaceEditor.DrawBox*
  commentId: Overload:SadConsole.CellSurfaceEditor.DrawBox
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_DrawBox_SadConsole_ISurface_SadRogue_Primitives_Rectangle_SadConsole_ShapeParameters_
  name: DrawBox
  nameWithType: CellSurfaceEditor.DrawBox
  fullName: SadConsole.CellSurfaceEditor.DrawBox
- uid: SadConsole.ShapeParameters
  commentId: T:SadConsole.ShapeParameters
  parent: SadConsole
  isExternal: true
  href: SadConsole.ShapeParameters.html
  name: ShapeParameters
  nameWithType: ShapeParameters
  fullName: SadConsole.ShapeParameters
- uid: SadConsole.CellSurfaceEditor.DrawCircle*
  commentId: Overload:SadConsole.CellSurfaceEditor.DrawCircle
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_DrawCircle_SadConsole_ISurface_SadRogue_Primitives_Rectangle_SadConsole_ShapeParameters_
  name: DrawCircle
  nameWithType: CellSurfaceEditor.DrawCircle
  fullName: SadConsole.CellSurfaceEditor.DrawCircle
- uid: SadConsole.CellSurfaceEditor.ConnectLines*
  commentId: Overload:SadConsole.CellSurfaceEditor.ConnectLines
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_ConnectLines_SadConsole_ISurface_
  name: ConnectLines
  nameWithType: CellSurfaceEditor.ConnectLines
  fullName: SadConsole.CellSurfaceEditor.ConnectLines
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SadConsole.CellSurfaceEditor.Copy*
  commentId: Overload:SadConsole.CellSurfaceEditor.Copy
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_Copy_SadConsole_ISurface_SadConsole_ICellSurface_
  name: Copy
  nameWithType: CellSurfaceEditor.Copy
  fullName: SadConsole.CellSurfaceEditor.Copy
- uid: SadConsole.CellSurfaceEditor.FillWithRandomGarbage*
  commentId: Overload:SadConsole.CellSurfaceEditor.FillWithRandomGarbage
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_FillWithRandomGarbage_SadConsole_ISurface_SadConsole_IFont_
  name: FillWithRandomGarbage
  nameWithType: CellSurfaceEditor.FillWithRandomGarbage
  fullName: SadConsole.CellSurfaceEditor.FillWithRandomGarbage
- uid: SadConsole.IFont
  commentId: T:SadConsole.IFont
  parent: SadConsole
  isExternal: true
  href: SadConsole.IFont.html
  name: IFont
  nameWithType: IFont
  fullName: SadConsole.IFont
- uid: SadConsole.CellSurfaceEditor.PrintTheDraw*
  commentId: Overload:SadConsole.CellSurfaceEditor.PrintTheDraw
  isExternal: true
  href: SadConsole.CellSurfaceEditor.html#SadConsole_CellSurfaceEditor_PrintTheDraw_SadConsole_ICellSurface_System_Int32_System_String_SadConsole_Readers_TheDrawFont_SadConsole_HorizontalAlignment_System_Int32_
  name: PrintTheDraw
  nameWithType: CellSurfaceEditor.PrintTheDraw
  fullName: SadConsole.CellSurfaceEditor.PrintTheDraw
- uid: SadConsole.Readers.TheDrawFont
  commentId: T:SadConsole.Readers.TheDrawFont
  parent: SadConsole.Readers
  isExternal: true
  href: SadConsole.Readers.TheDrawFont.html
  name: TheDrawFont
  nameWithType: TheDrawFont
  fullName: SadConsole.Readers.TheDrawFont
- uid: SadConsole.HorizontalAlignment
  commentId: T:SadConsole.HorizontalAlignment
  parent: SadConsole
  isExternal: true
  href: SadConsole.HorizontalAlignment.html
  name: HorizontalAlignment
  nameWithType: HorizontalAlignment
  fullName: SadConsole.HorizontalAlignment
- uid: SadConsole.Readers
  commentId: N:SadConsole.Readers
  isExternal: true
  href: SadConsole.html
  name: SadConsole.Readers
  nameWithType: SadConsole.Readers
  fullName: SadConsole.Readers
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Readers
    name: Readers
    isExternal: true
    href: SadConsole.Readers.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Readers
    name: Readers
    isExternal: true
    href: SadConsole.Readers.html
