### YamlMime:ManagedReference
items:
- uid: SadConsole.Effects.Blinker
  commentId: T:SadConsole.Effects.Blinker
  id: Blinker
  parent: SadConsole.Effects
  children:
  - SadConsole.Effects.Blinker.#ctor
  - SadConsole.Effects.Blinker.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  - SadConsole.Effects.Blinker.BlinkCount
  - SadConsole.Effects.Blinker.BlinkOutBackgroundColor
  - SadConsole.Effects.Blinker.BlinkOutForegroundColor
  - SadConsole.Effects.Blinker.BlinkSpeed
  - SadConsole.Effects.Blinker.Clone
  - SadConsole.Effects.Blinker.Duration
  - SadConsole.Effects.Blinker.Restart
  - SadConsole.Effects.Blinker.SwapColorsFromCell
  - SadConsole.Effects.Blinker.ToString
  - SadConsole.Effects.Blinker.Update(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: Blinker
  nameWithType: Blinker
  fullName: SadConsole.Effects.Blinker
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Blinks the foreground and background colors of a cell with the specified colors.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Blinker : CellEffectBase, ICellEffect
    content.vb: >-
      <DataContract>

      Public Class Blinker Inherits CellEffectBase Implements ICellEffect
  inheritance:
  - System.Object
  - SadConsole.Effects.CellEffectBase
  implements:
  - SadConsole.Effects.ICellEffect
  inheritedMembers:
  - SadConsole.Effects.CellEffectBase._delayFinished
  - SadConsole.Effects.CellEffectBase._timeElapsed
  - SadConsole.Effects.CellEffectBase.IsFinished
  - SadConsole.Effects.CellEffectBase.CloneOnAdd
  - SadConsole.Effects.CellEffectBase.StartDelay
  - SadConsole.Effects.CellEffectBase.RemoveOnFinished
  - SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
  - SadConsole.Effects.CellEffectBase.RunEffectOnApply
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: SadConsole.Effects.Blinker.#ctor
  commentId: M:SadConsole.Effects.Blinker.#ctor
  id: '#ctor'
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: Blinker()
  nameWithType: Blinker.Blinker()
  fullName: SadConsole.Effects.Blinker.Blinker()
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Creates a new instance of the blink effect.
  example: []
  syntax:
    content: public Blinker()
    content.vb: Public Sub New()
  overload: SadConsole.Effects.Blinker.#ctor*
  nameWithType.vb: Blinker.New()
  fullName.vb: SadConsole.Effects.Blinker.New()
  name.vb: New()
- uid: SadConsole.Effects.Blinker.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.Effects.Blinker.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  id: ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  nameWithType: Blinker.ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  fullName: SadConsole.Effects.Blinker.ApplyToCell(SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Applies the state of the effect to a cell.
  example: []
  syntax:
    content: public override bool ApplyToCell(ColoredGlyphBase cell, ColoredGlyphBase originalState)
    parameters:
    - id: cell
      type: SadConsole.ColoredGlyphBase
      description: The surface cell using this effect.
    - id: originalState
      type: SadConsole.ColoredGlyphBase
      description: The state of the cell prior to the effect being applied.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when this method modified the <code class="paramref">cell</code>; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function ApplyToCell(cell As ColoredGlyphBase, originalState As ColoredGlyphBase) As Boolean
  overridden: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  overload: SadConsole.Effects.Blinker.ApplyToCell*
- uid: SadConsole.Effects.Blinker.Update(System.TimeSpan)
  commentId: M:SadConsole.Effects.Blinker.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: Blinker.Update(TimeSpan)
  fullName: SadConsole.Effects.Blinker.Update(System.TimeSpan)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Updates the state of the effect.
  example: []
  syntax:
    content: public override void Update(TimeSpan delta)
    parameters:
    - id: delta
      type: System.TimeSpan
      description: Time since the last call to this effect.
    content.vb: Public Overrides Sub Update(delta As TimeSpan)
  overridden: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  overload: SadConsole.Effects.Blinker.Update*
- uid: SadConsole.Effects.Blinker.Restart
  commentId: M:SadConsole.Effects.Blinker.Restart
  id: Restart
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: Restart()
  nameWithType: Blinker.Restart()
  fullName: SadConsole.Effects.Blinker.Restart()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Restarts the cell effect but does not reset it.
  example: []
  syntax:
    content: public override void Restart()
    content.vb: Public Overrides Sub Restart()
  overridden: SadConsole.Effects.CellEffectBase.Restart
  overload: SadConsole.Effects.Blinker.Restart*
- uid: SadConsole.Effects.Blinker.Clone
  commentId: M:SadConsole.Effects.Blinker.Clone
  id: Clone
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Blinker.Clone()
  fullName: SadConsole.Effects.Blinker.Clone()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Returns a duplicate of this effect.
  example: []
  syntax:
    content: public override ICellEffect Clone()
    return:
      type: SadConsole.Effects.ICellEffect
      description: A new copy of this effect.
    content.vb: Public Overrides Function Clone() As ICellEffect
  overridden: SadConsole.Effects.CellEffectBase.Clone
  overload: SadConsole.Effects.Blinker.Clone*
- uid: SadConsole.Effects.Blinker.ToString
  commentId: M:SadConsole.Effects.Blinker.ToString
  id: ToString
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Blinker.ToString()
  fullName: SadConsole.Effects.Blinker.ToString()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SadConsole.Effects.Blinker.ToString*
- uid: SadConsole.Effects.Blinker.BlinkSpeed
  commentId: P:SadConsole.Effects.Blinker.BlinkSpeed
  id: BlinkSpeed
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: BlinkSpeed
  nameWithType: Blinker.BlinkSpeed
  fullName: SadConsole.Effects.Blinker.BlinkSpeed
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: How long it takes to transition from blinking in and out.
  example: []
  syntax:
    content: >-
      [DataMember]

      public TimeSpan BlinkSpeed { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: >-
      <DataMember>

      Public Property BlinkSpeed As TimeSpan
  overload: SadConsole.Effects.Blinker.BlinkSpeed*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.Effects.Blinker.BlinkOutForegroundColor
  commentId: P:SadConsole.Effects.Blinker.BlinkOutForegroundColor
  id: BlinkOutForegroundColor
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: BlinkOutForegroundColor
  nameWithType: Blinker.BlinkOutForegroundColor
  fullName: SadConsole.Effects.Blinker.BlinkOutForegroundColor
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: The color the foreground blinks to.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Color BlinkOutForegroundColor { get; set; }
    parameters: []
    return:
      type: SadRogue.Primitives.Color
    content.vb: >-
      <DataMember>

      Public Property BlinkOutForegroundColor As Color
  overload: SadConsole.Effects.Blinker.BlinkOutForegroundColor*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.Effects.Blinker.BlinkOutBackgroundColor
  commentId: P:SadConsole.Effects.Blinker.BlinkOutBackgroundColor
  id: BlinkOutBackgroundColor
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: BlinkOutBackgroundColor
  nameWithType: Blinker.BlinkOutBackgroundColor
  fullName: SadConsole.Effects.Blinker.BlinkOutBackgroundColor
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: The color the background blinks to.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Color BlinkOutBackgroundColor { get; set; }
    parameters: []
    return:
      type: SadRogue.Primitives.Color
    content.vb: >-
      <DataMember>

      Public Property BlinkOutBackgroundColor As Color
  overload: SadConsole.Effects.Blinker.BlinkOutBackgroundColor*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.Effects.Blinker.SwapColorsFromCell
  commentId: P:SadConsole.Effects.Blinker.SwapColorsFromCell
  id: SwapColorsFromCell
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: SwapColorsFromCell
  nameWithType: Blinker.SwapColorsFromCell
  fullName: SadConsole.Effects.Blinker.SwapColorsFromCell
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, ignores the <xref href="SadConsole.Effects.Blinker.BlinkOutBackgroundColor" data-throw-if-not-resolved="false"></xref> and <xref href="SadConsole.Effects.Blinker.BlinkOutForegroundColor" data-throw-if-not-resolved="false"></xref> colors and instead swaps the glyph's foreground and background colors.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool SwapColorsFromCell { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property SwapColorsFromCell As Boolean
  overload: SadConsole.Effects.Blinker.SwapColorsFromCell*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.Effects.Blinker.BlinkCount
  commentId: P:SadConsole.Effects.Blinker.BlinkCount
  id: BlinkCount
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: BlinkCount
  nameWithType: Blinker.BlinkCount
  fullName: SadConsole.Effects.Blinker.BlinkCount
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: How many times to blink. The value of -1 represents forever.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int BlinkCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property BlinkCount As Integer
  overload: SadConsole.Effects.Blinker.BlinkCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.Effects.Blinker.Duration
  commentId: P:SadConsole.Effects.Blinker.Duration
  id: Duration
  parent: SadConsole.Effects.Blinker
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: Blinker.Duration
  fullName: SadConsole.Effects.Blinker.Duration
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: The total duraction this effect will run for, before being flagged as finished. <xref href="System.TimeSpan.MaxValue" data-throw-if-not-resolved="false"></xref> represents forever.
  example: []
  syntax:
    content: >-
      [DataMember]

      public TimeSpan Duration { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: >-
      <DataMember>

      Public Property Duration As TimeSpan
  overload: SadConsole.Effects.Blinker.Duration*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
references:
- uid: SadConsole.Effects
  commentId: N:SadConsole.Effects
  isExternal: true
  href: SadConsole.html
  name: SadConsole.Effects
  nameWithType: SadConsole.Effects
  fullName: SadConsole.Effects
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SadConsole.Effects.CellEffectBase
  commentId: T:SadConsole.Effects.CellEffectBase
  parent: SadConsole.Effects
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html
  name: CellEffectBase
  nameWithType: CellEffectBase
  fullName: SadConsole.Effects.CellEffectBase
- uid: SadConsole.Effects.ICellEffect
  commentId: T:SadConsole.Effects.ICellEffect
  parent: SadConsole.Effects
  isExternal: true
  href: SadConsole.Effects.ICellEffect.html
  name: ICellEffect
  nameWithType: ICellEffect
  fullName: SadConsole.Effects.ICellEffect
- uid: SadConsole.Effects.CellEffectBase._delayFinished
  commentId: F:SadConsole.Effects.CellEffectBase._delayFinished
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase__delayFinished
  name: _delayFinished
  nameWithType: CellEffectBase._delayFinished
  fullName: SadConsole.Effects.CellEffectBase._delayFinished
- uid: SadConsole.Effects.CellEffectBase._timeElapsed
  commentId: F:SadConsole.Effects.CellEffectBase._timeElapsed
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase__timeElapsed
  name: _timeElapsed
  nameWithType: CellEffectBase._timeElapsed
  fullName: SadConsole.Effects.CellEffectBase._timeElapsed
- uid: SadConsole.Effects.CellEffectBase.IsFinished
  commentId: P:SadConsole.Effects.CellEffectBase.IsFinished
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_IsFinished
  name: IsFinished
  nameWithType: CellEffectBase.IsFinished
  fullName: SadConsole.Effects.CellEffectBase.IsFinished
- uid: SadConsole.Effects.CellEffectBase.CloneOnAdd
  commentId: P:SadConsole.Effects.CellEffectBase.CloneOnAdd
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_CloneOnAdd
  name: CloneOnAdd
  nameWithType: CellEffectBase.CloneOnAdd
  fullName: SadConsole.Effects.CellEffectBase.CloneOnAdd
- uid: SadConsole.Effects.CellEffectBase.StartDelay
  commentId: P:SadConsole.Effects.CellEffectBase.StartDelay
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_StartDelay
  name: StartDelay
  nameWithType: CellEffectBase.StartDelay
  fullName: SadConsole.Effects.CellEffectBase.StartDelay
- uid: SadConsole.Effects.CellEffectBase.RemoveOnFinished
  commentId: P:SadConsole.Effects.CellEffectBase.RemoveOnFinished
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_RemoveOnFinished
  name: RemoveOnFinished
  nameWithType: CellEffectBase.RemoveOnFinished
  fullName: SadConsole.Effects.CellEffectBase.RemoveOnFinished
- uid: SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
  commentId: P:SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_RestoreCellOnRemoved
  name: RestoreCellOnRemoved
  nameWithType: CellEffectBase.RestoreCellOnRemoved
  fullName: SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
- uid: SadConsole.Effects.CellEffectBase.RunEffectOnApply
  commentId: P:SadConsole.Effects.CellEffectBase.RunEffectOnApply
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_RunEffectOnApply
  name: RunEffectOnApply
  nameWithType: CellEffectBase.RunEffectOnApply
  fullName: SadConsole.Effects.CellEffectBase.RunEffectOnApply
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.Effects.Blinker.#ctor*
  commentId: Overload:SadConsole.Effects.Blinker.#ctor
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker__ctor
  name: Blinker
  nameWithType: Blinker.Blinker
  fullName: SadConsole.Effects.Blinker.Blinker
  nameWithType.vb: Blinker.New
  fullName.vb: SadConsole.Effects.Blinker.New
  name.vb: New
- uid: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  name: ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  nameWithType: CellEffectBase.ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  fullName: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase)
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
    name: ApplyToCell
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  - name: (
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
    name: ApplyToCell
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  - name: (
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: )
- uid: SadConsole.Effects.Blinker.ApplyToCell*
  commentId: Overload:SadConsole.Effects.Blinker.ApplyToCell
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  name: ApplyToCell
  nameWithType: Blinker.ApplyToCell
  fullName: SadConsole.Effects.Blinker.ApplyToCell
- uid: SadConsole.ColoredGlyphBase
  commentId: T:SadConsole.ColoredGlyphBase
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredGlyphBase.html
  name: ColoredGlyphBase
  nameWithType: ColoredGlyphBase
  fullName: SadConsole.ColoredGlyphBase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  commentId: M:SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Update_System_TimeSpan_
  name: Update(TimeSpan)
  nameWithType: CellEffectBase.Update(TimeSpan)
  fullName: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
    name: Update
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Update_System_TimeSpan_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
    name: Update
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Update_System_TimeSpan_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: SadConsole.Effects.Blinker.Update*
  commentId: Overload:SadConsole.Effects.Blinker.Update
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_Update_System_TimeSpan_
  name: Update
  nameWithType: Blinker.Update
  fullName: SadConsole.Effects.Blinker.Update
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: SadConsole.Effects.CellEffectBase.Restart
  commentId: M:SadConsole.Effects.CellEffectBase.Restart
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Restart
  name: Restart()
  nameWithType: CellEffectBase.Restart()
  fullName: SadConsole.Effects.CellEffectBase.Restart()
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.Restart
    name: Restart
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Restart
  - name: (
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.Restart
    name: Restart
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Restart
  - name: (
  - name: )
- uid: SadConsole.Effects.Blinker.Restart*
  commentId: Overload:SadConsole.Effects.Blinker.Restart
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_Restart
  name: Restart
  nameWithType: Blinker.Restart
  fullName: SadConsole.Effects.Blinker.Restart
- uid: SadConsole.Effects.CellEffectBase.Clone
  commentId: M:SadConsole.Effects.CellEffectBase.Clone
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Clone
  name: Clone()
  nameWithType: CellEffectBase.Clone()
  fullName: SadConsole.Effects.CellEffectBase.Clone()
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.Clone
    name: Clone
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.Clone
    name: Clone
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Clone
  - name: (
  - name: )
- uid: SadConsole.Effects.Blinker.Clone*
  commentId: Overload:SadConsole.Effects.Blinker.Clone
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_Clone
  name: Clone
  nameWithType: Blinker.Clone
  fullName: SadConsole.Effects.Blinker.Clone
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SadConsole.Effects.Blinker.ToString*
  commentId: Overload:SadConsole.Effects.Blinker.ToString
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_ToString
  name: ToString
  nameWithType: Blinker.ToString
  fullName: SadConsole.Effects.Blinker.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SadConsole.Effects.Blinker.BlinkSpeed*
  commentId: Overload:SadConsole.Effects.Blinker.BlinkSpeed
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_BlinkSpeed
  name: BlinkSpeed
  nameWithType: Blinker.BlinkSpeed
  fullName: SadConsole.Effects.Blinker.BlinkSpeed
- uid: SadConsole.Effects.Blinker.BlinkOutForegroundColor*
  commentId: Overload:SadConsole.Effects.Blinker.BlinkOutForegroundColor
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_BlinkOutForegroundColor
  name: BlinkOutForegroundColor
  nameWithType: Blinker.BlinkOutForegroundColor
  fullName: SadConsole.Effects.Blinker.BlinkOutForegroundColor
- uid: SadRogue.Primitives.Color
  commentId: T:SadRogue.Primitives.Color
  parent: SadRogue.Primitives
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: SadRogue.Primitives.Color
- uid: SadRogue.Primitives
  commentId: N:SadRogue.Primitives
  isExternal: true
  href: SadRogue.html
  name: SadRogue.Primitives
  nameWithType: SadRogue.Primitives
  fullName: SadRogue.Primitives
  spec.csharp:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
  spec.vb:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
- uid: SadConsole.Effects.Blinker.BlinkOutBackgroundColor*
  commentId: Overload:SadConsole.Effects.Blinker.BlinkOutBackgroundColor
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_BlinkOutBackgroundColor
  name: BlinkOutBackgroundColor
  nameWithType: Blinker.BlinkOutBackgroundColor
  fullName: SadConsole.Effects.Blinker.BlinkOutBackgroundColor
- uid: SadConsole.Effects.Blinker.BlinkOutBackgroundColor
  commentId: P:SadConsole.Effects.Blinker.BlinkOutBackgroundColor
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_BlinkOutBackgroundColor
  name: BlinkOutBackgroundColor
  nameWithType: Blinker.BlinkOutBackgroundColor
  fullName: SadConsole.Effects.Blinker.BlinkOutBackgroundColor
- uid: SadConsole.Effects.Blinker.BlinkOutForegroundColor
  commentId: P:SadConsole.Effects.Blinker.BlinkOutForegroundColor
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_BlinkOutForegroundColor
  name: BlinkOutForegroundColor
  nameWithType: Blinker.BlinkOutForegroundColor
  fullName: SadConsole.Effects.Blinker.BlinkOutForegroundColor
- uid: SadConsole.Effects.Blinker.SwapColorsFromCell*
  commentId: Overload:SadConsole.Effects.Blinker.SwapColorsFromCell
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_SwapColorsFromCell
  name: SwapColorsFromCell
  nameWithType: Blinker.SwapColorsFromCell
  fullName: SadConsole.Effects.Blinker.SwapColorsFromCell
- uid: SadConsole.Effects.Blinker.BlinkCount*
  commentId: Overload:SadConsole.Effects.Blinker.BlinkCount
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_BlinkCount
  name: BlinkCount
  nameWithType: Blinker.BlinkCount
  fullName: SadConsole.Effects.Blinker.BlinkCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.TimeSpan.MaxValue
  commentId: F:System.TimeSpan.MaxValue
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan.maxvalue
  name: MaxValue
  nameWithType: TimeSpan.MaxValue
  fullName: System.TimeSpan.MaxValue
- uid: SadConsole.Effects.Blinker.Duration*
  commentId: Overload:SadConsole.Effects.Blinker.Duration
  isExternal: true
  href: SadConsole.Effects.Blinker.html#SadConsole_Effects_Blinker_Duration
  name: Duration
  nameWithType: Blinker.Duration
  fullName: SadConsole.Effects.Blinker.Duration
