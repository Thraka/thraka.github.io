### YamlMime:ManagedReference
items:
- uid: SadConsole.Effects.CodeEffect
  commentId: T:SadConsole.Effects.CodeEffect
  id: CodeEffect
  parent: SadConsole.Effects
  children:
  - SadConsole.Effects.CodeEffect.#ctor(System.String,System.Func{SadConsole.Effects.CodeEffect,SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase,System.Boolean},System.Action{SadConsole.Effects.CodeEffect,System.TimeSpan},System.Action{SadConsole.Effects.CodeEffect})
  - SadConsole.Effects.CodeEffect.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  - SadConsole.Effects.CodeEffect.Clone
  - SadConsole.Effects.CodeEffect.Duration
  - SadConsole.Effects.CodeEffect.Id
  - SadConsole.Effects.CodeEffect.Restart
  - SadConsole.Effects.CodeEffect.Tag
  - SadConsole.Effects.CodeEffect.ToString
  - SadConsole.Effects.CodeEffect.Update(System.TimeSpan)
  - SadConsole.Effects.CodeEffect.UseDuration
  langs:
  - csharp
  - vb
  name: CodeEffect
  nameWithType: CodeEffect
  fullName: SadConsole.Effects.CodeEffect
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Effect that runs code for the apply and update actions of an effect.
  example: []
  syntax:
    content: 'public class CodeEffect : CellEffectBase, ICellEffect'
    content.vb: Public Class CodeEffect Inherits CellEffectBase Implements ICellEffect
  inheritance:
  - System.Object
  - SadConsole.Effects.CellEffectBase
  implements:
  - SadConsole.Effects.ICellEffect
  inheritedMembers:
  - SadConsole.Effects.CellEffectBase._delayFinished
  - SadConsole.Effects.CellEffectBase._timeElapsed
  - SadConsole.Effects.CellEffectBase.IsFinished
  - SadConsole.Effects.CellEffectBase.CloneOnAdd
  - SadConsole.Effects.CellEffectBase.StartDelay
  - SadConsole.Effects.CellEffectBase.RemoveOnFinished
  - SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
  - SadConsole.Effects.CellEffectBase.RunEffectOnApply
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: SadConsole.Effects.CodeEffect.#ctor(System.String,System.Func{SadConsole.Effects.CodeEffect,SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase,System.Boolean},System.Action{SadConsole.Effects.CodeEffect,System.TimeSpan},System.Action{SadConsole.Effects.CodeEffect})
  commentId: M:SadConsole.Effects.CodeEffect.#ctor(System.String,System.Func{SadConsole.Effects.CodeEffect,SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase,System.Boolean},System.Action{SadConsole.Effects.CodeEffect,System.TimeSpan},System.Action{SadConsole.Effects.CodeEffect})
  id: '#ctor(System.String,System.Func{SadConsole.Effects.CodeEffect,SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase,System.Boolean},System.Action{SadConsole.Effects.CodeEffect,System.TimeSpan},System.Action{SadConsole.Effects.CodeEffect})'
  parent: SadConsole.Effects.CodeEffect
  langs:
  - csharp
  - vb
  name: CodeEffect(string, Func<CodeEffect, ColoredGlyphBase, ColoredGlyphBase, bool>, Action<CodeEffect, TimeSpan>, Action<CodeEffect>)
  nameWithType: CodeEffect.CodeEffect(string, Func<CodeEffect, ColoredGlyphBase, ColoredGlyphBase, bool>, Action<CodeEffect, TimeSpan>, Action<CodeEffect>)
  fullName: SadConsole.Effects.CodeEffect.CodeEffect(string, System.Func<SadConsole.Effects.CodeEffect, SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase, bool>, System.Action<SadConsole.Effects.CodeEffect, System.TimeSpan>, System.Action<SadConsole.Effects.CodeEffect>)
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Creates a cell effect that runs custom code instead of hardcoded effect actions.
  example: []
  syntax:
    content: public CodeEffect(string id, Func<CodeEffect, ColoredGlyphBase, ColoredGlyphBase, bool> apply, Action<CodeEffect, TimeSpan> update, Action<CodeEffect> restart)
    parameters:
    - id: id
      type: System.String
      description: A user-definable identifier.
    - id: apply
      type: System.Func{SadConsole.Effects.CodeEffect,SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase,System.Boolean}
      description: The code to run for <xref href="SadConsole.Effects.ICellEffect.ApplyToCell(SadConsole.ColoredGlyphBase%2cSadConsole.ColoredGlyphBase)" data-throw-if-not-resolved="false"></xref>.
    - id: update
      type: System.Action{SadConsole.Effects.CodeEffect,System.TimeSpan}
      description: The code to run for <xref href="SadConsole.Effects.ICellEffect.Update(System.TimeSpan)" data-throw-if-not-resolved="false"></xref>.
    - id: restart
      type: System.Action{SadConsole.Effects.CodeEffect}
      description: The code to run for <xref href="SadConsole.Effects.ICellEffect.Restart" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(id As String, apply As Func(Of CodeEffect, ColoredGlyphBase, ColoredGlyphBase, Boolean), update As Action(Of CodeEffect, TimeSpan), restart As Action(Of CodeEffect))
  overload: SadConsole.Effects.CodeEffect.#ctor*
  nameWithType.vb: CodeEffect.New(String, Func(Of CodeEffect, ColoredGlyphBase, ColoredGlyphBase, Boolean), Action(Of CodeEffect, TimeSpan), Action(Of CodeEffect))
  fullName.vb: SadConsole.Effects.CodeEffect.New(String, System.Func(Of SadConsole.Effects.CodeEffect, SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase, Boolean), System.Action(Of SadConsole.Effects.CodeEffect, System.TimeSpan), System.Action(Of SadConsole.Effects.CodeEffect))
  name.vb: New(String, Func(Of CodeEffect, ColoredGlyphBase, ColoredGlyphBase, Boolean), Action(Of CodeEffect, TimeSpan), Action(Of CodeEffect))
- uid: SadConsole.Effects.CodeEffect.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.Effects.CodeEffect.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  id: ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  parent: SadConsole.Effects.CodeEffect
  langs:
  - csharp
  - vb
  name: ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  nameWithType: CodeEffect.ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  fullName: SadConsole.Effects.CodeEffect.ApplyToCell(SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Applies the state of the effect to a cell.
  example: []
  syntax:
    content: public override bool ApplyToCell(ColoredGlyphBase cell, ColoredGlyphBase originalState)
    parameters:
    - id: cell
      type: SadConsole.ColoredGlyphBase
      description: The surface cell using this effect.
    - id: originalState
      type: SadConsole.ColoredGlyphBase
      description: The state of the cell prior to the effect being applied.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when this method modified the <code class="paramref">cell</code>; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function ApplyToCell(cell As ColoredGlyphBase, originalState As ColoredGlyphBase) As Boolean
  overridden: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  overload: SadConsole.Effects.CodeEffect.ApplyToCell*
- uid: SadConsole.Effects.CodeEffect.Clone
  commentId: M:SadConsole.Effects.CodeEffect.Clone
  id: Clone
  parent: SadConsole.Effects.CodeEffect
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: CodeEffect.Clone()
  fullName: SadConsole.Effects.CodeEffect.Clone()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Not supported.
  example: []
  syntax:
    content: public override ICellEffect Clone()
    return:
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Overrides Function Clone() As ICellEffect
  overridden: SadConsole.Effects.CellEffectBase.Clone
  overload: SadConsole.Effects.CodeEffect.Clone*
- uid: SadConsole.Effects.CodeEffect.Update(System.TimeSpan)
  commentId: M:SadConsole.Effects.CodeEffect.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: SadConsole.Effects.CodeEffect
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: CodeEffect.Update(TimeSpan)
  fullName: SadConsole.Effects.CodeEffect.Update(System.TimeSpan)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Updates the state of the effect.
  example: []
  syntax:
    content: public override void Update(TimeSpan delta)
    parameters:
    - id: delta
      type: System.TimeSpan
      description: Time since the last call to this effect.
    content.vb: Public Overrides Sub Update(delta As TimeSpan)
  overridden: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  overload: SadConsole.Effects.CodeEffect.Update*
- uid: SadConsole.Effects.CodeEffect.Restart
  commentId: M:SadConsole.Effects.CodeEffect.Restart
  id: Restart
  parent: SadConsole.Effects.CodeEffect
  langs:
  - csharp
  - vb
  name: Restart()
  nameWithType: CodeEffect.Restart()
  fullName: SadConsole.Effects.CodeEffect.Restart()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Restarts the cell effect.
  example: []
  syntax:
    content: public override void Restart()
    content.vb: Public Overrides Sub Restart()
  overridden: SadConsole.Effects.CellEffectBase.Restart
  overload: SadConsole.Effects.CodeEffect.Restart*
- uid: SadConsole.Effects.CodeEffect.ToString
  commentId: M:SadConsole.Effects.CodeEffect.ToString
  id: ToString
  parent: SadConsole.Effects.CodeEffect
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CodeEffect.ToString()
  fullName: SadConsole.Effects.CodeEffect.ToString()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SadConsole.Effects.CodeEffect.ToString*
- uid: SadConsole.Effects.CodeEffect.Id
  commentId: P:SadConsole.Effects.CodeEffect.Id
  id: Id
  parent: SadConsole.Effects.CodeEffect
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CodeEffect.Id
  fullName: SadConsole.Effects.CodeEffect.Id
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: A user defined identifier of the effect.
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: SadConsole.Effects.CodeEffect.Id*
- uid: SadConsole.Effects.CodeEffect.Tag
  commentId: P:SadConsole.Effects.CodeEffect.Tag
  id: Tag
  parent: SadConsole.Effects.CodeEffect
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: CodeEffect.Tag
  fullName: SadConsole.Effects.CodeEffect.Tag
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: An object associated with this effect.
  example: []
  syntax:
    content: public object? Tag { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Tag As Object
  overload: SadConsole.Effects.CodeEffect.Tag*
- uid: SadConsole.Effects.CodeEffect.UseDuration
  commentId: P:SadConsole.Effects.CodeEffect.UseDuration
  id: UseDuration
  parent: SadConsole.Effects.CodeEffect
  langs:
  - csharp
  - vb
  name: UseDuration
  nameWithType: CodeEffect.UseDuration
  fullName: SadConsole.Effects.CodeEffect.UseDuration
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, uses the <xref href="SadConsole.Effects.CodeEffect.Duration" data-throw-if-not-resolved="false"></xref> timer to stop this effect; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool UseDuration { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseDuration As Boolean
  overload: SadConsole.Effects.CodeEffect.UseDuration*
- uid: SadConsole.Effects.CodeEffect.Duration
  commentId: P:SadConsole.Effects.CodeEffect.Duration
  id: Duration
  parent: SadConsole.Effects.CodeEffect
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: CodeEffect.Duration
  fullName: SadConsole.Effects.CodeEffect.Duration
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: The amount of time this effect runs for in seconds.
  example: []
  syntax:
    content: public TimeSpan Duration { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property Duration As TimeSpan
  overload: SadConsole.Effects.CodeEffect.Duration*
references:
- uid: SadConsole.Effects
  commentId: N:SadConsole.Effects
  isExternal: true
  href: SadConsole.html
  name: SadConsole.Effects
  nameWithType: SadConsole.Effects
  fullName: SadConsole.Effects
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SadConsole.Effects.CellEffectBase
  commentId: T:SadConsole.Effects.CellEffectBase
  parent: SadConsole.Effects
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html
  name: CellEffectBase
  nameWithType: CellEffectBase
  fullName: SadConsole.Effects.CellEffectBase
- uid: SadConsole.Effects.ICellEffect
  commentId: T:SadConsole.Effects.ICellEffect
  parent: SadConsole.Effects
  isExternal: true
  href: SadConsole.Effects.ICellEffect.html
  name: ICellEffect
  nameWithType: ICellEffect
  fullName: SadConsole.Effects.ICellEffect
- uid: SadConsole.Effects.CellEffectBase._delayFinished
  commentId: F:SadConsole.Effects.CellEffectBase._delayFinished
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase__delayFinished
  name: _delayFinished
  nameWithType: CellEffectBase._delayFinished
  fullName: SadConsole.Effects.CellEffectBase._delayFinished
- uid: SadConsole.Effects.CellEffectBase._timeElapsed
  commentId: F:SadConsole.Effects.CellEffectBase._timeElapsed
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase__timeElapsed
  name: _timeElapsed
  nameWithType: CellEffectBase._timeElapsed
  fullName: SadConsole.Effects.CellEffectBase._timeElapsed
- uid: SadConsole.Effects.CellEffectBase.IsFinished
  commentId: P:SadConsole.Effects.CellEffectBase.IsFinished
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_IsFinished
  name: IsFinished
  nameWithType: CellEffectBase.IsFinished
  fullName: SadConsole.Effects.CellEffectBase.IsFinished
- uid: SadConsole.Effects.CellEffectBase.CloneOnAdd
  commentId: P:SadConsole.Effects.CellEffectBase.CloneOnAdd
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_CloneOnAdd
  name: CloneOnAdd
  nameWithType: CellEffectBase.CloneOnAdd
  fullName: SadConsole.Effects.CellEffectBase.CloneOnAdd
- uid: SadConsole.Effects.CellEffectBase.StartDelay
  commentId: P:SadConsole.Effects.CellEffectBase.StartDelay
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_StartDelay
  name: StartDelay
  nameWithType: CellEffectBase.StartDelay
  fullName: SadConsole.Effects.CellEffectBase.StartDelay
- uid: SadConsole.Effects.CellEffectBase.RemoveOnFinished
  commentId: P:SadConsole.Effects.CellEffectBase.RemoveOnFinished
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_RemoveOnFinished
  name: RemoveOnFinished
  nameWithType: CellEffectBase.RemoveOnFinished
  fullName: SadConsole.Effects.CellEffectBase.RemoveOnFinished
- uid: SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
  commentId: P:SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_RestoreCellOnRemoved
  name: RestoreCellOnRemoved
  nameWithType: CellEffectBase.RestoreCellOnRemoved
  fullName: SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
- uid: SadConsole.Effects.CellEffectBase.RunEffectOnApply
  commentId: P:SadConsole.Effects.CellEffectBase.RunEffectOnApply
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_RunEffectOnApply
  name: RunEffectOnApply
  nameWithType: CellEffectBase.RunEffectOnApply
  fullName: SadConsole.Effects.CellEffectBase.RunEffectOnApply
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.Effects.ICellEffect.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.Effects.ICellEffect.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  parent: SadConsole.Effects.ICellEffect
  isExternal: true
  href: SadConsole.Effects.ICellEffect.html#SadConsole_Effects_ICellEffect_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  name: ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  nameWithType: ICellEffect.ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  fullName: SadConsole.Effects.ICellEffect.ApplyToCell(SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase)
  spec.csharp:
  - uid: SadConsole.Effects.ICellEffect.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
    name: ApplyToCell
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html#SadConsole_Effects_ICellEffect_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  - name: (
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.ICellEffect.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
    name: ApplyToCell
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html#SadConsole_Effects_ICellEffect_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  - name: (
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: )
- uid: SadConsole.Effects.ICellEffect.Update(System.TimeSpan)
  commentId: M:SadConsole.Effects.ICellEffect.Update(System.TimeSpan)
  parent: SadConsole.Effects.ICellEffect
  isExternal: true
  href: SadConsole.Effects.ICellEffect.html#SadConsole_Effects_ICellEffect_Update_System_TimeSpan_
  name: Update(TimeSpan)
  nameWithType: ICellEffect.Update(TimeSpan)
  fullName: SadConsole.Effects.ICellEffect.Update(System.TimeSpan)
  spec.csharp:
  - uid: SadConsole.Effects.ICellEffect.Update(System.TimeSpan)
    name: Update
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html#SadConsole_Effects_ICellEffect_Update_System_TimeSpan_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.ICellEffect.Update(System.TimeSpan)
    name: Update
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html#SadConsole_Effects_ICellEffect_Update_System_TimeSpan_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: SadConsole.Effects.ICellEffect.Restart
  commentId: M:SadConsole.Effects.ICellEffect.Restart
  parent: SadConsole.Effects.ICellEffect
  isExternal: true
  href: SadConsole.Effects.ICellEffect.html#SadConsole_Effects_ICellEffect_Restart
  name: Restart()
  nameWithType: ICellEffect.Restart()
  fullName: SadConsole.Effects.ICellEffect.Restart()
  spec.csharp:
  - uid: SadConsole.Effects.ICellEffect.Restart
    name: Restart
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html#SadConsole_Effects_ICellEffect_Restart
  - name: (
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.ICellEffect.Restart
    name: Restart
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html#SadConsole_Effects_ICellEffect_Restart
  - name: (
  - name: )
- uid: SadConsole.Effects.CodeEffect.#ctor*
  commentId: Overload:SadConsole.Effects.CodeEffect.#ctor
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect__ctor_System_String_System_Func_SadConsole_Effects_CodeEffect_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_System_Boolean__System_Action_SadConsole_Effects_CodeEffect_System_TimeSpan__System_Action_SadConsole_Effects_CodeEffect__
  name: CodeEffect
  nameWithType: CodeEffect.CodeEffect
  fullName: SadConsole.Effects.CodeEffect.CodeEffect
  nameWithType.vb: CodeEffect.New
  fullName.vb: SadConsole.Effects.CodeEffect.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Func{SadConsole.Effects.CodeEffect,SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase,System.Boolean}
  commentId: T:System.Func{SadConsole.Effects.CodeEffect,SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase,System.Boolean}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<CodeEffect, ColoredGlyphBase, ColoredGlyphBase, bool>
  nameWithType: Func<CodeEffect, ColoredGlyphBase, ColoredGlyphBase, bool>
  fullName: System.Func<SadConsole.Effects.CodeEffect, SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase, bool>
  nameWithType.vb: Func(Of CodeEffect, ColoredGlyphBase, ColoredGlyphBase, Boolean)
  fullName.vb: System.Func(Of SadConsole.Effects.CodeEffect, SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase, Boolean)
  name.vb: Func(Of CodeEffect, ColoredGlyphBase, ColoredGlyphBase, Boolean)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: SadConsole.Effects.CodeEffect
    name: CodeEffect
    isExternal: true
    href: SadConsole.Effects.CodeEffect.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Effects.CodeEffect
    name: CodeEffect
    isExternal: true
    href: SadConsole.Effects.CodeEffect.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action{SadConsole.Effects.CodeEffect,System.TimeSpan}
  commentId: T:System.Action{SadConsole.Effects.CodeEffect,System.TimeSpan}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<CodeEffect, TimeSpan>
  nameWithType: Action<CodeEffect, TimeSpan>
  fullName: System.Action<SadConsole.Effects.CodeEffect, System.TimeSpan>
  nameWithType.vb: Action(Of CodeEffect, TimeSpan)
  fullName.vb: System.Action(Of SadConsole.Effects.CodeEffect, System.TimeSpan)
  name.vb: Action(Of CodeEffect, TimeSpan)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: SadConsole.Effects.CodeEffect
    name: CodeEffect
    isExternal: true
    href: SadConsole.Effects.CodeEffect.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Effects.CodeEffect
    name: CodeEffect
    isExternal: true
    href: SadConsole.Effects.CodeEffect.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: System.Action{SadConsole.Effects.CodeEffect}
  commentId: T:System.Action{SadConsole.Effects.CodeEffect}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<CodeEffect>
  nameWithType: Action<CodeEffect>
  fullName: System.Action<SadConsole.Effects.CodeEffect>
  nameWithType.vb: Action(Of CodeEffect)
  fullName.vb: System.Action(Of SadConsole.Effects.CodeEffect)
  name.vb: Action(Of CodeEffect)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: SadConsole.Effects.CodeEffect
    name: CodeEffect
    isExternal: true
    href: SadConsole.Effects.CodeEffect.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Effects.CodeEffect
    name: CodeEffect
    isExternal: true
    href: SadConsole.Effects.CodeEffect.html
  - name: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  name: ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  nameWithType: CellEffectBase.ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  fullName: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase)
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
    name: ApplyToCell
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  - name: (
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
    name: ApplyToCell
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  - name: (
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: )
- uid: SadConsole.Effects.CodeEffect.ApplyToCell*
  commentId: Overload:SadConsole.Effects.CodeEffect.ApplyToCell
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  name: ApplyToCell
  nameWithType: CodeEffect.ApplyToCell
  fullName: SadConsole.Effects.CodeEffect.ApplyToCell
- uid: SadConsole.ColoredGlyphBase
  commentId: T:SadConsole.ColoredGlyphBase
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredGlyphBase.html
  name: ColoredGlyphBase
  nameWithType: ColoredGlyphBase
  fullName: SadConsole.ColoredGlyphBase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: SadConsole.Effects.CellEffectBase.Clone
  commentId: M:SadConsole.Effects.CellEffectBase.Clone
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Clone
  name: Clone()
  nameWithType: CellEffectBase.Clone()
  fullName: SadConsole.Effects.CellEffectBase.Clone()
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.Clone
    name: Clone
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.Clone
    name: Clone
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Clone
  - name: (
  - name: )
- uid: SadConsole.Effects.CodeEffect.Clone*
  commentId: Overload:SadConsole.Effects.CodeEffect.Clone
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect_Clone
  name: Clone
  nameWithType: CodeEffect.Clone
  fullName: SadConsole.Effects.CodeEffect.Clone
- uid: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  commentId: M:SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Update_System_TimeSpan_
  name: Update(TimeSpan)
  nameWithType: CellEffectBase.Update(TimeSpan)
  fullName: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
    name: Update
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Update_System_TimeSpan_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
    name: Update
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Update_System_TimeSpan_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: SadConsole.Effects.CodeEffect.Update*
  commentId: Overload:SadConsole.Effects.CodeEffect.Update
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect_Update_System_TimeSpan_
  name: Update
  nameWithType: CodeEffect.Update
  fullName: SadConsole.Effects.CodeEffect.Update
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: SadConsole.Effects.CellEffectBase.Restart
  commentId: M:SadConsole.Effects.CellEffectBase.Restart
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Restart
  name: Restart()
  nameWithType: CellEffectBase.Restart()
  fullName: SadConsole.Effects.CellEffectBase.Restart()
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.Restart
    name: Restart
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Restart
  - name: (
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.Restart
    name: Restart
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Restart
  - name: (
  - name: )
- uid: SadConsole.Effects.CodeEffect.Restart*
  commentId: Overload:SadConsole.Effects.CodeEffect.Restart
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect_Restart
  name: Restart
  nameWithType: CodeEffect.Restart
  fullName: SadConsole.Effects.CodeEffect.Restart
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SadConsole.Effects.CodeEffect.ToString*
  commentId: Overload:SadConsole.Effects.CodeEffect.ToString
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect_ToString
  name: ToString
  nameWithType: CodeEffect.ToString
  fullName: SadConsole.Effects.CodeEffect.ToString
- uid: SadConsole.Effects.CodeEffect.Id*
  commentId: Overload:SadConsole.Effects.CodeEffect.Id
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect_Id
  name: Id
  nameWithType: CodeEffect.Id
  fullName: SadConsole.Effects.CodeEffect.Id
- uid: SadConsole.Effects.CodeEffect.Tag*
  commentId: Overload:SadConsole.Effects.CodeEffect.Tag
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect_Tag
  name: Tag
  nameWithType: CodeEffect.Tag
  fullName: SadConsole.Effects.CodeEffect.Tag
- uid: SadConsole.Effects.CodeEffect.Duration
  commentId: P:SadConsole.Effects.CodeEffect.Duration
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect_Duration
  name: Duration
  nameWithType: CodeEffect.Duration
  fullName: SadConsole.Effects.CodeEffect.Duration
- uid: SadConsole.Effects.CodeEffect.UseDuration*
  commentId: Overload:SadConsole.Effects.CodeEffect.UseDuration
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect_UseDuration
  name: UseDuration
  nameWithType: CodeEffect.UseDuration
  fullName: SadConsole.Effects.CodeEffect.UseDuration
- uid: SadConsole.Effects.CodeEffect.Duration*
  commentId: Overload:SadConsole.Effects.CodeEffect.Duration
  isExternal: true
  href: SadConsole.Effects.CodeEffect.html#SadConsole_Effects_CodeEffect_Duration
  name: Duration
  nameWithType: CodeEffect.Duration
  fullName: SadConsole.Effects.CodeEffect.Duration
