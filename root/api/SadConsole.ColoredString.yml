### YamlMime:ManagedReference
items:
- uid: SadConsole.ColoredString
  commentId: T:SadConsole.ColoredString
  id: ColoredString
  parent: SadConsole
  children:
  - SadConsole.ColoredString.#ctor
  - SadConsole.ColoredString.#ctor(SadConsole.ColoredGlyphAndEffect[])
  - SadConsole.ColoredString.#ctor(SadConsole.ColoredGlyphBase[])
  - SadConsole.ColoredString.#ctor(System.Int32)
  - SadConsole.ColoredString.#ctor(System.String,SadConsole.ColoredGlyphAndEffect)
  - SadConsole.ColoredString.#ctor(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,SadConsole.CellDecorator[])
  - SadConsole.ColoredString.#ctor(System.String,System.Boolean)
  - SadConsole.ColoredString.Clone
  - SadConsole.ColoredString.FromGradient(SadRogue.Primitives.Gradient,System.String)
  - SadConsole.ColoredString.GetEnumerator
  - SadConsole.ColoredString.IgnoreBackground
  - SadConsole.ColoredString.IgnoreDecorators
  - SadConsole.ColoredString.IgnoreEffect
  - SadConsole.ColoredString.IgnoreForeground
  - SadConsole.ColoredString.IgnoreGlyph
  - SadConsole.ColoredString.IgnoreMirror
  - SadConsole.ColoredString.Item(System.Int32)
  - SadConsole.ColoredString.Length
  - SadConsole.ColoredString.Parser
  - SadConsole.ColoredString.SetBackground(SadRogue.Primitives.Color)
  - SadConsole.ColoredString.SetDecorators(SadConsole.CellDecorator[])
  - SadConsole.ColoredString.SetDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator})
  - SadConsole.ColoredString.SetEffect(SadConsole.Effects.ICellEffect)
  - SadConsole.ColoredString.SetForeground(SadRogue.Primitives.Color)
  - SadConsole.ColoredString.SetGlyph(System.Int32)
  - SadConsole.ColoredString.SetMirror(SadConsole.Mirror)
  - SadConsole.ColoredString.String
  - SadConsole.ColoredString.SubString(System.Int32)
  - SadConsole.ColoredString.SubString(System.Int32,System.Int32)
  - SadConsole.ColoredString.ToString
  - SadConsole.ColoredString.op_Addition(SadConsole.ColoredString,SadConsole.ColoredString)
  - SadConsole.ColoredString.op_Addition(SadConsole.ColoredString,System.String)
  - SadConsole.ColoredString.op_Addition(System.String,SadConsole.ColoredString)
  langs:
  - csharp
  - vb
  name: ColoredString
  nameWithType: ColoredString
  fullName: SadConsole.ColoredString
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Represents a string that has foreground and background colors for each character in the string.
  example: []
  syntax:
    content: >-
      [DataContract]

      [JsonObject(MemberSerialization = MemberSerialization.OptIn)]

      public class ColoredString : IEnumerable<ColoredGlyphAndEffect>, IEnumerable
    content.vb: >-
      <DataContract>

      <JsonObject(MemberSerialization:=MemberSerialization.OptIn)>

      Public Class ColoredString Implements IEnumerable(Of ColoredGlyphAndEffect), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphAndEffect}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor
    arguments: []
    namedArguments:
    - name: MemberSerialization
      type: Newtonsoft.Json.MemberSerialization
      value: 1
- uid: SadConsole.ColoredString.#ctor
  commentId: M:SadConsole.ColoredString.#ctor
  id: '#ctor'
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: ColoredString()
  nameWithType: ColoredString.ColoredString()
  fullName: SadConsole.ColoredString.ColoredString()
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Default constructor.
  example: []
  syntax:
    content: public ColoredString()
    content.vb: Public Sub New()
  overload: SadConsole.ColoredString.#ctor*
  nameWithType.vb: ColoredString.New()
  fullName.vb: SadConsole.ColoredString.New()
  name.vb: New()
- uid: SadConsole.ColoredString.#ctor(System.Int32)
  commentId: M:SadConsole.ColoredString.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: ColoredString(int)
  nameWithType: ColoredString.ColoredString(int)
  fullName: SadConsole.ColoredString.ColoredString(int)
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a new instance of the ColoredString class with the specified blank characters.
  example: []
  syntax:
    content: public ColoredString(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
      description: The number of blank characters.
    content.vb: Public Sub New(capacity As Integer)
  overload: SadConsole.ColoredString.#ctor*
  nameWithType.vb: ColoredString.New(Integer)
  fullName.vb: SadConsole.ColoredString.New(Integer)
  name.vb: New(Integer)
- uid: SadConsole.ColoredString.#ctor(System.String,System.Boolean)
  commentId: M:SadConsole.ColoredString.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: ColoredString(string, bool)
  nameWithType: ColoredString.ColoredString(string, bool)
  fullName: SadConsole.ColoredString.ColoredString(string, bool)
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a new instance of this class with the specified string value.
  example: []
  syntax:
    content: public ColoredString(string value, bool treatAsString = false)
    parameters:
    - id: value
      type: System.String
      description: The backing string.
    - id: treatAsString
      type: System.Boolean
      description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, sets all of the Ignore properties to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, treating this instance as a normal string.
    content.vb: Public Sub New(value As String, treatAsString As Boolean = False)
  overload: SadConsole.ColoredString.#ctor*
  nameWithType.vb: ColoredString.New(String, Boolean)
  fullName.vb: SadConsole.ColoredString.New(String, Boolean)
  name.vb: New(String, Boolean)
- uid: SadConsole.ColoredString.#ctor(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,SadConsole.CellDecorator[])
  commentId: M:SadConsole.ColoredString.#ctor(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,SadConsole.CellDecorator[])
  id: '#ctor(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.Mirror,SadConsole.CellDecorator[])'
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: ColoredString(string, Color, Color, Mirror, CellDecorator[]?)
  nameWithType: ColoredString.ColoredString(string, Color, Color, Mirror, CellDecorator[]?)
  fullName: SadConsole.ColoredString.ColoredString(string, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadConsole.Mirror, SadConsole.CellDecorator[]?)
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a new instance of the ColoredString class with the specified string value, foreground and background colors, and a cell effect.
  example: []
  syntax:
    content: public ColoredString(string value, Color foreground, Color background, Mirror mirror = Mirror.None, CellDecorator[]? decorators = null)
    parameters:
    - id: value
      type: System.String
      description: The backing string.
    - id: foreground
      type: SadRogue.Primitives.Color
      description: The foreground color for each character.
    - id: background
      type: SadRogue.Primitives.Color
      description: The background color for each character.
    - id: mirror
      type: SadConsole.Mirror
      description: The mirror for each character.
    - id: decorators
      type: SadConsole.CellDecorator[]
      description: The decorators to apply to each character.
    content.vb: Public Sub New(value As String, foreground As Color, background As Color, mirror As Mirror = Mirror.None, decorators As CellDecorator() = Nothing)
  overload: SadConsole.ColoredString.#ctor*
  nameWithType.vb: ColoredString.New(String, Color, Color, Mirror, CellDecorator())
  fullName.vb: SadConsole.ColoredString.New(String, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadConsole.Mirror, SadConsole.CellDecorator())
  name.vb: New(String, Color, Color, Mirror, CellDecorator())
- uid: SadConsole.ColoredString.#ctor(System.String,SadConsole.ColoredGlyphAndEffect)
  commentId: M:SadConsole.ColoredString.#ctor(System.String,SadConsole.ColoredGlyphAndEffect)
  id: '#ctor(System.String,SadConsole.ColoredGlyphAndEffect)'
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: ColoredString(string, ColoredGlyphAndEffect)
  nameWithType: ColoredString.ColoredString(string, ColoredGlyphAndEffect)
  fullName: SadConsole.ColoredString.ColoredString(string, SadConsole.ColoredGlyphAndEffect)
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a new instance of the ColoredString class with the specified string value, foreground and background colors, and a cell effect.
  example: []
  syntax:
    content: public ColoredString(string value, ColoredGlyphAndEffect appearance)
    parameters:
    - id: value
      type: System.String
      description: The backing string.
    - id: appearance
      type: SadConsole.ColoredGlyphAndEffect
      description: The appearance to use for each character.
    content.vb: Public Sub New(value As String, appearance As ColoredGlyphAndEffect)
  overload: SadConsole.ColoredString.#ctor*
  nameWithType.vb: ColoredString.New(String, ColoredGlyphAndEffect)
  fullName.vb: SadConsole.ColoredString.New(String, SadConsole.ColoredGlyphAndEffect)
  name.vb: New(String, ColoredGlyphAndEffect)
- uid: SadConsole.ColoredString.#ctor(SadConsole.ColoredGlyphAndEffect[])
  commentId: M:SadConsole.ColoredString.#ctor(SadConsole.ColoredGlyphAndEffect[])
  id: '#ctor(SadConsole.ColoredGlyphAndEffect[])'
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: ColoredString(params ColoredGlyphAndEffect[])
  nameWithType: ColoredString.ColoredString(params ColoredGlyphAndEffect[])
  fullName: SadConsole.ColoredString.ColoredString(params SadConsole.ColoredGlyphAndEffect[])
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Combines a <xref href="SadConsole.ColoredGlyphAndEffect" data-throw-if-not-resolved="false"></xref> array into a <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ColoredString(params ColoredGlyphAndEffect[] glyphs)
    parameters:
    - id: glyphs
      type: SadConsole.ColoredGlyphAndEffect[]
      description: The glyphs to combine.
    content.vb: Public Sub New(ParamArray glyphs As ColoredGlyphAndEffect())
  overload: SadConsole.ColoredString.#ctor*
  nameWithType.vb: ColoredString.New(ParamArray ColoredGlyphAndEffect())
  fullName.vb: SadConsole.ColoredString.New(ParamArray SadConsole.ColoredGlyphAndEffect())
  name.vb: New(ParamArray ColoredGlyphAndEffect())
- uid: SadConsole.ColoredString.#ctor(SadConsole.ColoredGlyphBase[])
  commentId: M:SadConsole.ColoredString.#ctor(SadConsole.ColoredGlyphBase[])
  id: '#ctor(SadConsole.ColoredGlyphBase[])'
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: ColoredString(params ColoredGlyphBase[])
  nameWithType: ColoredString.ColoredString(params ColoredGlyphBase[])
  fullName: SadConsole.ColoredString.ColoredString(params SadConsole.ColoredGlyphBase[])
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Combines a <xref href="SadConsole.ColoredGlyphBase" data-throw-if-not-resolved="false"></xref> array into a <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ColoredString(params ColoredGlyphBase[] glyphs)
    parameters:
    - id: glyphs
      type: SadConsole.ColoredGlyphBase[]
      description: The glyphs to combine.
    content.vb: Public Sub New(ParamArray glyphs As ColoredGlyphBase())
  overload: SadConsole.ColoredString.#ctor*
  nameWithType.vb: ColoredString.New(ParamArray ColoredGlyphBase())
  fullName.vb: SadConsole.ColoredString.New(ParamArray SadConsole.ColoredGlyphBase())
  name.vb: New(ParamArray ColoredGlyphBase())
- uid: SadConsole.ColoredString.Clone
  commentId: M:SadConsole.ColoredString.Clone
  id: Clone
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ColoredString.Clone()
  fullName: SadConsole.ColoredString.Clone()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Returns a new <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object by cloning this instance.
  example: []
  syntax:
    content: public ColoredString Clone()
    return:
      type: SadConsole.ColoredString
      description: A new <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Function Clone() As ColoredString
  overload: SadConsole.ColoredString.Clone*
- uid: SadConsole.ColoredString.SubString(System.Int32)
  commentId: M:SadConsole.ColoredString.SubString(System.Int32)
  id: SubString(System.Int32)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: SubString(int)
  nameWithType: ColoredString.SubString(int)
  fullName: SadConsole.ColoredString.SubString(int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Returns a new <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object using a substring of this instance from the index to the end.
  example: []
  syntax:
    content: public ColoredString SubString(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index to copy the contents from.
    return:
      type: SadConsole.ColoredString
      description: A new <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Function SubString(index As Integer) As ColoredString
  overload: SadConsole.ColoredString.SubString*
  nameWithType.vb: ColoredString.SubString(Integer)
  fullName.vb: SadConsole.ColoredString.SubString(Integer)
  name.vb: SubString(Integer)
- uid: SadConsole.ColoredString.SubString(System.Int32,System.Int32)
  commentId: M:SadConsole.ColoredString.SubString(System.Int32,System.Int32)
  id: SubString(System.Int32,System.Int32)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: SubString(int, int)
  nameWithType: ColoredString.SubString(int, int)
  fullName: SadConsole.ColoredString.SubString(int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Returns a new <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object using a substring of this instance.
  example: []
  syntax:
    content: public ColoredString SubString(int index, int count)
    parameters:
    - id: index
      type: System.Int32
      description: The index to copy the contents from.
    - id: count
      type: System.Int32
      description: The count of <xref href="SadConsole.ColoredGlyphAndEffect" data-throw-if-not-resolved="false"></xref> objects to copy.
    return:
      type: SadConsole.ColoredString
      description: A new <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Function SubString(index As Integer, count As Integer) As ColoredString
  overload: SadConsole.ColoredString.SubString*
  nameWithType.vb: ColoredString.SubString(Integer, Integer)
  fullName.vb: SadConsole.ColoredString.SubString(Integer, Integer)
  name.vb: SubString(Integer, Integer)
- uid: SadConsole.ColoredString.SetEffect(SadConsole.Effects.ICellEffect)
  commentId: M:SadConsole.ColoredString.SetEffect(SadConsole.Effects.ICellEffect)
  id: SetEffect(SadConsole.Effects.ICellEffect)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: SetEffect(ICellEffect?)
  nameWithType: ColoredString.SetEffect(ICellEffect?)
  fullName: SadConsole.ColoredString.SetEffect(SadConsole.Effects.ICellEffect?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Applies the referenced cell effect to every character in the colored string.
  example: []
  syntax:
    content: public void SetEffect(ICellEffect? effect)
    parameters:
    - id: effect
      type: SadConsole.Effects.ICellEffect
      description: The effect to apply.
    content.vb: Public Sub SetEffect(effect As ICellEffect)
  overload: SadConsole.ColoredString.SetEffect*
  nameWithType.vb: ColoredString.SetEffect(ICellEffect)
  fullName.vb: SadConsole.ColoredString.SetEffect(SadConsole.Effects.ICellEffect)
  name.vb: SetEffect(ICellEffect)
- uid: SadConsole.ColoredString.SetForeground(SadRogue.Primitives.Color)
  commentId: M:SadConsole.ColoredString.SetForeground(SadRogue.Primitives.Color)
  id: SetForeground(SadRogue.Primitives.Color)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: SetForeground(Color)
  nameWithType: ColoredString.SetForeground(Color)
  fullName: SadConsole.ColoredString.SetForeground(SadRogue.Primitives.Color)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Applies the referenced color to every character foreground in the colored string.
  example: []
  syntax:
    content: public void SetForeground(Color color)
    parameters:
    - id: color
      type: SadRogue.Primitives.Color
      description: The color to apply.
    content.vb: Public Sub SetForeground(color As Color)
  overload: SadConsole.ColoredString.SetForeground*
- uid: SadConsole.ColoredString.SetBackground(SadRogue.Primitives.Color)
  commentId: M:SadConsole.ColoredString.SetBackground(SadRogue.Primitives.Color)
  id: SetBackground(SadRogue.Primitives.Color)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: SetBackground(Color)
  nameWithType: ColoredString.SetBackground(Color)
  fullName: SadConsole.ColoredString.SetBackground(SadRogue.Primitives.Color)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Applies the referenced color to every character background in the colored string.
  example: []
  syntax:
    content: public void SetBackground(Color color)
    parameters:
    - id: color
      type: SadRogue.Primitives.Color
      description: The color to apply.
    content.vb: Public Sub SetBackground(color As Color)
  overload: SadConsole.ColoredString.SetBackground*
- uid: SadConsole.ColoredString.SetGlyph(System.Int32)
  commentId: M:SadConsole.ColoredString.SetGlyph(System.Int32)
  id: SetGlyph(System.Int32)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: SetGlyph(int)
  nameWithType: ColoredString.SetGlyph(int)
  fullName: SadConsole.ColoredString.SetGlyph(int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Applies the referenced glyph to every character in the colored string.
  example: []
  syntax:
    content: public void SetGlyph(int glyph)
    parameters:
    - id: glyph
      type: System.Int32
      description: The glyph to apply.
    content.vb: Public Sub SetGlyph(glyph As Integer)
  overload: SadConsole.ColoredString.SetGlyph*
  nameWithType.vb: ColoredString.SetGlyph(Integer)
  fullName.vb: SadConsole.ColoredString.SetGlyph(Integer)
  name.vb: SetGlyph(Integer)
- uid: SadConsole.ColoredString.SetMirror(SadConsole.Mirror)
  commentId: M:SadConsole.ColoredString.SetMirror(SadConsole.Mirror)
  id: SetMirror(SadConsole.Mirror)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: SetMirror(Mirror)
  nameWithType: ColoredString.SetMirror(Mirror)
  fullName: SadConsole.ColoredString.SetMirror(SadConsole.Mirror)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Applies the mirror value to each character in the colored string.
  example: []
  syntax:
    content: public void SetMirror(Mirror mirror)
    parameters:
    - id: mirror
      type: SadConsole.Mirror
      description: The mirror mode.
    content.vb: Public Sub SetMirror(mirror As Mirror)
  overload: SadConsole.ColoredString.SetMirror*
- uid: SadConsole.ColoredString.SetDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator})
  commentId: M:SadConsole.ColoredString.SetDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator})
  id: SetDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator})
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: SetDecorators(IEnumerable<CellDecorator>)
  nameWithType: ColoredString.SetDecorators(IEnumerable<CellDecorator>)
  fullName: SadConsole.ColoredString.SetDecorators(System.Collections.Generic.IEnumerable<SadConsole.CellDecorator>)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Applies the decorators to each character in the colored string.
  example: []
  syntax:
    content: public void SetDecorators(IEnumerable<CellDecorator> decorators)
    parameters:
    - id: decorators
      type: System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
      description: The decorators.
    content.vb: Public Sub SetDecorators(decorators As IEnumerable(Of CellDecorator))
  overload: SadConsole.ColoredString.SetDecorators*
  nameWithType.vb: ColoredString.SetDecorators(IEnumerable(Of CellDecorator))
  fullName.vb: SadConsole.ColoredString.SetDecorators(System.Collections.Generic.IEnumerable(Of SadConsole.CellDecorator))
  name.vb: SetDecorators(IEnumerable(Of CellDecorator))
- uid: SadConsole.ColoredString.SetDecorators(SadConsole.CellDecorator[])
  commentId: M:SadConsole.ColoredString.SetDecorators(SadConsole.CellDecorator[])
  id: SetDecorators(SadConsole.CellDecorator[])
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: SetDecorators(params CellDecorator[])
  nameWithType: ColoredString.SetDecorators(params CellDecorator[])
  fullName: SadConsole.ColoredString.SetDecorators(params SadConsole.CellDecorator[])
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Applies the decorators to each character in the colored string.
  example: []
  syntax:
    content: public void SetDecorators(params CellDecorator[] decorators)
    parameters:
    - id: decorators
      type: SadConsole.CellDecorator[]
      description: The decorators.
    content.vb: Public Sub SetDecorators(ParamArray decorators As CellDecorator())
  overload: SadConsole.ColoredString.SetDecorators*
  nameWithType.vb: ColoredString.SetDecorators(ParamArray CellDecorator())
  fullName.vb: SadConsole.ColoredString.SetDecorators(ParamArray SadConsole.CellDecorator())
  name.vb: SetDecorators(ParamArray CellDecorator())
- uid: SadConsole.ColoredString.ToString
  commentId: M:SadConsole.ColoredString.ToString
  id: ToString
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ColoredString.ToString()
  fullName: SadConsole.ColoredString.ToString()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Returns a string representing the glyphs in this object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string composed of each glyph in this object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SadConsole.ColoredString.ToString*
- uid: SadConsole.ColoredString.GetEnumerator
  commentId: M:SadConsole.ColoredString.GetEnumerator
  id: GetEnumerator
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ColoredString.GetEnumerator()
  fullName: SadConsole.ColoredString.GetEnumerator()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Gets an enumerator for the <xref href="SadConsole.ColoredGlyphAndEffect" data-throw-if-not-resolved="false"></xref> objects in this string.
  example: []
  syntax:
    content: public IEnumerator<ColoredGlyphAndEffect> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{SadConsole.ColoredGlyphAndEffect}
      description: The enumerator in the string.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of ColoredGlyphAndEffect)
  overload: SadConsole.ColoredString.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphAndEffect}.GetEnumerator
- uid: SadConsole.ColoredString.FromGradient(SadRogue.Primitives.Gradient,System.String)
  commentId: M:SadConsole.ColoredString.FromGradient(SadRogue.Primitives.Gradient,System.String)
  id: FromGradient(SadRogue.Primitives.Gradient,System.String)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: FromGradient(Gradient, string)
  nameWithType: ColoredString.FromGradient(Gradient, string)
  fullName: SadConsole.ColoredString.FromGradient(SadRogue.Primitives.Gradient, string)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a new colored string from the specified gradient and text.
  example: []
  syntax:
    content: public static ColoredString FromGradient(Gradient colors, string text)
    parameters:
    - id: colors
      type: SadRogue.Primitives.Gradient
      description: The gradient of colors to apply to the text.
    - id: text
      type: System.String
      description: The text the colored string contains.
    return:
      type: SadConsole.ColoredString
      description: A colored string.
    content.vb: Public Shared Function FromGradient(colors As Gradient, text As String) As ColoredString
  overload: SadConsole.ColoredString.FromGradient*
  nameWithType.vb: ColoredString.FromGradient(Gradient, String)
  fullName.vb: SadConsole.ColoredString.FromGradient(SadRogue.Primitives.Gradient, String)
  name.vb: FromGradient(Gradient, String)
- uid: SadConsole.ColoredString.op_Addition(SadConsole.ColoredString,SadConsole.ColoredString)
  commentId: M:SadConsole.ColoredString.op_Addition(SadConsole.ColoredString,SadConsole.ColoredString)
  id: op_Addition(SadConsole.ColoredString,SadConsole.ColoredString)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: operator +(ColoredString, ColoredString)
  nameWithType: ColoredString.operator +(ColoredString, ColoredString)
  fullName: SadConsole.ColoredString.operator +(SadConsole.ColoredString, SadConsole.ColoredString)
  type: Operator
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Combines two ColoredString objects into a single ColoredString object. Ignore* values are only copied when both strings Ignore* values match.
  example: []
  syntax:
    content: public static ColoredString operator +(ColoredString string1, ColoredString string2)
    parameters:
    - id: string1
      type: SadConsole.ColoredString
      description: The left-side of the string.
    - id: string2
      type: SadConsole.ColoredString
      description: The right-side of the string.
    return:
      type: SadConsole.ColoredString
      description: ''
    content.vb: Public Shared Operator +(string1 As ColoredString, string2 As ColoredString) As ColoredString
  overload: SadConsole.ColoredString.op_Addition*
  nameWithType.vb: ColoredString.+(ColoredString, ColoredString)
  fullName.vb: SadConsole.ColoredString.+(SadConsole.ColoredString, SadConsole.ColoredString)
  name.vb: +(ColoredString, ColoredString)
- uid: SadConsole.ColoredString.op_Addition(SadConsole.ColoredString,System.String)
  commentId: M:SadConsole.ColoredString.op_Addition(SadConsole.ColoredString,System.String)
  id: op_Addition(SadConsole.ColoredString,System.String)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: operator +(ColoredString, string)
  nameWithType: ColoredString.operator +(ColoredString, string)
  fullName: SadConsole.ColoredString.operator +(SadConsole.ColoredString, string)
  type: Operator
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Combines a colored string and string. The last colored glyph in the colored string is used for all of the characters in the added string.
  example: []
  syntax:
    content: public static ColoredString operator +(ColoredString string1, string string2)
    parameters:
    - id: string1
      type: SadConsole.ColoredString
      description: The colored string.
    - id: string2
      type: System.String
      description: The string.
    return:
      type: SadConsole.ColoredString
      description: A new colored string instance.
    content.vb: Public Shared Operator +(string1 As ColoredString, string2 As String) As ColoredString
  overload: SadConsole.ColoredString.op_Addition*
  nameWithType.vb: ColoredString.+(ColoredString, String)
  fullName.vb: SadConsole.ColoredString.+(SadConsole.ColoredString, String)
  name.vb: +(ColoredString, String)
- uid: SadConsole.ColoredString.op_Addition(System.String,SadConsole.ColoredString)
  commentId: M:SadConsole.ColoredString.op_Addition(System.String,SadConsole.ColoredString)
  id: op_Addition(System.String,SadConsole.ColoredString)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: operator +(string, ColoredString)
  nameWithType: ColoredString.operator +(string, ColoredString)
  fullName: SadConsole.ColoredString.operator +(string, SadConsole.ColoredString)
  type: Operator
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Combines a string and a colored string. The first colored glyph in the colored string is used for all of the characters in the added string.
  example: []
  syntax:
    content: public static ColoredString operator +(string string1, ColoredString string2)
    parameters:
    - id: string1
      type: System.String
      description: The string.
    - id: string2
      type: SadConsole.ColoredString
      description: The colored string.
    return:
      type: SadConsole.ColoredString
      description: A new colored string instance.
    content.vb: Public Shared Operator +(string1 As String, string2 As ColoredString) As ColoredString
  overload: SadConsole.ColoredString.op_Addition*
  nameWithType.vb: ColoredString.+(String, ColoredString)
  fullName.vb: SadConsole.ColoredString.+(String, SadConsole.ColoredString)
  name.vb: +(String, ColoredString)
- uid: SadConsole.ColoredString.Item(System.Int32)
  commentId: P:SadConsole.ColoredString.Item(System.Int32)
  id: Item(System.Int32)
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: ColoredString.this[int]
  fullName: SadConsole.ColoredString.this[int]
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Gets a <xref href="SadConsole.ColoredGlyphAndEffect" data-throw-if-not-resolved="false"></xref> from the string.
  example: []
  syntax:
    content: public ColoredGlyphAndEffect this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index in the string of the <xref href="SadConsole.ColoredGlyphAndEffect" data-throw-if-not-resolved="false"></xref>.
    return:
      type: SadConsole.ColoredGlyphAndEffect
      description: The colored glyph representing the character in the string.
    content.vb: Public Default Property this[](index As Integer) As ColoredGlyphAndEffect
  overload: SadConsole.ColoredString.Item*
  nameWithType.vb: ColoredString.this[](Integer)
  fullName.vb: SadConsole.ColoredString.this[](Integer)
  name.vb: this[](Integer)
- uid: SadConsole.ColoredString.String
  commentId: P:SadConsole.ColoredString.String
  id: String
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: String
  nameWithType: ColoredString.String
  fullName: SadConsole.ColoredString.String
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Gets or sets the characters representing this string. When set, first processes the string through <xref href="SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan%7bSystem.Char%7d%2cSystem.Int32%2cSadConsole.ICellSurface%2cSadConsole.StringParser.ParseCommandStacks)" data-throw-if-not-resolved="false"></xref> method from <xref href="SadConsole.ColoredString.Parser" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string String { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property [String] As String
  overload: SadConsole.ColoredString.String*
- uid: SadConsole.ColoredString.Length
  commentId: P:SadConsole.ColoredString.Length
  id: Length
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: ColoredString.Length
  fullName: SadConsole.ColoredString.Length
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: The total number of <xref href="SadConsole.ColoredGlyphAndEffect" data-throw-if-not-resolved="false"></xref> characters in the string.
  example: []
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: SadConsole.ColoredString.Length*
- uid: SadConsole.ColoredString.IgnoreGlyph
  commentId: P:SadConsole.ColoredString.IgnoreGlyph
  id: IgnoreGlyph
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: IgnoreGlyph
  nameWithType: ColoredString.IgnoreGlyph
  fullName: SadConsole.ColoredString.IgnoreGlyph
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: When true, instructs a caller to not render the glyphs of the string.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IgnoreGlyph { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IgnoreGlyph As Boolean
  overload: SadConsole.ColoredString.IgnoreGlyph*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.ColoredString.IgnoreForeground
  commentId: P:SadConsole.ColoredString.IgnoreForeground
  id: IgnoreForeground
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: IgnoreForeground
  nameWithType: ColoredString.IgnoreForeground
  fullName: SadConsole.ColoredString.IgnoreForeground
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: When true, instructs a caller to not render the foreground color.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IgnoreForeground { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IgnoreForeground As Boolean
  overload: SadConsole.ColoredString.IgnoreForeground*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.ColoredString.IgnoreBackground
  commentId: P:SadConsole.ColoredString.IgnoreBackground
  id: IgnoreBackground
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: IgnoreBackground
  nameWithType: ColoredString.IgnoreBackground
  fullName: SadConsole.ColoredString.IgnoreBackground
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: When true, instructs a caller to not render the background color.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IgnoreBackground { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IgnoreBackground As Boolean
  overload: SadConsole.ColoredString.IgnoreBackground*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.ColoredString.IgnoreEffect
  commentId: P:SadConsole.ColoredString.IgnoreEffect
  id: IgnoreEffect
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: IgnoreEffect
  nameWithType: ColoredString.IgnoreEffect
  fullName: SadConsole.ColoredString.IgnoreEffect
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: When true, instructs a caller to not render the effect.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IgnoreEffect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IgnoreEffect As Boolean
  overload: SadConsole.ColoredString.IgnoreEffect*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.ColoredString.IgnoreMirror
  commentId: P:SadConsole.ColoredString.IgnoreMirror
  id: IgnoreMirror
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: IgnoreMirror
  nameWithType: ColoredString.IgnoreMirror
  fullName: SadConsole.ColoredString.IgnoreMirror
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: When true, instructs a caller to not render the mirror state.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IgnoreMirror { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IgnoreMirror As Boolean
  overload: SadConsole.ColoredString.IgnoreMirror*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.ColoredString.IgnoreDecorators
  commentId: P:SadConsole.ColoredString.IgnoreDecorators
  id: IgnoreDecorators
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: IgnoreDecorators
  nameWithType: ColoredString.IgnoreDecorators
  fullName: SadConsole.ColoredString.IgnoreDecorators
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: When true, instructs a caller to not render the mirror state.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IgnoreDecorators { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IgnoreDecorators As Boolean
  overload: SadConsole.ColoredString.IgnoreDecorators*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.ColoredString.Parser
  commentId: P:SadConsole.ColoredString.Parser
  id: Parser
  parent: SadConsole.ColoredString
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: ColoredString.Parser
  fullName: SadConsole.ColoredString.Parser
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: The string parser to use for transforming strings into <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IParser Parser { get; set; }
    parameters: []
    return:
      type: SadConsole.StringParser.IParser
    content.vb: Public Shared Property Parser As IParser
  overload: SadConsole.ColoredString.Parser*
references:
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphAndEffect}
  commentId: T:System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphAndEffect}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ColoredGlyphAndEffect>
  nameWithType: IEnumerable<ColoredGlyphAndEffect>
  fullName: System.Collections.Generic.IEnumerable<SadConsole.ColoredGlyphAndEffect>
  nameWithType.vb: IEnumerable(Of ColoredGlyphAndEffect)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.ColoredGlyphAndEffect)
  name.vb: IEnumerable(Of ColoredGlyphAndEffect)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: SadConsole.ColoredString.#ctor*
  commentId: Overload:SadConsole.ColoredString.#ctor
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString__ctor
  name: ColoredString
  nameWithType: ColoredString.ColoredString
  fullName: SadConsole.ColoredString.ColoredString
  nameWithType.vb: ColoredString.New
  fullName.vb: SadConsole.ColoredString.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadRogue.Primitives.Color
  commentId: T:SadRogue.Primitives.Color
  parent: SadRogue.Primitives
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: SadRogue.Primitives.Color
- uid: SadConsole.Mirror
  commentId: T:SadConsole.Mirror
  parent: SadConsole
  isExternal: true
  href: SadConsole.Mirror.html
  name: Mirror
  nameWithType: Mirror
  fullName: SadConsole.Mirror
- uid: SadConsole.CellDecorator[]
  isExternal: true
  href: SadConsole.CellDecorator.html
  name: CellDecorator[]
  nameWithType: CellDecorator[]
  fullName: SadConsole.CellDecorator[]
  nameWithType.vb: CellDecorator()
  fullName.vb: SadConsole.CellDecorator()
  name.vb: CellDecorator()
  spec.csharp:
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: (
  - name: )
- uid: SadRogue.Primitives
  commentId: N:SadRogue.Primitives
  isExternal: true
  href: SadRogue.html
  name: SadRogue.Primitives
  nameWithType: SadRogue.Primitives
  fullName: SadRogue.Primitives
  spec.csharp:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
  spec.vb:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
- uid: SadConsole.ColoredGlyphAndEffect
  commentId: T:SadConsole.ColoredGlyphAndEffect
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredGlyphAndEffect.html
  name: ColoredGlyphAndEffect
  nameWithType: ColoredGlyphAndEffect
  fullName: SadConsole.ColoredGlyphAndEffect
- uid: SadConsole.ColoredString
  commentId: T:SadConsole.ColoredString
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredString.html
  name: ColoredString
  nameWithType: ColoredString
  fullName: SadConsole.ColoredString
- uid: SadConsole.ColoredGlyphAndEffect[]
  isExternal: true
  href: SadConsole.ColoredGlyphAndEffect.html
  name: ColoredGlyphAndEffect[]
  nameWithType: ColoredGlyphAndEffect[]
  fullName: SadConsole.ColoredGlyphAndEffect[]
  nameWithType.vb: ColoredGlyphAndEffect()
  fullName.vb: SadConsole.ColoredGlyphAndEffect()
  name.vb: ColoredGlyphAndEffect()
  spec.csharp:
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: (
  - name: )
- uid: SadConsole.ColoredGlyphBase
  commentId: T:SadConsole.ColoredGlyphBase
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredGlyphBase.html
  name: ColoredGlyphBase
  nameWithType: ColoredGlyphBase
  fullName: SadConsole.ColoredGlyphBase
- uid: SadConsole.ColoredGlyphBase[]
  isExternal: true
  href: SadConsole.ColoredGlyphBase.html
  name: ColoredGlyphBase[]
  nameWithType: ColoredGlyphBase[]
  fullName: SadConsole.ColoredGlyphBase[]
  nameWithType.vb: ColoredGlyphBase()
  fullName.vb: SadConsole.ColoredGlyphBase()
  name.vb: ColoredGlyphBase()
  spec.csharp:
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: (
  - name: )
- uid: SadConsole.ColoredString.Clone*
  commentId: Overload:SadConsole.ColoredString.Clone
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_Clone
  name: Clone
  nameWithType: ColoredString.Clone
  fullName: SadConsole.ColoredString.Clone
- uid: SadConsole.ColoredString.SubString*
  commentId: Overload:SadConsole.ColoredString.SubString
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_SubString_System_Int32_
  name: SubString
  nameWithType: ColoredString.SubString
  fullName: SadConsole.ColoredString.SubString
- uid: SadConsole.ColoredString.SetEffect*
  commentId: Overload:SadConsole.ColoredString.SetEffect
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_SetEffect_SadConsole_Effects_ICellEffect_
  name: SetEffect
  nameWithType: ColoredString.SetEffect
  fullName: SadConsole.ColoredString.SetEffect
- uid: SadConsole.Effects.ICellEffect
  commentId: T:SadConsole.Effects.ICellEffect
  parent: SadConsole.Effects
  isExternal: true
  href: SadConsole.Effects.ICellEffect.html
  name: ICellEffect
  nameWithType: ICellEffect
  fullName: SadConsole.Effects.ICellEffect
- uid: SadConsole.Effects
  commentId: N:SadConsole.Effects
  isExternal: true
  href: SadConsole.html
  name: SadConsole.Effects
  nameWithType: SadConsole.Effects
  fullName: SadConsole.Effects
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
- uid: SadConsole.ColoredString.SetForeground*
  commentId: Overload:SadConsole.ColoredString.SetForeground
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_SetForeground_SadRogue_Primitives_Color_
  name: SetForeground
  nameWithType: ColoredString.SetForeground
  fullName: SadConsole.ColoredString.SetForeground
- uid: SadConsole.ColoredString.SetBackground*
  commentId: Overload:SadConsole.ColoredString.SetBackground
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_SetBackground_SadRogue_Primitives_Color_
  name: SetBackground
  nameWithType: ColoredString.SetBackground
  fullName: SadConsole.ColoredString.SetBackground
- uid: SadConsole.ColoredString.SetGlyph*
  commentId: Overload:SadConsole.ColoredString.SetGlyph
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_SetGlyph_System_Int32_
  name: SetGlyph
  nameWithType: ColoredString.SetGlyph
  fullName: SadConsole.ColoredString.SetGlyph
- uid: SadConsole.ColoredString.SetMirror*
  commentId: Overload:SadConsole.ColoredString.SetMirror
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_SetMirror_SadConsole_Mirror_
  name: SetMirror
  nameWithType: ColoredString.SetMirror
  fullName: SadConsole.ColoredString.SetMirror
- uid: SadConsole.ColoredString.SetDecorators*
  commentId: Overload:SadConsole.ColoredString.SetDecorators
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_SetDecorators_System_Collections_Generic_IEnumerable_SadConsole_CellDecorator__
  name: SetDecorators
  nameWithType: ColoredString.SetDecorators
  fullName: SadConsole.ColoredString.SetDecorators
- uid: System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
  commentId: T:System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<CellDecorator>
  nameWithType: IEnumerable<CellDecorator>
  fullName: System.Collections.Generic.IEnumerable<SadConsole.CellDecorator>
  nameWithType.vb: IEnumerable(Of CellDecorator)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.CellDecorator)
  name.vb: IEnumerable(Of CellDecorator)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SadConsole.ColoredString.ToString*
  commentId: Overload:SadConsole.ColoredString.ToString
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_ToString
  name: ToString
  nameWithType: ColoredString.ToString
  fullName: SadConsole.ColoredString.ToString
- uid: SadConsole.ColoredString.GetEnumerator*
  commentId: Overload:SadConsole.ColoredString.GetEnumerator
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_GetEnumerator
  name: GetEnumerator
  nameWithType: ColoredString.GetEnumerator
  fullName: SadConsole.ColoredString.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphAndEffect}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphAndEffect}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphAndEffect}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<ColoredGlyphAndEffect>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<SadConsole.ColoredGlyphAndEffect>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of ColoredGlyphAndEffect).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.ColoredGlyphAndEffect).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphAndEffect}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{SadConsole.ColoredGlyphAndEffect}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{SadConsole.ColoredGlyphAndEffect}
  commentId: T:System.Collections.Generic.IEnumerator{SadConsole.ColoredGlyphAndEffect}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<ColoredGlyphAndEffect>
  nameWithType: IEnumerator<ColoredGlyphAndEffect>
  fullName: System.Collections.Generic.IEnumerator<SadConsole.ColoredGlyphAndEffect>
  nameWithType.vb: IEnumerator(Of ColoredGlyphAndEffect)
  fullName.vb: System.Collections.Generic.IEnumerator(Of SadConsole.ColoredGlyphAndEffect)
  name.vb: IEnumerator(Of ColoredGlyphAndEffect)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.ColoredString.FromGradient*
  commentId: Overload:SadConsole.ColoredString.FromGradient
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_FromGradient_SadRogue_Primitives_Gradient_System_String_
  name: FromGradient
  nameWithType: ColoredString.FromGradient
  fullName: SadConsole.ColoredString.FromGradient
- uid: SadRogue.Primitives.Gradient
  commentId: T:SadRogue.Primitives.Gradient
  parent: SadRogue.Primitives
  isExternal: true
  name: Gradient
  nameWithType: Gradient
  fullName: SadRogue.Primitives.Gradient
- uid: SadConsole.ColoredString.op_Addition*
  commentId: Overload:SadConsole.ColoredString.op_Addition
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_op_Addition_SadConsole_ColoredString_SadConsole_ColoredString_
  name: operator +
  nameWithType: ColoredString.operator +
  fullName: SadConsole.ColoredString.operator +
  nameWithType.vb: ColoredString.+
  fullName.vb: SadConsole.ColoredString.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SadConsole.ColoredString.op_Addition*
    name: +
    isExternal: true
    href: SadConsole.ColoredString.html#SadConsole_ColoredString_op_Addition_SadConsole_ColoredString_SadConsole_ColoredString_
- uid: SadConsole.ColoredString.Item*
  commentId: Overload:SadConsole.ColoredString.Item
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_Item_System_Int32_
  name: this
  nameWithType: ColoredString.this
  fullName: SadConsole.ColoredString.this
  nameWithType.vb: ColoredString.this[]
  fullName.vb: SadConsole.ColoredString.this[]
  name.vb: this[]
- uid: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  commentId: M:SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  parent: SadConsole.StringParser.IParser
  isExternal: true
  href: SadConsole.StringParser.IParser.html#SadConsole_StringParser_IParser_Parse_System_ReadOnlySpan_System_Char__System_Int32_SadConsole_ICellSurface_SadConsole_StringParser_ParseCommandStacks_
  name: Parse(ReadOnlySpan<char>, int, ICellSurface, ParseCommandStacks)
  nameWithType: IParser.Parse(ReadOnlySpan<char>, int, ICellSurface, ParseCommandStacks)
  fullName: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan<char>, int, SadConsole.ICellSurface, SadConsole.StringParser.ParseCommandStacks)
  nameWithType.vb: IParser.Parse(ReadOnlySpan(Of Char), Integer, ICellSurface, ParseCommandStacks)
  fullName.vb: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan(Of Char), Integer, SadConsole.ICellSurface, SadConsole.StringParser.ParseCommandStacks)
  name.vb: Parse(ReadOnlySpan(Of Char), Integer, ICellSurface, ParseCommandStacks)
  spec.csharp:
  - uid: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
    name: Parse
    isExternal: true
    href: SadConsole.StringParser.IParser.html#SadConsole_StringParser_IParser_Parse_System_ReadOnlySpan_System_Char__System_Int32_SadConsole_ICellSurface_SadConsole_StringParser_ParseCommandStacks_
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SadConsole.ICellSurface
    name: ICellSurface
    isExternal: true
    href: SadConsole.ICellSurface.html
  - name: ','
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandStacks
    name: ParseCommandStacks
    isExternal: true
    href: SadConsole.StringParser.ParseCommandStacks.html
  - name: )
  spec.vb:
  - uid: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
    name: Parse
    isExternal: true
    href: SadConsole.StringParser.IParser.html#SadConsole_StringParser_IParser_Parse_System_ReadOnlySpan_System_Char__System_Int32_SadConsole_ICellSurface_SadConsole_StringParser_ParseCommandStacks_
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SadConsole.ICellSurface
    name: ICellSurface
    isExternal: true
    href: SadConsole.ICellSurface.html
  - name: ','
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandStacks
    name: ParseCommandStacks
    isExternal: true
    href: SadConsole.StringParser.ParseCommandStacks.html
  - name: )
- uid: SadConsole.ColoredString.Parser
  commentId: P:SadConsole.ColoredString.Parser
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_Parser
  name: Parser
  nameWithType: ColoredString.Parser
  fullName: SadConsole.ColoredString.Parser
- uid: SadConsole.ColoredString.String*
  commentId: Overload:SadConsole.ColoredString.String
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_String
  name: String
  nameWithType: ColoredString.String
  fullName: SadConsole.ColoredString.String
- uid: SadConsole.StringParser.IParser
  commentId: T:SadConsole.StringParser.IParser
  parent: SadConsole.StringParser
  isExternal: true
  href: SadConsole.StringParser.IParser.html
  name: IParser
  nameWithType: IParser
  fullName: SadConsole.StringParser.IParser
- uid: SadConsole.StringParser
  commentId: N:SadConsole.StringParser
  isExternal: true
  href: SadConsole.html
  name: SadConsole.StringParser
  nameWithType: SadConsole.StringParser
  fullName: SadConsole.StringParser
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.StringParser
    name: StringParser
    isExternal: true
    href: SadConsole.StringParser.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.StringParser
    name: StringParser
    isExternal: true
    href: SadConsole.StringParser.html
- uid: SadConsole.ColoredString.Length*
  commentId: Overload:SadConsole.ColoredString.Length
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_Length
  name: Length
  nameWithType: ColoredString.Length
  fullName: SadConsole.ColoredString.Length
- uid: SadConsole.ColoredString.IgnoreGlyph*
  commentId: Overload:SadConsole.ColoredString.IgnoreGlyph
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_IgnoreGlyph
  name: IgnoreGlyph
  nameWithType: ColoredString.IgnoreGlyph
  fullName: SadConsole.ColoredString.IgnoreGlyph
- uid: SadConsole.ColoredString.IgnoreForeground*
  commentId: Overload:SadConsole.ColoredString.IgnoreForeground
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_IgnoreForeground
  name: IgnoreForeground
  nameWithType: ColoredString.IgnoreForeground
  fullName: SadConsole.ColoredString.IgnoreForeground
- uid: SadConsole.ColoredString.IgnoreBackground*
  commentId: Overload:SadConsole.ColoredString.IgnoreBackground
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_IgnoreBackground
  name: IgnoreBackground
  nameWithType: ColoredString.IgnoreBackground
  fullName: SadConsole.ColoredString.IgnoreBackground
- uid: SadConsole.ColoredString.IgnoreEffect*
  commentId: Overload:SadConsole.ColoredString.IgnoreEffect
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_IgnoreEffect
  name: IgnoreEffect
  nameWithType: ColoredString.IgnoreEffect
  fullName: SadConsole.ColoredString.IgnoreEffect
- uid: SadConsole.ColoredString.IgnoreMirror*
  commentId: Overload:SadConsole.ColoredString.IgnoreMirror
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_IgnoreMirror
  name: IgnoreMirror
  nameWithType: ColoredString.IgnoreMirror
  fullName: SadConsole.ColoredString.IgnoreMirror
- uid: SadConsole.ColoredString.IgnoreDecorators*
  commentId: Overload:SadConsole.ColoredString.IgnoreDecorators
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_IgnoreDecorators
  name: IgnoreDecorators
  nameWithType: ColoredString.IgnoreDecorators
  fullName: SadConsole.ColoredString.IgnoreDecorators
- uid: SadConsole.ColoredString.Parser*
  commentId: Overload:SadConsole.ColoredString.Parser
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_Parser
  name: Parser
  nameWithType: ColoredString.Parser
  fullName: SadConsole.ColoredString.Parser
