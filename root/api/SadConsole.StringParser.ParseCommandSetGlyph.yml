### YamlMime:ManagedReference
items:
- uid: SadConsole.StringParser.ParseCommandSetGlyph
  commentId: T:SadConsole.StringParser.ParseCommandSetGlyph
  id: ParseCommandSetGlyph
  parent: SadConsole.StringParser
  children:
  - SadConsole.StringParser.ParseCommandSetGlyph.#ctor(System.String)
  - SadConsole.StringParser.ParseCommandSetGlyph.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  - SadConsole.StringParser.ParseCommandSetGlyph.Glyph
  - SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyph
  - SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMax
  - SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMin
  langs:
  - csharp
  - vb
  name: ParseCommandSetGlyph
  nameWithType: ParseCommandSetGlyph
  fullName: SadConsole.StringParser.ParseCommandSetGlyph
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: Prints a glyph.
  example: []
  syntax:
    content: 'public sealed class ParseCommandSetGlyph : ParseCommandBase'
    content.vb: Public NotInheritable Class ParseCommandSetGlyph Inherits ParseCommandBase
  inheritance:
  - System.Object
  - SadConsole.StringParser.ParseCommandBase
  inheritedMembers:
  - SadConsole.StringParser.ParseCommandBase.CommandType
  - System.Object.GetType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: SadConsole.StringParser.ParseCommandSetGlyph.#ctor(System.String)
  commentId: M:SadConsole.StringParser.ParseCommandSetGlyph.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SadConsole.StringParser.ParseCommandSetGlyph
  langs:
  - csharp
  - vb
  name: ParseCommandSetGlyph(string)
  nameWithType: ParseCommandSetGlyph.ParseCommandSetGlyph(string)
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.ParseCommandSetGlyph(string)
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: Creates a new instance of this command.
  example: []
  syntax:
    content: public ParseCommandSetGlyph(string parameters)
    parameters:
    - id: parameters
      type: System.String
      description: The string to parse for parameters.
    content.vb: Public Sub New(parameters As String)
  overload: SadConsole.StringParser.ParseCommandSetGlyph.#ctor*
  nameWithType.vb: ParseCommandSetGlyph.New(String)
  fullName.vb: SadConsole.StringParser.ParseCommandSetGlyph.New(String)
  name.vb: New(String)
- uid: SadConsole.StringParser.ParseCommandSetGlyph.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  commentId: M:SadConsole.StringParser.ParseCommandSetGlyph.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  id: Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  parent: SadConsole.StringParser.ParseCommandSetGlyph
  langs:
  - csharp
  - vb
  name: Build(ref ColoredGlyphAndEffect, ColoredGlyphAndEffect[], int, ICellSurface?, ref int, ReadOnlySpan<char>, ParseCommandStacks)
  nameWithType: ParseCommandSetGlyph.Build(ref ColoredGlyphAndEffect, ColoredGlyphAndEffect[], int, ICellSurface?, ref int, ReadOnlySpan<char>, ParseCommandStacks)
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.Build(ref SadConsole.ColoredGlyphAndEffect, SadConsole.ColoredGlyphAndEffect[], int, SadConsole.ICellSurface?, ref int, System.ReadOnlySpan<char>, SadConsole.StringParser.ParseCommandStacks)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: Builds a glyph.
  example: []
  syntax:
    content: public override void Build(ref ColoredGlyphAndEffect glyphState, ColoredGlyphAndEffect[] glyphString, int surfaceIndex, ICellSurface? surface, ref int stringIndex, ReadOnlySpan<char> processedString, ParseCommandStacks commandStack)
    parameters:
    - id: glyphState
      type: SadConsole.ColoredGlyphAndEffect
      description: The current glyph being built.
    - id: glyphString
      type: SadConsole.ColoredGlyphAndEffect[]
      description: The current string of glyphs that has been processed until now.
    - id: surfaceIndex
      type: System.Int32
      description: Where on the surface this flyph will appear.
    - id: surface
      type: SadConsole.ICellSurface
      description: The surface associated with the glyph.
    - id: stringIndex
      type: System.Int32
      description: Where in the original string this glyph is from.
    - id: processedString
      type: System.ReadOnlySpan{System.Char}
      description: The entire string being processed.
    - id: commandStack
      type: SadConsole.StringParser.ParseCommandStacks
      description: The state of commands.
    content.vb: Public Overrides Sub Build(glyphState As ColoredGlyphAndEffect, glyphString As ColoredGlyphAndEffect(), surfaceIndex As Integer, surface As ICellSurface, stringIndex As Integer, processedString As ReadOnlySpan(Of Char), commandStack As ParseCommandStacks)
  overridden: SadConsole.StringParser.ParseCommandBase.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  overload: SadConsole.StringParser.ParseCommandSetGlyph.Build*
  nameWithType.vb: ParseCommandSetGlyph.Build(ColoredGlyphAndEffect, ColoredGlyphAndEffect(), Integer, ICellSurface, Integer, ReadOnlySpan(Of Char), ParseCommandStacks)
  fullName.vb: SadConsole.StringParser.ParseCommandSetGlyph.Build(SadConsole.ColoredGlyphAndEffect, SadConsole.ColoredGlyphAndEffect(), Integer, SadConsole.ICellSurface, Integer, System.ReadOnlySpan(Of Char), SadConsole.StringParser.ParseCommandStacks)
  name.vb: Build(ColoredGlyphAndEffect, ColoredGlyphAndEffect(), Integer, ICellSurface, Integer, ReadOnlySpan(Of Char), ParseCommandStacks)
- uid: SadConsole.StringParser.ParseCommandSetGlyph.Glyph
  commentId: P:SadConsole.StringParser.ParseCommandSetGlyph.Glyph
  id: Glyph
  parent: SadConsole.StringParser.ParseCommandSetGlyph
  langs:
  - csharp
  - vb
  name: Glyph
  nameWithType: ParseCommandSetGlyph.Glyph
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.Glyph
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: The glyph to set.
  example: []
  syntax:
    content: public char Glyph { get; set; }
    parameters: []
    return:
      type: System.Char
    content.vb: Public Property Glyph As Char
  overload: SadConsole.StringParser.ParseCommandSetGlyph.Glyph*
- uid: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyph
  commentId: P:SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyph
  id: RandomGlyph
  parent: SadConsole.StringParser.ParseCommandSetGlyph
  langs:
  - csharp
  - vb
  name: RandomGlyph
  nameWithType: ParseCommandSetGlyph.RandomGlyph
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyph
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: Uses a random glyph.
  example: []
  syntax:
    content: public bool RandomGlyph { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RandomGlyph As Boolean
  overload: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyph*
- uid: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMin
  commentId: P:SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMin
  id: RandomGlyphMin
  parent: SadConsole.StringParser.ParseCommandSetGlyph
  langs:
  - csharp
  - vb
  name: RandomGlyphMin
  nameWithType: ParseCommandSetGlyph.RandomGlyphMin
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMin
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: The minimum glyph to use with the random glyph.
  example: []
  syntax:
    content: public int RandomGlyphMin { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RandomGlyphMin As Integer
  overload: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMin*
- uid: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMax
  commentId: P:SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMax
  id: RandomGlyphMax
  parent: SadConsole.StringParser.ParseCommandSetGlyph
  langs:
  - csharp
  - vb
  name: RandomGlyphMax
  nameWithType: ParseCommandSetGlyph.RandomGlyphMax
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMax
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: The maximumglyph to use with the random glyph.
  example: []
  syntax:
    content: public int RandomGlyphMax { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RandomGlyphMax As Integer
  overload: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMax*
references:
- uid: SadConsole.StringParser
  commentId: N:SadConsole.StringParser
  isExternal: true
  href: SadConsole.html
  name: SadConsole.StringParser
  nameWithType: SadConsole.StringParser
  fullName: SadConsole.StringParser
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.StringParser
    name: StringParser
    isExternal: true
    href: SadConsole.StringParser.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.StringParser
    name: StringParser
    isExternal: true
    href: SadConsole.StringParser.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SadConsole.StringParser.ParseCommandBase
  commentId: T:SadConsole.StringParser.ParseCommandBase
  parent: SadConsole.StringParser
  isExternal: true
  href: SadConsole.StringParser.ParseCommandBase.html
  name: ParseCommandBase
  nameWithType: ParseCommandBase
  fullName: SadConsole.StringParser.ParseCommandBase
- uid: SadConsole.StringParser.ParseCommandBase.CommandType
  commentId: F:SadConsole.StringParser.ParseCommandBase.CommandType
  parent: SadConsole.StringParser.ParseCommandBase
  isExternal: true
  href: SadConsole.StringParser.ParseCommandBase.html#SadConsole.StringParser.ParseCommandBase.CommandType
  name: CommandType
  nameWithType: ParseCommandBase.CommandType
  fullName: SadConsole.StringParser.ParseCommandBase.CommandType
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.StringParser.ParseCommandSetGlyph.#ctor*
  commentId: Overload:SadConsole.StringParser.ParseCommandSetGlyph.#ctor
  isExternal: true
  href: SadConsole.StringParser.ParseCommandSetGlyph.html#SadConsole.StringParser.ParseCommandSetGlyph.#ctor(System.String)
  name: ParseCommandSetGlyph
  nameWithType: ParseCommandSetGlyph.ParseCommandSetGlyph
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.ParseCommandSetGlyph
  nameWithType.vb: ParseCommandSetGlyph.New
  fullName.vb: SadConsole.StringParser.ParseCommandSetGlyph.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SadConsole.StringParser.ParseCommandBase.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  commentId: M:SadConsole.StringParser.ParseCommandBase.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  parent: SadConsole.StringParser.ParseCommandBase
  isExternal: true
  href: SadConsole.StringParser.ParseCommandBase.html#SadConsole.StringParser.ParseCommandBase.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  name: Build(ref ColoredGlyphAndEffect, ColoredGlyphAndEffect[], int, ICellSurface, ref int, ReadOnlySpan<char>, ParseCommandStacks)
  nameWithType: ParseCommandBase.Build(ref ColoredGlyphAndEffect, ColoredGlyphAndEffect[], int, ICellSurface, ref int, ReadOnlySpan<char>, ParseCommandStacks)
  fullName: SadConsole.StringParser.ParseCommandBase.Build(ref SadConsole.ColoredGlyphAndEffect, SadConsole.ColoredGlyphAndEffect[], int, SadConsole.ICellSurface, ref int, System.ReadOnlySpan<char>, SadConsole.StringParser.ParseCommandStacks)
  nameWithType.vb: ParseCommandBase.Build(ColoredGlyphAndEffect, ColoredGlyphAndEffect(), Integer, ICellSurface, Integer, ReadOnlySpan(Of Char), ParseCommandStacks)
  fullName.vb: SadConsole.StringParser.ParseCommandBase.Build(SadConsole.ColoredGlyphAndEffect, SadConsole.ColoredGlyphAndEffect(), Integer, SadConsole.ICellSurface, Integer, System.ReadOnlySpan(Of Char), SadConsole.StringParser.ParseCommandStacks)
  name.vb: Build(ColoredGlyphAndEffect, ColoredGlyphAndEffect(), Integer, ICellSurface, Integer, ReadOnlySpan(Of Char), ParseCommandStacks)
  spec.csharp:
  - uid: SadConsole.StringParser.ParseCommandBase.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
    name: Build
    isExternal: true
    href: SadConsole.StringParser.ParseCommandBase.html#SadConsole.StringParser.ParseCommandBase.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  - name: (
  - name: ref
  - name: " "
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SadConsole.ICellSurface
    name: ICellSurface
    isExternal: true
    href: SadConsole.ICellSurface.html
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  - name: ','
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandStacks
    name: ParseCommandStacks
    isExternal: true
    href: SadConsole.StringParser.ParseCommandStacks.html
  - name: )
  spec.vb:
  - uid: SadConsole.StringParser.ParseCommandBase.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
    name: Build
    isExternal: true
    href: SadConsole.StringParser.ParseCommandBase.html#SadConsole.StringParser.ParseCommandBase.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  - name: (
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SadConsole.ICellSurface
    name: ICellSurface
    isExternal: true
    href: SadConsole.ICellSurface.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  - name: ','
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandStacks
    name: ParseCommandStacks
    isExternal: true
    href: SadConsole.StringParser.ParseCommandStacks.html
  - name: )
- uid: SadConsole.StringParser.ParseCommandSetGlyph.Build*
  commentId: Overload:SadConsole.StringParser.ParseCommandSetGlyph.Build
  isExternal: true
  href: SadConsole.StringParser.ParseCommandSetGlyph.html#SadConsole.StringParser.ParseCommandSetGlyph.Build(SadConsole.ColoredGlyphAndEffect@,SadConsole.ColoredGlyphAndEffect[],System.Int32,SadConsole.ICellSurface,System.Int32@,System.ReadOnlySpan{System.Char},SadConsole.StringParser.ParseCommandStacks)
  name: Build
  nameWithType: ParseCommandSetGlyph.Build
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.Build
- uid: SadConsole.ColoredGlyphAndEffect
  commentId: T:SadConsole.ColoredGlyphAndEffect
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredGlyphAndEffect.html
  name: ColoredGlyphAndEffect
  nameWithType: ColoredGlyphAndEffect
  fullName: SadConsole.ColoredGlyphAndEffect
- uid: SadConsole.ColoredGlyphAndEffect[]
  isExternal: true
  href: SadConsole.ColoredGlyphAndEffect.html
  name: ColoredGlyphAndEffect[]
  nameWithType: ColoredGlyphAndEffect[]
  fullName: SadConsole.ColoredGlyphAndEffect[]
  nameWithType.vb: ColoredGlyphAndEffect()
  fullName.vb: SadConsole.ColoredGlyphAndEffect()
  name.vb: ColoredGlyphAndEffect()
  spec.csharp:
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SadConsole.ICellSurface
  commentId: T:SadConsole.ICellSurface
  parent: SadConsole
  isExternal: true
  href: SadConsole.ICellSurface.html
  name: ICellSurface
  nameWithType: ICellSurface
  fullName: SadConsole.ICellSurface
- uid: System.ReadOnlySpan{System.Char}
  commentId: T:System.ReadOnlySpan{System.Char}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<char>
  nameWithType: ReadOnlySpan<char>
  fullName: System.ReadOnlySpan<char>
  nameWithType.vb: ReadOnlySpan(Of Char)
  fullName.vb: System.ReadOnlySpan(Of Char)
  name.vb: ReadOnlySpan(Of Char)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: SadConsole.StringParser.ParseCommandStacks
  commentId: T:SadConsole.StringParser.ParseCommandStacks
  parent: SadConsole.StringParser
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html
  name: ParseCommandStacks
  nameWithType: ParseCommandStacks
  fullName: SadConsole.StringParser.ParseCommandStacks
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.StringParser.ParseCommandSetGlyph.Glyph*
  commentId: Overload:SadConsole.StringParser.ParseCommandSetGlyph.Glyph
  isExternal: true
  href: SadConsole.StringParser.ParseCommandSetGlyph.html#SadConsole.StringParser.ParseCommandSetGlyph.Glyph
  name: Glyph
  nameWithType: ParseCommandSetGlyph.Glyph
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.Glyph
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyph*
  commentId: Overload:SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyph
  isExternal: true
  href: SadConsole.StringParser.ParseCommandSetGlyph.html#SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyph
  name: RandomGlyph
  nameWithType: ParseCommandSetGlyph.RandomGlyph
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyph
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMin*
  commentId: Overload:SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMin
  isExternal: true
  href: SadConsole.StringParser.ParseCommandSetGlyph.html#SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMin
  name: RandomGlyphMin
  nameWithType: ParseCommandSetGlyph.RandomGlyphMin
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMin
- uid: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMax*
  commentId: Overload:SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMax
  isExternal: true
  href: SadConsole.StringParser.ParseCommandSetGlyph.html#SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMax
  name: RandomGlyphMax
  nameWithType: ParseCommandSetGlyph.RandomGlyphMax
  fullName: SadConsole.StringParser.ParseCommandSetGlyph.RandomGlyphMax
