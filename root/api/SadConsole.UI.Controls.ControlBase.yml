### YamlMime:ManagedReference
items:
- uid: SadConsole.UI.Controls.ControlBase
  commentId: T:SadConsole.UI.Controls.ControlBase
  id: ControlBase
  parent: SadConsole.UI.Controls
  children:
  - SadConsole.UI.Controls.ControlBase.#ctor(System.Int32,System.Int32)
  - SadConsole.UI.Controls.ControlBase.AbsolutePosition
  - SadConsole.UI.Controls.ControlBase.AlternateFont
  - SadConsole.UI.Controls.ControlBase.Bounds
  - SadConsole.UI.Controls.ControlBase.CanFocus
  - SadConsole.UI.Controls.ControlBase.CanResize
  - SadConsole.UI.Controls.ControlBase.CreateControlSurface
  - SadConsole.UI.Controls.ControlBase.DetermineState
  - SadConsole.UI.Controls.ControlBase.FindThemeColors
  - SadConsole.UI.Controls.ControlBase.FocusOnMouseClick
  - SadConsole.UI.Controls.ControlBase.Focused
  - SadConsole.UI.Controls.ControlBase.HasThemeColors
  - SadConsole.UI.Controls.ControlBase.Height
  - SadConsole.UI.Controls.ControlBase.IsDirty
  - SadConsole.UI.Controls.ControlBase.IsDirtyChanged
  - SadConsole.UI.Controls.ControlBase.IsEnabled
  - SadConsole.UI.Controls.ControlBase.IsFocused
  - SadConsole.UI.Controls.ControlBase.IsMouseButtonStateClean
  - SadConsole.UI.Controls.ControlBase.IsVisible
  - SadConsole.UI.Controls.ControlBase.LostMouse(SadConsole.Input.MouseScreenObjectState)
  - SadConsole.UI.Controls.ControlBase.MouseArea
  - SadConsole.UI.Controls.ControlBase.MouseButtonClicked
  - SadConsole.UI.Controls.ControlBase.MouseEnter
  - SadConsole.UI.Controls.ControlBase.MouseExit
  - SadConsole.UI.Controls.ControlBase.MouseMove
  - SadConsole.UI.Controls.ControlBase.MouseState_EnteredWithButtonDown
  - SadConsole.UI.Controls.ControlBase.MouseState_IsMouseLeftDown
  - SadConsole.UI.Controls.ControlBase.MouseState_IsMouseOver
  - SadConsole.UI.Controls.ControlBase.MouseState_IsMouseRightDown
  - SadConsole.UI.Controls.ControlBase.Name
  - SadConsole.UI.Controls.ControlBase.OnFocused
  - SadConsole.UI.Controls.ControlBase.OnIsDirtyChanged
  - SadConsole.UI.Controls.ControlBase.OnLeftMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  - SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  - SadConsole.UI.Controls.ControlBase.OnMouseExit(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  - SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  - SadConsole.UI.Controls.ControlBase.OnParentChanged
  - SadConsole.UI.Controls.ControlBase.OnPositionChanged
  - SadConsole.UI.Controls.ControlBase.OnResized
  - SadConsole.UI.Controls.ControlBase.OnRightMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  - SadConsole.UI.Controls.ControlBase.OnStateChanged(SadConsole.UI.Controls.ControlStates,SadConsole.UI.Controls.ControlStates)
  - SadConsole.UI.Controls.ControlBase.OnSurfaceChanged(SadConsole.ICellSurface,SadConsole.ICellSurface)
  - SadConsole.UI.Controls.ControlBase.OnUnfocused
  - SadConsole.UI.Controls.ControlBase.Parent
  - SadConsole.UI.Controls.ControlBase.PlaceRelativeTo(SadConsole.UI.Controls.ControlBase,SadRogue.Primitives.Direction.Types,System.Int32)
  - SadConsole.UI.Controls.ControlBase.Position
  - SadConsole.UI.Controls.ControlBase.PositionChanged
  - SadConsole.UI.Controls.ControlBase.ProcessKeyboard(SadConsole.Input.Keyboard)
  - SadConsole.UI.Controls.ControlBase.ProcessMouse(SadConsole.Input.MouseScreenObjectState)
  - SadConsole.UI.Controls.ControlBase.RefreshThemeStateColors(SadConsole.UI.Colors)
  - SadConsole.UI.Controls.ControlBase.Resize(System.Int32,System.Int32)
  - SadConsole.UI.Controls.ControlBase.SetThemeColors(SadConsole.UI.Colors)
  - SadConsole.UI.Controls.ControlBase.State
  - SadConsole.UI.Controls.ControlBase.Surface
  - SadConsole.UI.Controls.ControlBase.TabIndex
  - SadConsole.UI.Controls.ControlBase.TabStop
  - SadConsole.UI.Controls.ControlBase.Tag
  - SadConsole.UI.Controls.ControlBase.ThemeState
  - SadConsole.UI.Controls.ControlBase.Unfocused
  - SadConsole.UI.Controls.ControlBase.UpdateAndRedraw(System.TimeSpan)
  - SadConsole.UI.Controls.ControlBase.UseKeyboard
  - SadConsole.UI.Controls.ControlBase.UseMouse
  - SadConsole.UI.Controls.ControlBase.Width
  langs:
  - csharp
  - vb
  name: ControlBase
  nameWithType: ControlBase
  fullName: SadConsole.UI.Controls.ControlBase
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Base class for all controls.
  example: []
  syntax:
    content: >-
      [DataContract]

      public abstract class ControlBase
    content.vb: >-
      <DataContract>

      Public MustInherit Class ControlBase
  inheritance:
  - System.Object
  derivedClasses:
  - SadConsole.UI.Controls.ButtonBase
  - SadConsole.UI.Controls.ColorBar
  - SadConsole.UI.Controls.ColorPicker
  - SadConsole.UI.Controls.CompositeControl
  - SadConsole.UI.Controls.DrawingArea
  - SadConsole.UI.Controls.HueBar
  - SadConsole.UI.Controls.Label
  - SadConsole.UI.Controls.ProgressBar
  - SadConsole.UI.Controls.ScrollBar
  - SadConsole.UI.Controls.TextBox
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.MouseState_IsMouseOver
  commentId: F:SadConsole.UI.Controls.ControlBase.MouseState_IsMouseOver
  id: MouseState_IsMouseOver
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: MouseState_IsMouseOver
  nameWithType: ControlBase.MouseState_IsMouseOver
  fullName: SadConsole.UI.Controls.ControlBase.MouseState_IsMouseOver
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: A cached value determined by <xref href="SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)" data-throw-if-not-resolved="false"></xref>. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the mouse is over the bounds defined by <xref href="SadConsole.UI.Controls.ControlBase.MouseArea" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: protected bool MouseState_IsMouseOver
    return:
      type: System.Boolean
    content.vb: Protected MouseState_IsMouseOver As Boolean
- uid: SadConsole.UI.Controls.ControlBase.MouseState_EnteredWithButtonDown
  commentId: F:SadConsole.UI.Controls.ControlBase.MouseState_EnteredWithButtonDown
  id: MouseState_EnteredWithButtonDown
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: MouseState_EnteredWithButtonDown
  nameWithType: ControlBase.MouseState_EnteredWithButtonDown
  fullName: SadConsole.UI.Controls.ControlBase.MouseState_EnteredWithButtonDown
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: A cached value determined by <xref href="SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)" data-throw-if-not-resolved="false"></xref>. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the mouse entered the control's bounds with the mouse button down.
  example: []
  syntax:
    content: protected bool MouseState_EnteredWithButtonDown
    return:
      type: System.Boolean
    content.vb: Protected MouseState_EnteredWithButtonDown As Boolean
- uid: SadConsole.UI.Controls.ControlBase.MouseState_IsMouseLeftDown
  commentId: F:SadConsole.UI.Controls.ControlBase.MouseState_IsMouseLeftDown
  id: MouseState_IsMouseLeftDown
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: MouseState_IsMouseLeftDown
  nameWithType: ControlBase.MouseState_IsMouseLeftDown
  fullName: SadConsole.UI.Controls.ControlBase.MouseState_IsMouseLeftDown
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: A cached value determined by <xref href="SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)" data-throw-if-not-resolved="false"></xref>. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the left mouse button is down.
  example: []
  syntax:
    content: protected bool MouseState_IsMouseLeftDown
    return:
      type: System.Boolean
    content.vb: Protected MouseState_IsMouseLeftDown As Boolean
- uid: SadConsole.UI.Controls.ControlBase.MouseState_IsMouseRightDown
  commentId: F:SadConsole.UI.Controls.ControlBase.MouseState_IsMouseRightDown
  id: MouseState_IsMouseRightDown
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: MouseState_IsMouseRightDown
  nameWithType: ControlBase.MouseState_IsMouseRightDown
  fullName: SadConsole.UI.Controls.ControlBase.MouseState_IsMouseRightDown
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: A cached value determined by <xref href="SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)" data-throw-if-not-resolved="false"></xref>. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the right mouse button is down.
  example: []
  syntax:
    content: protected bool MouseState_IsMouseRightDown
    return:
      type: System.Boolean
    content.vb: Protected MouseState_IsMouseRightDown As Boolean
- uid: SadConsole.UI.Controls.ControlBase.#ctor(System.Int32,System.Int32)
  commentId: M:SadConsole.UI.Controls.ControlBase.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: ControlBase(int, int)
  nameWithType: ControlBase.ControlBase(int, int)
  fullName: SadConsole.UI.Controls.ControlBase.ControlBase(int, int)
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Creates a control.
  example: []
  syntax:
    content: protected ControlBase(int width, int height)
    parameters:
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    content.vb: Protected Sub New(width As Integer, height As Integer)
  overload: SadConsole.UI.Controls.ControlBase.#ctor*
  nameWithType.vb: ControlBase.New(Integer, Integer)
  fullName.vb: SadConsole.UI.Controls.ControlBase.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: SadConsole.UI.Controls.ControlBase.OnUnfocused
  commentId: M:SadConsole.UI.Controls.ControlBase.OnUnfocused
  id: OnUnfocused
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnUnfocused()
  nameWithType: ControlBase.OnUnfocused()
  fullName: SadConsole.UI.Controls.ControlBase.OnUnfocused()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the control loses focus.
  example: []
  syntax:
    content: protected virtual void OnUnfocused()
    content.vb: Protected Overridable Sub OnUnfocused()
  overload: SadConsole.UI.Controls.ControlBase.OnUnfocused*
- uid: SadConsole.UI.Controls.ControlBase.OnFocused
  commentId: M:SadConsole.UI.Controls.ControlBase.OnFocused
  id: OnFocused
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnFocused()
  nameWithType: ControlBase.OnFocused()
  fullName: SadConsole.UI.Controls.ControlBase.OnFocused()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the control is focused.
  example: []
  syntax:
    content: protected virtual void OnFocused()
    content.vb: Protected Overridable Sub OnFocused()
  overload: SadConsole.UI.Controls.ControlBase.OnFocused*
- uid: SadConsole.UI.Controls.ControlBase.OnIsDirtyChanged
  commentId: M:SadConsole.UI.Controls.ControlBase.OnIsDirtyChanged
  id: OnIsDirtyChanged
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnIsDirtyChanged()
  nameWithType: ControlBase.OnIsDirtyChanged()
  fullName: SadConsole.UI.Controls.ControlBase.OnIsDirtyChanged()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the <xref href="SadConsole.UI.Controls.ControlBase.IsDirty" data-throw-if-not-resolved="false"></xref> property changes value.
  example: []
  syntax:
    content: protected virtual void OnIsDirtyChanged()
    content.vb: Protected Overridable Sub OnIsDirtyChanged()
  overload: SadConsole.UI.Controls.ControlBase.OnIsDirtyChanged*
- uid: SadConsole.UI.Controls.ControlBase.ProcessKeyboard(SadConsole.Input.Keyboard)
  commentId: M:SadConsole.UI.Controls.ControlBase.ProcessKeyboard(SadConsole.Input.Keyboard)
  id: ProcessKeyboard(SadConsole.Input.Keyboard)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: ProcessKeyboard(Keyboard)
  nameWithType: ControlBase.ProcessKeyboard(Keyboard)
  fullName: SadConsole.UI.Controls.ControlBase.ProcessKeyboard(SadConsole.Input.Keyboard)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the keyboard is used on this control.
  example: []
  syntax:
    content: public virtual bool ProcessKeyboard(Keyboard state)
    parameters:
    - id: state
      type: SadConsole.Input.Keyboard
      description: The state of the keyboard.
    return:
      type: System.Boolean
    content.vb: Public Overridable Function ProcessKeyboard(state As Keyboard) As Boolean
  overload: SadConsole.UI.Controls.ControlBase.ProcessKeyboard*
- uid: SadConsole.UI.Controls.ControlBase.ProcessMouse(SadConsole.Input.MouseScreenObjectState)
  commentId: M:SadConsole.UI.Controls.ControlBase.ProcessMouse(SadConsole.Input.MouseScreenObjectState)
  id: ProcessMouse(SadConsole.Input.MouseScreenObjectState)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: ProcessMouse(MouseScreenObjectState)
  nameWithType: ControlBase.ProcessMouse(MouseScreenObjectState)
  fullName: SadConsole.UI.Controls.ControlBase.ProcessMouse(SadConsole.Input.MouseScreenObjectState)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Checks if the mouse is the control and calls the appropriate mouse methods.
  example: []
  syntax:
    content: public virtual bool ProcessMouse(MouseScreenObjectState state)
    parameters:
    - id: state
      type: SadConsole.Input.MouseScreenObjectState
      description: Mouse information.
    return:
      type: System.Boolean
      description: True when the control is enabled, set to use the mouse and the mouse is over it, otherwise false.
    content.vb: Public Overridable Function ProcessMouse(state As MouseScreenObjectState) As Boolean
  overload: SadConsole.UI.Controls.ControlBase.ProcessMouse*
- uid: SadConsole.UI.Controls.ControlBase.LostMouse(SadConsole.Input.MouseScreenObjectState)
  commentId: M:SadConsole.UI.Controls.ControlBase.LostMouse(SadConsole.Input.MouseScreenObjectState)
  id: LostMouse(SadConsole.Input.MouseScreenObjectState)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: LostMouse(MouseScreenObjectState)
  nameWithType: ControlBase.LostMouse(MouseScreenObjectState)
  fullName: SadConsole.UI.Controls.ControlBase.LostMouse(SadConsole.Input.MouseScreenObjectState)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called to trigger the state of losing mouse focus.
  example: []
  syntax:
    content: public void LostMouse(MouseScreenObjectState state)
    parameters:
    - id: state
      type: SadConsole.Input.MouseScreenObjectState
      description: The mouse state.
    content.vb: Public Sub LostMouse(state As MouseScreenObjectState)
  overload: SadConsole.UI.Controls.ControlBase.LostMouse*
- uid: SadConsole.UI.Controls.ControlBase.OnParentChanged
  commentId: M:SadConsole.UI.Controls.ControlBase.OnParentChanged
  id: OnParentChanged
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnParentChanged()
  nameWithType: ControlBase.OnParentChanged()
  fullName: SadConsole.UI.Controls.ControlBase.OnParentChanged()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the parent property is changed.
  example: []
  syntax:
    content: protected virtual void OnParentChanged()
    content.vb: Protected Overridable Sub OnParentChanged()
  overload: SadConsole.UI.Controls.ControlBase.OnParentChanged*
- uid: SadConsole.UI.Controls.ControlBase.OnPositionChanged
  commentId: M:SadConsole.UI.Controls.ControlBase.OnPositionChanged
  id: OnPositionChanged
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnPositionChanged()
  nameWithType: ControlBase.OnPositionChanged()
  fullName: SadConsole.UI.Controls.ControlBase.OnPositionChanged()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the control changes position.
  example: []
  syntax:
    content: protected virtual void OnPositionChanged()
    content.vb: Protected Overridable Sub OnPositionChanged()
  overload: SadConsole.UI.Controls.ControlBase.OnPositionChanged*
- uid: SadConsole.UI.Controls.ControlBase.PlaceRelativeTo(SadConsole.UI.Controls.ControlBase,SadRogue.Primitives.Direction.Types,System.Int32)
  commentId: M:SadConsole.UI.Controls.ControlBase.PlaceRelativeTo(SadConsole.UI.Controls.ControlBase,SadRogue.Primitives.Direction.Types,System.Int32)
  id: PlaceRelativeTo(SadConsole.UI.Controls.ControlBase,SadRogue.Primitives.Direction.Types,System.Int32)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: PlaceRelativeTo(ControlBase, Types, int)
  nameWithType: ControlBase.PlaceRelativeTo(ControlBase, Direction.Types, int)
  fullName: SadConsole.UI.Controls.ControlBase.PlaceRelativeTo(SadConsole.UI.Controls.ControlBase, SadRogue.Primitives.Direction.Types, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Places this control relative to another, taking into account the bounds of the control.
  remarks: If this control hasn't been added to the parent of <code class="paramref">control</code>, it will be added.
  example: []
  syntax:
    content: public void PlaceRelativeTo(ControlBase control, Direction.Types direction, int padding = 1)
    parameters:
    - id: control
      type: SadConsole.UI.Controls.ControlBase
      description: The other control to place this one relative to.
    - id: direction
      type: SadRogue.Primitives.Direction.Types
      description: The direction this control should be placed.
    - id: padding
      type: System.Int32
      description: Additional space between the controls after placement.
    content.vb: Public Sub PlaceRelativeTo(control As ControlBase, direction As Direction.Types, padding As Integer = 1)
  overload: SadConsole.UI.Controls.ControlBase.PlaceRelativeTo*
  nameWithType.vb: ControlBase.PlaceRelativeTo(ControlBase, Direction.Types, Integer)
  fullName.vb: SadConsole.UI.Controls.ControlBase.PlaceRelativeTo(SadConsole.UI.Controls.ControlBase, SadRogue.Primitives.Direction.Types, Integer)
  name.vb: PlaceRelativeTo(ControlBase, Types, Integer)
- uid: SadConsole.UI.Controls.ControlBase.DetermineState
  commentId: M:SadConsole.UI.Controls.ControlBase.DetermineState
  id: DetermineState
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: DetermineState()
  nameWithType: ControlBase.DetermineState()
  fullName: SadConsole.UI.Controls.ControlBase.DetermineState()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Sets the appropriate theme for the control based on the current state of the control.
  remarks: Called by the control as the mouse state changes, like when the mouse is clicked on top of the control or leaves the area of the control. This method is implemented by each derived control.
  example: []
  syntax:
    content: public virtual void DetermineState()
    content.vb: Public Overridable Sub DetermineState()
  overload: SadConsole.UI.Controls.ControlBase.DetermineState*
- uid: SadConsole.UI.Controls.ControlBase.OnStateChanged(SadConsole.UI.Controls.ControlStates,SadConsole.UI.Controls.ControlStates)
  commentId: M:SadConsole.UI.Controls.ControlBase.OnStateChanged(SadConsole.UI.Controls.ControlStates,SadConsole.UI.Controls.ControlStates)
  id: OnStateChanged(SadConsole.UI.Controls.ControlStates,SadConsole.UI.Controls.ControlStates)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnStateChanged(ControlStates, ControlStates)
  nameWithType: ControlBase.OnStateChanged(ControlStates, ControlStates)
  fullName: SadConsole.UI.Controls.ControlBase.OnStateChanged(SadConsole.UI.Controls.ControlStates, SadConsole.UI.Controls.ControlStates)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the <xref href="SadConsole.UI.Controls.ControlBase.State" data-throw-if-not-resolved="false"></xref> changes. Sets the <xref href="SadConsole.UI.Controls.ControlBase.IsDirty" data-throw-if-not-resolved="false"></xref> to true.
  example: []
  syntax:
    content: protected virtual void OnStateChanged(ControlStates oldState, ControlStates newState)
    parameters:
    - id: oldState
      type: SadConsole.UI.Controls.ControlStates
      description: The original state.
    - id: newState
      type: SadConsole.UI.Controls.ControlStates
      description: The new state.
    content.vb: Protected Overridable Sub OnStateChanged(oldState As ControlStates, newState As ControlStates)
  overload: SadConsole.UI.Controls.ControlBase.OnStateChanged*
- uid: SadConsole.UI.Controls.ControlBase.OnSurfaceChanged(SadConsole.ICellSurface,SadConsole.ICellSurface)
  commentId: M:SadConsole.UI.Controls.ControlBase.OnSurfaceChanged(SadConsole.ICellSurface,SadConsole.ICellSurface)
  id: OnSurfaceChanged(SadConsole.ICellSurface,SadConsole.ICellSurface)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnSurfaceChanged(ICellSurface, ICellSurface)
  nameWithType: ControlBase.OnSurfaceChanged(ICellSurface, ICellSurface)
  fullName: SadConsole.UI.Controls.ControlBase.OnSurfaceChanged(SadConsole.ICellSurface, SadConsole.ICellSurface)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the <xref href="SadConsole.UI.Controls.ControlBase.Surface" data-throw-if-not-resolved="false"></xref> property is set.
  example: []
  syntax:
    content: protected virtual void OnSurfaceChanged(ICellSurface oldSurface, ICellSurface newSurface)
    parameters:
    - id: oldSurface
      type: SadConsole.ICellSurface
      description: The previous surface instance.
    - id: newSurface
      type: SadConsole.ICellSurface
      description: The new surface instance.
    content.vb: Protected Overridable Sub OnSurfaceChanged(oldSurface As ICellSurface, newSurface As ICellSurface)
  overload: SadConsole.UI.Controls.ControlBase.OnSurfaceChanged*
- uid: SadConsole.UI.Controls.ControlBase.FindThemeColors
  commentId: M:SadConsole.UI.Controls.ControlBase.FindThemeColors
  id: FindThemeColors
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: FindThemeColors()
  nameWithType: ControlBase.FindThemeColors()
  fullName: SadConsole.UI.Controls.ControlBase.FindThemeColors()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Returns the colors assigned to this control, the parent, or the library default.
  example: []
  syntax:
    content: public Colors FindThemeColors()
    return:
      type: SadConsole.UI.Colors
      description: The found colors.
    content.vb: Public Function FindThemeColors() As Colors
  overload: SadConsole.UI.Controls.ControlBase.FindThemeColors*
- uid: SadConsole.UI.Controls.ControlBase.SetThemeColors(SadConsole.UI.Colors)
  commentId: M:SadConsole.UI.Controls.ControlBase.SetThemeColors(SadConsole.UI.Colors)
  id: SetThemeColors(SadConsole.UI.Colors)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: SetThemeColors(Colors?)
  nameWithType: ControlBase.SetThemeColors(Colors?)
  fullName: SadConsole.UI.Controls.ControlBase.SetThemeColors(SadConsole.UI.Colors?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Sets the theme colors used by this control. When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, indicates this control should read the theme colors from the parent.
  example: []
  syntax:
    content: public void SetThemeColors(Colors? value)
    parameters:
    - id: value
      type: SadConsole.UI.Colors
      description: The colors to use with this control.
    content.vb: Public Sub SetThemeColors(value As Colors)
  overload: SadConsole.UI.Controls.ControlBase.SetThemeColors*
  nameWithType.vb: ControlBase.SetThemeColors(Colors)
  fullName.vb: SadConsole.UI.Controls.ControlBase.SetThemeColors(SadConsole.UI.Colors)
  name.vb: SetThemeColors(Colors)
- uid: SadConsole.UI.Controls.ControlBase.HasThemeColors
  commentId: M:SadConsole.UI.Controls.ControlBase.HasThemeColors
  id: HasThemeColors
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: HasThemeColors()
  nameWithType: ControlBase.HasThemeColors()
  fullName: SadConsole.UI.Controls.ControlBase.HasThemeColors()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, indicates the control has custom theme colors assigned to it; othwerise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool HasThemeColors()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasThemeColors() As Boolean
  overload: SadConsole.UI.Controls.ControlBase.HasThemeColors*
- uid: SadConsole.UI.Controls.ControlBase.Resize(System.Int32,System.Int32)
  commentId: M:SadConsole.UI.Controls.ControlBase.Resize(System.Int32,System.Int32)
  id: Resize(System.Int32,System.Int32)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Resize(int, int)
  nameWithType: ControlBase.Resize(int, int)
  fullName: SadConsole.UI.Controls.ControlBase.Resize(int, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Resizes the control if the <xref href="SadConsole.UI.Controls.ControlBase.CanResize" data-throw-if-not-resolved="false"></xref> property is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public virtual void Resize(int width, int height)
    parameters:
    - id: width
      type: System.Int32
      description: The desired width of the control.
    - id: height
      type: System.Int32
      description: The desired height of the control.
    content.vb: Public Overridable Sub Resize(width As Integer, height As Integer)
  overload: SadConsole.UI.Controls.ControlBase.Resize*
  nameWithType.vb: ControlBase.Resize(Integer, Integer)
  fullName.vb: SadConsole.UI.Controls.ControlBase.Resize(Integer, Integer)
  name.vb: Resize(Integer, Integer)
- uid: SadConsole.UI.Controls.ControlBase.OnResized
  commentId: M:SadConsole.UI.Controls.ControlBase.OnResized
  id: OnResized
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnResized()
  nameWithType: ControlBase.OnResized()
  fullName: SadConsole.UI.Controls.ControlBase.OnResized()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when <xref href="SadConsole.UI.Controls.ControlBase.Resize(System.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> was called.
  example: []
  syntax:
    content: protected virtual void OnResized()
    content.vb: Protected Overridable Sub OnResized()
  overload: SadConsole.UI.Controls.ControlBase.OnResized*
- uid: SadConsole.UI.Controls.ControlBase.CreateControlSurface
  commentId: M:SadConsole.UI.Controls.ControlBase.CreateControlSurface
  id: CreateControlSurface
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: CreateControlSurface()
  nameWithType: ControlBase.CreateControlSurface()
  fullName: SadConsole.UI.Controls.ControlBase.CreateControlSurface()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Generates the surface to be used by this control. This method is called internally to assign the <xref href="SadConsole.UI.Controls.ControlBase.Surface" data-throw-if-not-resolved="false"></xref> property a value.
  example: []
  syntax:
    content: protected virtual ICellSurface CreateControlSurface()
    return:
      type: SadConsole.ICellSurface
      description: A surface that should be assigned to the <xref href="SadConsole.UI.Controls.ControlBase.Surface" data-throw-if-not-resolved="false"></xref> property.
    content.vb: Protected Overridable Function CreateControlSurface() As ICellSurface
  overload: SadConsole.UI.Controls.ControlBase.CreateControlSurface*
- uid: SadConsole.UI.Controls.ControlBase.RefreshThemeStateColors(SadConsole.UI.Colors)
  commentId: M:SadConsole.UI.Controls.ControlBase.RefreshThemeStateColors(SadConsole.UI.Colors)
  id: RefreshThemeStateColors(SadConsole.UI.Colors)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: RefreshThemeStateColors(Colors)
  nameWithType: ControlBase.RefreshThemeStateColors(Colors)
  fullName: SadConsole.UI.Controls.ControlBase.RefreshThemeStateColors(SadConsole.UI.Colors)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Updates the <xref href="SadConsole.UI.Controls.ControlBase.ThemeState" data-throw-if-not-resolved="false"></xref> by calling <xref href="SadConsole.UI.ThemeStates.RefreshTheme(SadConsole.UI.Colors)" data-throw-if-not-resolved="false"></xref> with the provided colors. Override this method to adjust how colors are used by the <xref href="SadConsole.UI.Controls.ControlBase.ThemeState" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected virtual void RefreshThemeStateColors(Colors colors)
    parameters:
    - id: colors
      type: SadConsole.UI.Colors
      description: The colors to apply to the theme state.
    content.vb: Protected Overridable Sub RefreshThemeStateColors(colors As Colors)
  overload: SadConsole.UI.Controls.ControlBase.RefreshThemeStateColors*
- uid: SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  commentId: M:SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  id: OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnMouseEnter(ControlMouseState)
  nameWithType: ControlBase.OnMouseEnter(ControlBase.ControlMouseState)
  fullName: SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the mouse first enters the control. Raises the MouseEnter event and calls the <xref href="SadConsole.UI.Controls.ControlBase.DetermineState" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: protected virtual void OnMouseEnter(ControlBase.ControlMouseState state)
    parameters:
    - id: state
      type: SadConsole.UI.Controls.ControlBase.ControlMouseState
      description: The current mouse data
    content.vb: Protected Overridable Sub OnMouseEnter(state As ControlBase.ControlMouseState)
  overload: SadConsole.UI.Controls.ControlBase.OnMouseEnter*
- uid: SadConsole.UI.Controls.ControlBase.OnMouseExit(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  commentId: M:SadConsole.UI.Controls.ControlBase.OnMouseExit(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  id: OnMouseExit(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnMouseExit(ControlMouseState)
  nameWithType: ControlBase.OnMouseExit(ControlBase.ControlMouseState)
  fullName: SadConsole.UI.Controls.ControlBase.OnMouseExit(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the mouse exits the area of the control. Raises the MouseExit event and calls the <xref href="SadConsole.UI.Controls.ControlBase.DetermineState" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: protected virtual void OnMouseExit(ControlBase.ControlMouseState state)
    parameters:
    - id: state
      type: SadConsole.UI.Controls.ControlBase.ControlMouseState
      description: The current mouse data
    content.vb: Protected Overridable Sub OnMouseExit(state As ControlBase.ControlMouseState)
  overload: SadConsole.UI.Controls.ControlBase.OnMouseExit*
- uid: SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  commentId: M:SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  id: OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnMouseIn(ControlMouseState)
  nameWithType: ControlBase.OnMouseIn(ControlBase.ControlMouseState)
  fullName: SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called as the mouse moves around the control area. Raises the MouseMove event and calls the <xref href="SadConsole.UI.Controls.ControlBase.DetermineState" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: protected virtual void OnMouseIn(ControlBase.ControlMouseState state)
    parameters:
    - id: state
      type: SadConsole.UI.Controls.ControlBase.ControlMouseState
      description: The current mouse data
    content.vb: Protected Overridable Sub OnMouseIn(state As ControlBase.ControlMouseState)
  overload: SadConsole.UI.Controls.ControlBase.OnMouseIn*
- uid: SadConsole.UI.Controls.ControlBase.OnLeftMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  commentId: M:SadConsole.UI.Controls.ControlBase.OnLeftMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  id: OnLeftMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnLeftMouseClicked(ControlMouseState)
  nameWithType: ControlBase.OnLeftMouseClicked(ControlBase.ControlMouseState)
  fullName: SadConsole.UI.Controls.ControlBase.OnLeftMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the left mouse button is clicked. Raises the MouseButtonClicked event and calls the <xref href="SadConsole.UI.Controls.ControlBase.DetermineState" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: protected virtual void OnLeftMouseClicked(ControlBase.ControlMouseState state)
    parameters:
    - id: state
      type: SadConsole.UI.Controls.ControlBase.ControlMouseState
      description: The current mouse data
    content.vb: Protected Overridable Sub OnLeftMouseClicked(state As ControlBase.ControlMouseState)
  overload: SadConsole.UI.Controls.ControlBase.OnLeftMouseClicked*
- uid: SadConsole.UI.Controls.ControlBase.OnRightMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  commentId: M:SadConsole.UI.Controls.ControlBase.OnRightMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  id: OnRightMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: OnRightMouseClicked(ControlMouseState)
  nameWithType: ControlBase.OnRightMouseClicked(ControlBase.ControlMouseState)
  fullName: SadConsole.UI.Controls.ControlBase.OnRightMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Called when the right mouse button is clicked. Raises the MouseButtonClicked event and calls the <xref href="SadConsole.UI.Controls.ControlBase.DetermineState" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: protected virtual void OnRightMouseClicked(ControlBase.ControlMouseState state)
    parameters:
    - id: state
      type: SadConsole.UI.Controls.ControlBase.ControlMouseState
      description: The current mouse data.
    content.vb: Protected Overridable Sub OnRightMouseClicked(state As ControlBase.ControlMouseState)
  overload: SadConsole.UI.Controls.ControlBase.OnRightMouseClicked*
- uid: SadConsole.UI.Controls.ControlBase.UpdateAndRedraw(System.TimeSpan)
  commentId: M:SadConsole.UI.Controls.ControlBase.UpdateAndRedraw(System.TimeSpan)
  id: UpdateAndRedraw(System.TimeSpan)
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: UpdateAndRedraw(TimeSpan)
  nameWithType: ControlBase.UpdateAndRedraw(TimeSpan)
  fullName: SadConsole.UI.Controls.ControlBase.UpdateAndRedraw(System.TimeSpan)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Redraws the control if applicable.
  example: []
  syntax:
    content: public abstract void UpdateAndRedraw(TimeSpan time)
    parameters:
    - id: time
      type: System.TimeSpan
      description: The duration of thecurrent frame.
    content.vb: Public MustOverride Sub UpdateAndRedraw(time As TimeSpan)
  overload: SadConsole.UI.Controls.ControlBase.UpdateAndRedraw*
- uid: SadConsole.UI.Controls.ControlBase.ThemeState
  commentId: P:SadConsole.UI.Controls.ControlBase.ThemeState
  id: ThemeState
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: ThemeState
  nameWithType: ControlBase.ThemeState
  fullName: SadConsole.UI.Controls.ControlBase.ThemeState
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: The theme of the control based on its state.
  example: []
  syntax:
    content: public ThemeStates ThemeState { get; set; }
    parameters: []
    return:
      type: SadConsole.UI.ThemeStates
    content.vb: Public Property ThemeState As ThemeStates
  overload: SadConsole.UI.Controls.ControlBase.ThemeState*
- uid: SadConsole.UI.Controls.ControlBase.UseKeyboard
  commentId: P:SadConsole.UI.Controls.ControlBase.UseKeyboard
  id: UseKeyboard
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: UseKeyboard
  nameWithType: ControlBase.UseKeyboard
  fullName: SadConsole.UI.Controls.ControlBase.UseKeyboard
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to allow this control to respond to keyboard interactions when focused.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool UseKeyboard { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property UseKeyboard As Boolean
  overload: SadConsole.UI.Controls.ControlBase.UseKeyboard*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.UseMouse
  commentId: P:SadConsole.UI.Controls.ControlBase.UseMouse
  id: UseMouse
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: UseMouse
  nameWithType: ControlBase.UseMouse
  fullName: SadConsole.UI.Controls.ControlBase.UseMouse
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to allow this control to respond to mouse interactions.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool UseMouse { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property UseMouse As Boolean
  overload: SadConsole.UI.Controls.ControlBase.UseMouse*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.CanFocus
  commentId: P:SadConsole.UI.Controls.ControlBase.CanFocus
  id: CanFocus
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: CanFocus
  nameWithType: ControlBase.CanFocus
  fullName: SadConsole.UI.Controls.ControlBase.CanFocus
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to indicate this control can be focused, generally by clicking on the control or tabbing with the keyboard. Otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool CanFocus { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property CanFocus As Boolean
  overload: SadConsole.UI.Controls.ControlBase.CanFocus*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.CanResize
  commentId: P:SadConsole.UI.Controls.ControlBase.CanResize
  id: CanResize
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: CanResize
  nameWithType: ControlBase.CanResize
  fullName: SadConsole.UI.Controls.ControlBase.CanResize
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, indicates that this control can be resized with the <xref href="SadConsole.UI.Controls.ControlBase.Resize(System.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> method; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool CanResize { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property CanResize As Boolean
  overload: SadConsole.UI.Controls.ControlBase.CanResize*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.AlternateFont
  commentId: P:SadConsole.UI.Controls.ControlBase.AlternateFont
  id: AlternateFont
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: AlternateFont
  nameWithType: ControlBase.AlternateFont
  fullName: SadConsole.UI.Controls.ControlBase.AlternateFont
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: An alternate font used to render this control.
  example: []
  syntax:
    content: >-
      [DataMember]

      public IFont? AlternateFont { get; set; }
    parameters: []
    return:
      type: SadConsole.IFont
    content.vb: >-
      <DataMember>

      Public Property AlternateFont As IFont
  overload: SadConsole.UI.Controls.ControlBase.AlternateFont*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.Surface
  commentId: P:SadConsole.UI.Controls.ControlBase.Surface
  id: Surface
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Surface
  nameWithType: ControlBase.Surface
  fullName: SadConsole.UI.Controls.ControlBase.Surface
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: The cell data to render the control. Controlled by a theme.
  example: []
  syntax:
    content: public ICellSurface Surface { get; set; }
    parameters: []
    return:
      type: SadConsole.ICellSurface
    content.vb: Public Property Surface As ICellSurface
  overload: SadConsole.UI.Controls.ControlBase.Surface*
- uid: SadConsole.UI.Controls.ControlBase.MouseArea
  commentId: P:SadConsole.UI.Controls.ControlBase.MouseArea
  id: MouseArea
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: MouseArea
  nameWithType: ControlBase.MouseArea
  fullName: SadConsole.UI.Controls.ControlBase.MouseArea
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: The relative region the of the control used for mouse input.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Rectangle MouseArea { get; set; }
    parameters: []
    return:
      type: SadRogue.Primitives.Rectangle
    content.vb: >-
      <DataMember>

      Public Property MouseArea As Rectangle
  overload: SadConsole.UI.Controls.ControlBase.MouseArea*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.IsMouseButtonStateClean
  commentId: P:SadConsole.UI.Controls.ControlBase.IsMouseButtonStateClean
  id: IsMouseButtonStateClean
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: IsMouseButtonStateClean
  nameWithType: ControlBase.IsMouseButtonStateClean
  fullName: SadConsole.UI.Controls.ControlBase.IsMouseButtonStateClean
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, indicates the mouse button state has only been set with this control and not another; othwerise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  remarks: This property is only set when the mouse enters the control with the buttons pressed. Once the buttons are let go, the mouse is considered clean for this control.
  example: []
  syntax:
    content: public bool IsMouseButtonStateClean { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMouseButtonStateClean As Boolean
  overload: SadConsole.UI.Controls.ControlBase.IsMouseButtonStateClean*
- uid: SadConsole.UI.Controls.ControlBase.Position
  commentId: P:SadConsole.UI.Controls.ControlBase.Position
  id: Position
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ControlBase.Position
  fullName: SadConsole.UI.Controls.ControlBase.Position
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: The relative position of this control.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Point Position { get; set; }
    parameters: []
    return:
      type: SadRogue.Primitives.Point
    content.vb: >-
      <DataMember>

      Public Property Position As Point
  overload: SadConsole.UI.Controls.ControlBase.Position*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.AbsolutePosition
  commentId: P:SadConsole.UI.Controls.ControlBase.AbsolutePosition
  id: AbsolutePosition
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: AbsolutePosition
  nameWithType: ControlBase.AbsolutePosition
  fullName: SadConsole.UI.Controls.ControlBase.AbsolutePosition
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Gets the position of this control based on the control's <xref href="SadConsole.UI.Controls.ControlBase.Position" data-throw-if-not-resolved="false"></xref> and the position of the <xref href="SadConsole.UI.Controls.ControlBase.Parent" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Point AbsolutePosition { get; }
    parameters: []
    return:
      type: SadRogue.Primitives.Point
    content.vb: Public ReadOnly Property AbsolutePosition As Point
  overload: SadConsole.UI.Controls.ControlBase.AbsolutePosition*
- uid: SadConsole.UI.Controls.ControlBase.IsVisible
  commentId: P:SadConsole.UI.Controls.ControlBase.IsVisible
  id: IsVisible
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: ControlBase.IsVisible
  fullName: SadConsole.UI.Controls.ControlBase.IsVisible
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Indicates whether or not this control is visible.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IsVisible As Boolean
  overload: SadConsole.UI.Controls.ControlBase.IsVisible*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.Tag
  commentId: P:SadConsole.UI.Controls.ControlBase.Tag
  id: Tag
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: ControlBase.Tag
  fullName: SadConsole.UI.Controls.ControlBase.Tag
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: A user-definable data object.
  example: []
  syntax:
    content: public object? Tag { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Tag As Object
  overload: SadConsole.UI.Controls.ControlBase.Tag*
- uid: SadConsole.UI.Controls.ControlBase.TabStop
  commentId: P:SadConsole.UI.Controls.ControlBase.TabStop
  id: TabStop
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: TabStop
  nameWithType: ControlBase.TabStop
  fullName: SadConsole.UI.Controls.ControlBase.TabStop
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Indicates whether or not this control can be tabbed to.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool TabStop { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property TabStop As Boolean
  overload: SadConsole.UI.Controls.ControlBase.TabStop*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.TabIndex
  commentId: P:SadConsole.UI.Controls.ControlBase.TabIndex
  id: TabIndex
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: TabIndex
  nameWithType: ControlBase.TabIndex
  fullName: SadConsole.UI.Controls.ControlBase.TabIndex
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Sets the tab index of this control.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int TabIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property TabIndex As Integer
  overload: SadConsole.UI.Controls.ControlBase.TabIndex*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.IsDirty
  commentId: P:SadConsole.UI.Controls.ControlBase.IsDirty
  id: IsDirty
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: ControlBase.IsDirty
  fullName: SadConsole.UI.Controls.ControlBase.IsDirty
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Indicates whether or not this control is dirty and should be redrawn.
  example: []
  syntax:
    content: public bool IsDirty { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDirty As Boolean
  overload: SadConsole.UI.Controls.ControlBase.IsDirty*
- uid: SadConsole.UI.Controls.ControlBase.Name
  commentId: P:SadConsole.UI.Controls.ControlBase.Name
  id: Name
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ControlBase.Name
  fullName: SadConsole.UI.Controls.ControlBase.Name
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Represents a name to identify a control by.
  example: []
  syntax:
    content: >-
      [DataMember]

      public string? Name { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Property Name As String
  overload: SadConsole.UI.Controls.ControlBase.Name*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.FocusOnMouseClick
  commentId: P:SadConsole.UI.Controls.ControlBase.FocusOnMouseClick
  id: FocusOnMouseClick
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: FocusOnMouseClick
  nameWithType: ControlBase.FocusOnMouseClick
  fullName: SadConsole.UI.Controls.ControlBase.FocusOnMouseClick
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Gets or sets whether or not this control will become focused when the mouse is clicked.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool FocusOnMouseClick { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property FocusOnMouseClick As Boolean
  overload: SadConsole.UI.Controls.ControlBase.FocusOnMouseClick*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.Width
  commentId: P:SadConsole.UI.Controls.ControlBase.Width
  id: Width
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: ControlBase.Width
  fullName: SadConsole.UI.Controls.ControlBase.Width
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: The width of the control.
  example: []
  syntax:
    content: public int Width { get; protected set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Width As Integer
  overload: SadConsole.UI.Controls.ControlBase.Width*
- uid: SadConsole.UI.Controls.ControlBase.Height
  commentId: P:SadConsole.UI.Controls.ControlBase.Height
  id: Height
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: ControlBase.Height
  fullName: SadConsole.UI.Controls.ControlBase.Height
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: The height of the control.
  example: []
  syntax:
    content: public int Height { get; protected set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Height As Integer
  overload: SadConsole.UI.Controls.ControlBase.Height*
- uid: SadConsole.UI.Controls.ControlBase.IsFocused
  commentId: P:SadConsole.UI.Controls.ControlBase.IsFocused
  id: IsFocused
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: IsFocused
  nameWithType: ControlBase.IsFocused
  fullName: SadConsole.UI.Controls.ControlBase.IsFocused
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Gets or sets whether or not this control is focused.
  example: []
  syntax:
    content: public bool IsFocused { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsFocused As Boolean
  overload: SadConsole.UI.Controls.ControlBase.IsFocused*
- uid: SadConsole.UI.Controls.ControlBase.IsEnabled
  commentId: P:SadConsole.UI.Controls.ControlBase.IsEnabled
  id: IsEnabled
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: ControlBase.IsEnabled
  fullName: SadConsole.UI.Controls.ControlBase.IsEnabled
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Gets or sets whether or not this control is enabled.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IsEnabled As Boolean
  overload: SadConsole.UI.Controls.ControlBase.IsEnabled*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.Controls.ControlBase.Bounds
  commentId: P:SadConsole.UI.Controls.ControlBase.Bounds
  id: Bounds
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Bounds
  nameWithType: ControlBase.Bounds
  fullName: SadConsole.UI.Controls.ControlBase.Bounds
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: The area of the host this control covers.
  example: []
  syntax:
    content: public Rectangle Bounds { get; }
    parameters: []
    return:
      type: SadRogue.Primitives.Rectangle
    content.vb: Public ReadOnly Property Bounds As Rectangle
  overload: SadConsole.UI.Controls.ControlBase.Bounds*
- uid: SadConsole.UI.Controls.ControlBase.Parent
  commentId: P:SadConsole.UI.Controls.ControlBase.Parent
  id: Parent
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ControlBase.Parent
  fullName: SadConsole.UI.Controls.ControlBase.Parent
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Gets or sets the parent container of this control.
  example: []
  syntax:
    content: public IContainer? Parent { get; set; }
    parameters: []
    return:
      type: SadConsole.UI.Controls.IContainer
    content.vb: Public Property Parent As IContainer
  overload: SadConsole.UI.Controls.ControlBase.Parent*
- uid: SadConsole.UI.Controls.ControlBase.State
  commentId: P:SadConsole.UI.Controls.ControlBase.State
  id: State
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ControlBase.State
  fullName: SadConsole.UI.Controls.ControlBase.State
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: The state of the control.
  example: []
  syntax:
    content: public ControlStates State { get; protected set; }
    parameters: []
    return:
      type: SadConsole.UI.Controls.ControlStates
    content.vb: Public Property State As ControlStates
  overload: SadConsole.UI.Controls.ControlBase.State*
- uid: SadConsole.UI.Controls.ControlBase.IsDirtyChanged
  commentId: E:SadConsole.UI.Controls.ControlBase.IsDirtyChanged
  id: IsDirtyChanged
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: IsDirtyChanged
  nameWithType: ControlBase.IsDirtyChanged
  fullName: SadConsole.UI.Controls.ControlBase.IsDirtyChanged
  type: Event
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Raised when the <xref href="SadConsole.UI.Controls.ControlBase.IsDirty" data-throw-if-not-resolved="false"></xref> property changes.
  example: []
  syntax:
    content: public event EventHandler<EventArgs>? IsDirtyChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event IsDirtyChanged As EventHandler(Of EventArgs)
- uid: SadConsole.UI.Controls.ControlBase.Focused
  commentId: E:SadConsole.UI.Controls.ControlBase.Focused
  id: Focused
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Focused
  nameWithType: ControlBase.Focused
  fullName: SadConsole.UI.Controls.ControlBase.Focused
  type: Event
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Raised when the <xref href="SadConsole.UI.Controls.ControlBase.IsFocused" data-throw-if-not-resolved="false"></xref> is set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public event EventHandler<EventArgs>? Focused
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event Focused As EventHandler(Of EventArgs)
- uid: SadConsole.UI.Controls.ControlBase.Unfocused
  commentId: E:SadConsole.UI.Controls.ControlBase.Unfocused
  id: Unfocused
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: Unfocused
  nameWithType: ControlBase.Unfocused
  fullName: SadConsole.UI.Controls.ControlBase.Unfocused
  type: Event
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Raised when the <xref href="SadConsole.UI.Controls.ControlBase.IsFocused" data-throw-if-not-resolved="false"></xref> is set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public event EventHandler<EventArgs>? Unfocused
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event Unfocused As EventHandler(Of EventArgs)
- uid: SadConsole.UI.Controls.ControlBase.PositionChanged
  commentId: E:SadConsole.UI.Controls.ControlBase.PositionChanged
  id: PositionChanged
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: PositionChanged
  nameWithType: ControlBase.PositionChanged
  fullName: SadConsole.UI.Controls.ControlBase.PositionChanged
  type: Event
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Raised when the <xref href="SadConsole.UI.Controls.ControlBase.Position" data-throw-if-not-resolved="false"></xref> property changes value.
  example: []
  syntax:
    content: public event EventHandler<EventArgs>? PositionChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event PositionChanged As EventHandler(Of EventArgs)
- uid: SadConsole.UI.Controls.ControlBase.MouseEnter
  commentId: E:SadConsole.UI.Controls.ControlBase.MouseEnter
  id: MouseEnter
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: MouseEnter
  nameWithType: ControlBase.MouseEnter
  fullName: SadConsole.UI.Controls.ControlBase.MouseEnter
  type: Event
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Raised when the mouse enters this control.
  example: []
  syntax:
    content: public event EventHandler<ControlBase.ControlMouseState>? MouseEnter
    return:
      type: System.EventHandler{SadConsole.UI.Controls.ControlBase.ControlMouseState}
    content.vb: Public Event MouseEnter As EventHandler(Of ControlBase.ControlMouseState)
- uid: SadConsole.UI.Controls.ControlBase.MouseExit
  commentId: E:SadConsole.UI.Controls.ControlBase.MouseExit
  id: MouseExit
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: MouseExit
  nameWithType: ControlBase.MouseExit
  fullName: SadConsole.UI.Controls.ControlBase.MouseExit
  type: Event
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Raised when the mouse exits this control.
  example: []
  syntax:
    content: public event EventHandler<ControlBase.ControlMouseState>? MouseExit
    return:
      type: System.EventHandler{SadConsole.UI.Controls.ControlBase.ControlMouseState}
    content.vb: Public Event MouseExit As EventHandler(Of ControlBase.ControlMouseState)
- uid: SadConsole.UI.Controls.ControlBase.MouseMove
  commentId: E:SadConsole.UI.Controls.ControlBase.MouseMove
  id: MouseMove
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: MouseMove
  nameWithType: ControlBase.MouseMove
  fullName: SadConsole.UI.Controls.ControlBase.MouseMove
  type: Event
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Raised when the mouse is moved over this control.
  example: []
  syntax:
    content: public event EventHandler<ControlBase.ControlMouseState>? MouseMove
    return:
      type: System.EventHandler{SadConsole.UI.Controls.ControlBase.ControlMouseState}
    content.vb: Public Event MouseMove As EventHandler(Of ControlBase.ControlMouseState)
- uid: SadConsole.UI.Controls.ControlBase.MouseButtonClicked
  commentId: E:SadConsole.UI.Controls.ControlBase.MouseButtonClicked
  id: MouseButtonClicked
  parent: SadConsole.UI.Controls.ControlBase
  langs:
  - csharp
  - vb
  name: MouseButtonClicked
  nameWithType: ControlBase.MouseButtonClicked
  fullName: SadConsole.UI.Controls.ControlBase.MouseButtonClicked
  type: Event
  assemblies:
  - SadConsole
  namespace: SadConsole.UI.Controls
  summary: Raised when a mouse button is clicked while the mouse is over this control.
  example: []
  syntax:
    content: public event EventHandler<ControlBase.ControlMouseState>? MouseButtonClicked
    return:
      type: System.EventHandler{SadConsole.UI.Controls.ControlBase.ControlMouseState}
    content.vb: Public Event MouseButtonClicked As EventHandler(Of ControlBase.ControlMouseState)
references:
- uid: SadConsole.UI.Controls
  commentId: N:SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.html
  name: SadConsole.UI.Controls
  nameWithType: SadConsole.UI.Controls
  fullName: SadConsole.UI.Controls
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  commentId: M:SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnMouseEnter_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  name: OnMouseEnter(ControlMouseState)
  nameWithType: ControlBase.OnMouseEnter(ControlBase.ControlMouseState)
  fullName: SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  spec.csharp:
  - uid: SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)
    name: OnMouseEnter
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnMouseEnter_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase.ControlMouseState
    name: ControlMouseState
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.ControlMouseState.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.ControlBase.OnMouseEnter(SadConsole.UI.Controls.ControlBase.ControlMouseState)
    name: OnMouseEnter
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnMouseEnter_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase.ControlMouseState
    name: ControlMouseState
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.ControlMouseState.html
  - name: )
- uid: SadConsole.UI.Controls.ControlBase.MouseArea
  commentId: P:SadConsole.UI.Controls.ControlBase.MouseArea
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_MouseArea
  name: MouseArea
  nameWithType: ControlBase.MouseArea
  fullName: SadConsole.UI.Controls.ControlBase.MouseArea
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.UI.Controls.ControlBase
  commentId: T:SadConsole.UI.Controls.ControlBase
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html
  name: ControlBase
  nameWithType: ControlBase
  fullName: SadConsole.UI.Controls.ControlBase
- uid: SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  commentId: M:SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnMouseIn_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  name: OnMouseIn(ControlMouseState)
  nameWithType: ControlBase.OnMouseIn(ControlBase.ControlMouseState)
  fullName: SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)
  spec.csharp:
  - uid: SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)
    name: OnMouseIn
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnMouseIn_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase.ControlMouseState
    name: ControlMouseState
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.ControlMouseState.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.ControlBase.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)
    name: OnMouseIn
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnMouseIn_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase.ControlMouseState
    name: ControlMouseState
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.ControlMouseState.html
  - name: )
- uid: SadConsole.UI.Controls.ControlBase.#ctor*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.#ctor
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase__ctor_System_Int32_System_Int32_
  name: ControlBase
  nameWithType: ControlBase.ControlBase
  fullName: SadConsole.UI.Controls.ControlBase.ControlBase
  nameWithType.vb: ControlBase.New
  fullName.vb: SadConsole.UI.Controls.ControlBase.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SadConsole.UI.Controls.ControlBase.OnUnfocused*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnUnfocused
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnUnfocused
  name: OnUnfocused
  nameWithType: ControlBase.OnUnfocused
  fullName: SadConsole.UI.Controls.ControlBase.OnUnfocused
- uid: SadConsole.UI.Controls.ControlBase.OnFocused*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnFocused
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnFocused
  name: OnFocused
  nameWithType: ControlBase.OnFocused
  fullName: SadConsole.UI.Controls.ControlBase.OnFocused
- uid: SadConsole.UI.Controls.ControlBase.IsDirty
  commentId: P:SadConsole.UI.Controls.ControlBase.IsDirty
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_IsDirty
  name: IsDirty
  nameWithType: ControlBase.IsDirty
  fullName: SadConsole.UI.Controls.ControlBase.IsDirty
- uid: SadConsole.UI.Controls.ControlBase.OnIsDirtyChanged*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnIsDirtyChanged
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnIsDirtyChanged
  name: OnIsDirtyChanged
  nameWithType: ControlBase.OnIsDirtyChanged
  fullName: SadConsole.UI.Controls.ControlBase.OnIsDirtyChanged
- uid: SadConsole.UI.Controls.ControlBase.ProcessKeyboard*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.ProcessKeyboard
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_ProcessKeyboard_SadConsole_Input_Keyboard_
  name: ProcessKeyboard
  nameWithType: ControlBase.ProcessKeyboard
  fullName: SadConsole.UI.Controls.ControlBase.ProcessKeyboard
- uid: SadConsole.Input.Keyboard
  commentId: T:SadConsole.Input.Keyboard
  parent: SadConsole.Input
  isExternal: true
  href: SadConsole.Input.Keyboard.html
  name: Keyboard
  nameWithType: Keyboard
  fullName: SadConsole.Input.Keyboard
- uid: SadConsole.Input
  commentId: N:SadConsole.Input
  isExternal: true
  href: SadConsole.html
  name: SadConsole.Input
  nameWithType: SadConsole.Input
  fullName: SadConsole.Input
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Input
    name: Input
    isExternal: true
    href: SadConsole.Input.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Input
    name: Input
    isExternal: true
    href: SadConsole.Input.html
- uid: SadConsole.UI.Controls.ControlBase.ProcessMouse*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.ProcessMouse
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_ProcessMouse_SadConsole_Input_MouseScreenObjectState_
  name: ProcessMouse
  nameWithType: ControlBase.ProcessMouse
  fullName: SadConsole.UI.Controls.ControlBase.ProcessMouse
- uid: SadConsole.Input.MouseScreenObjectState
  commentId: T:SadConsole.Input.MouseScreenObjectState
  parent: SadConsole.Input
  isExternal: true
  href: SadConsole.Input.MouseScreenObjectState.html
  name: MouseScreenObjectState
  nameWithType: MouseScreenObjectState
  fullName: SadConsole.Input.MouseScreenObjectState
- uid: SadConsole.UI.Controls.ControlBase.LostMouse*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.LostMouse
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_LostMouse_SadConsole_Input_MouseScreenObjectState_
  name: LostMouse
  nameWithType: ControlBase.LostMouse
  fullName: SadConsole.UI.Controls.ControlBase.LostMouse
- uid: SadConsole.UI.Controls.ControlBase.OnParentChanged*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnParentChanged
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnParentChanged
  name: OnParentChanged
  nameWithType: ControlBase.OnParentChanged
  fullName: SadConsole.UI.Controls.ControlBase.OnParentChanged
- uid: SadConsole.UI.Controls.ControlBase.OnPositionChanged*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnPositionChanged
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnPositionChanged
  name: OnPositionChanged
  nameWithType: ControlBase.OnPositionChanged
  fullName: SadConsole.UI.Controls.ControlBase.OnPositionChanged
- uid: SadConsole.UI.Controls.ControlBase.PlaceRelativeTo*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.PlaceRelativeTo
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_PlaceRelativeTo_SadConsole_UI_Controls_ControlBase_SadRogue_Primitives_Direction_Types_System_Int32_
  name: PlaceRelativeTo
  nameWithType: ControlBase.PlaceRelativeTo
  fullName: SadConsole.UI.Controls.ControlBase.PlaceRelativeTo
- uid: SadRogue.Primitives.Direction.Types
  commentId: T:SadRogue.Primitives.Direction.Types
  parent: SadRogue.Primitives
  isExternal: true
  name: Direction.Types
  nameWithType: Direction.Types
  fullName: SadRogue.Primitives.Direction.Types
  spec.csharp:
  - uid: SadRogue.Primitives.Direction
    name: Direction
    isExternal: true
  - name: .
  - uid: SadRogue.Primitives.Direction.Types
    name: Types
    isExternal: true
  spec.vb:
  - uid: SadRogue.Primitives.Direction
    name: Direction
    isExternal: true
  - name: .
  - uid: SadRogue.Primitives.Direction.Types
    name: Types
    isExternal: true
- uid: SadRogue.Primitives
  commentId: N:SadRogue.Primitives
  isExternal: true
  href: SadRogue.html
  name: SadRogue.Primitives
  nameWithType: SadRogue.Primitives
  fullName: SadRogue.Primitives
  spec.csharp:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
  spec.vb:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
- uid: SadConsole.UI.Controls.ControlBase.DetermineState*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.DetermineState
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_DetermineState
  name: DetermineState
  nameWithType: ControlBase.DetermineState
  fullName: SadConsole.UI.Controls.ControlBase.DetermineState
- uid: SadConsole.UI.Controls.ControlBase.State
  commentId: P:SadConsole.UI.Controls.ControlBase.State
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_State
  name: State
  nameWithType: ControlBase.State
  fullName: SadConsole.UI.Controls.ControlBase.State
- uid: SadConsole.UI.Controls.ControlBase.OnStateChanged*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnStateChanged
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnStateChanged_SadConsole_UI_Controls_ControlStates_SadConsole_UI_Controls_ControlStates_
  name: OnStateChanged
  nameWithType: ControlBase.OnStateChanged
  fullName: SadConsole.UI.Controls.ControlBase.OnStateChanged
- uid: SadConsole.UI.Controls.ControlStates
  commentId: T:SadConsole.UI.Controls.ControlStates
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.ControlStates.html
  name: ControlStates
  nameWithType: ControlStates
  fullName: SadConsole.UI.Controls.ControlStates
- uid: SadConsole.UI.Controls.ControlBase.Surface
  commentId: P:SadConsole.UI.Controls.ControlBase.Surface
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Surface
  name: Surface
  nameWithType: ControlBase.Surface
  fullName: SadConsole.UI.Controls.ControlBase.Surface
- uid: SadConsole.UI.Controls.ControlBase.OnSurfaceChanged*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnSurfaceChanged
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnSurfaceChanged_SadConsole_ICellSurface_SadConsole_ICellSurface_
  name: OnSurfaceChanged
  nameWithType: ControlBase.OnSurfaceChanged
  fullName: SadConsole.UI.Controls.ControlBase.OnSurfaceChanged
- uid: SadConsole.ICellSurface
  commentId: T:SadConsole.ICellSurface
  parent: SadConsole
  isExternal: true
  href: SadConsole.ICellSurface.html
  name: ICellSurface
  nameWithType: ICellSurface
  fullName: SadConsole.ICellSurface
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: SadConsole.UI.Controls.ControlBase.FindThemeColors*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.FindThemeColors
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_FindThemeColors
  name: FindThemeColors
  nameWithType: ControlBase.FindThemeColors
  fullName: SadConsole.UI.Controls.ControlBase.FindThemeColors
- uid: SadConsole.UI.Colors
  commentId: T:SadConsole.UI.Colors
  parent: SadConsole.UI
  isExternal: true
  href: SadConsole.UI.Colors.html
  name: Colors
  nameWithType: Colors
  fullName: SadConsole.UI.Colors
- uid: SadConsole.UI
  commentId: N:SadConsole.UI
  isExternal: true
  href: SadConsole.html
  name: SadConsole.UI
  nameWithType: SadConsole.UI
  fullName: SadConsole.UI
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
- uid: SadConsole.UI.Controls.ControlBase.SetThemeColors*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.SetThemeColors
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_SetThemeColors_SadConsole_UI_Colors_
  name: SetThemeColors
  nameWithType: ControlBase.SetThemeColors
  fullName: SadConsole.UI.Controls.ControlBase.SetThemeColors
- uid: SadConsole.UI.Controls.ControlBase.HasThemeColors*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.HasThemeColors
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_HasThemeColors
  name: HasThemeColors
  nameWithType: ControlBase.HasThemeColors
  fullName: SadConsole.UI.Controls.ControlBase.HasThemeColors
- uid: SadConsole.UI.Controls.ControlBase.CanResize
  commentId: P:SadConsole.UI.Controls.ControlBase.CanResize
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_CanResize
  name: CanResize
  nameWithType: ControlBase.CanResize
  fullName: SadConsole.UI.Controls.ControlBase.CanResize
- uid: SadConsole.UI.Controls.ControlBase.Resize*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.Resize
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Resize_System_Int32_System_Int32_
  name: Resize
  nameWithType: ControlBase.Resize
  fullName: SadConsole.UI.Controls.ControlBase.Resize
- uid: SadConsole.UI.Controls.ControlBase.Resize(System.Int32,System.Int32)
  commentId: M:SadConsole.UI.Controls.ControlBase.Resize(System.Int32,System.Int32)
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Resize_System_Int32_System_Int32_
  name: Resize(int, int)
  nameWithType: ControlBase.Resize(int, int)
  fullName: SadConsole.UI.Controls.ControlBase.Resize(int, int)
  nameWithType.vb: ControlBase.Resize(Integer, Integer)
  fullName.vb: SadConsole.UI.Controls.ControlBase.Resize(Integer, Integer)
  name.vb: Resize(Integer, Integer)
  spec.csharp:
  - uid: SadConsole.UI.Controls.ControlBase.Resize(System.Int32,System.Int32)
    name: Resize
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Resize_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.ControlBase.Resize(System.Int32,System.Int32)
    name: Resize
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Resize_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SadConsole.UI.Controls.ControlBase.OnResized*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnResized
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnResized
  name: OnResized
  nameWithType: ControlBase.OnResized
  fullName: SadConsole.UI.Controls.ControlBase.OnResized
- uid: SadConsole.UI.Controls.ControlBase.CreateControlSurface*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.CreateControlSurface
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_CreateControlSurface
  name: CreateControlSurface
  nameWithType: ControlBase.CreateControlSurface
  fullName: SadConsole.UI.Controls.ControlBase.CreateControlSurface
- uid: SadConsole.UI.Controls.ControlBase.ThemeState
  commentId: P:SadConsole.UI.Controls.ControlBase.ThemeState
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_ThemeState
  name: ThemeState
  nameWithType: ControlBase.ThemeState
  fullName: SadConsole.UI.Controls.ControlBase.ThemeState
- uid: SadConsole.UI.ThemeStates.RefreshTheme(SadConsole.UI.Colors)
  commentId: M:SadConsole.UI.ThemeStates.RefreshTheme(SadConsole.UI.Colors)
  parent: SadConsole.UI.ThemeStates
  isExternal: true
  href: SadConsole.UI.ThemeStates.html#SadConsole_UI_ThemeStates_RefreshTheme_SadConsole_UI_Colors_
  name: RefreshTheme(Colors)
  nameWithType: ThemeStates.RefreshTheme(Colors)
  fullName: SadConsole.UI.ThemeStates.RefreshTheme(SadConsole.UI.Colors)
  spec.csharp:
  - uid: SadConsole.UI.ThemeStates.RefreshTheme(SadConsole.UI.Colors)
    name: RefreshTheme
    isExternal: true
    href: SadConsole.UI.ThemeStates.html#SadConsole_UI_ThemeStates_RefreshTheme_SadConsole_UI_Colors_
  - name: (
  - uid: SadConsole.UI.Colors
    name: Colors
    isExternal: true
    href: SadConsole.UI.Colors.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.ThemeStates.RefreshTheme(SadConsole.UI.Colors)
    name: RefreshTheme
    isExternal: true
    href: SadConsole.UI.ThemeStates.html#SadConsole_UI_ThemeStates_RefreshTheme_SadConsole_UI_Colors_
  - name: (
  - uid: SadConsole.UI.Colors
    name: Colors
    isExternal: true
    href: SadConsole.UI.Colors.html
  - name: )
- uid: SadConsole.UI.Controls.ControlBase.RefreshThemeStateColors*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.RefreshThemeStateColors
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_RefreshThemeStateColors_SadConsole_UI_Colors_
  name: RefreshThemeStateColors
  nameWithType: ControlBase.RefreshThemeStateColors
  fullName: SadConsole.UI.Controls.ControlBase.RefreshThemeStateColors
- uid: SadConsole.UI.ThemeStates
  commentId: T:SadConsole.UI.ThemeStates
  parent: SadConsole.UI
  isExternal: true
  href: SadConsole.UI.ThemeStates.html
  name: ThemeStates
  nameWithType: ThemeStates
  fullName: SadConsole.UI.ThemeStates
- uid: SadConsole.UI.Controls.ControlBase.DetermineState
  commentId: M:SadConsole.UI.Controls.ControlBase.DetermineState
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_DetermineState
  name: DetermineState()
  nameWithType: ControlBase.DetermineState()
  fullName: SadConsole.UI.Controls.ControlBase.DetermineState()
  spec.csharp:
  - uid: SadConsole.UI.Controls.ControlBase.DetermineState
    name: DetermineState
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_DetermineState
  - name: (
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.ControlBase.DetermineState
    name: DetermineState
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_DetermineState
  - name: (
  - name: )
- uid: SadConsole.UI.Controls.ControlBase.OnMouseEnter*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnMouseEnter
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnMouseEnter_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  name: OnMouseEnter
  nameWithType: ControlBase.OnMouseEnter
  fullName: SadConsole.UI.Controls.ControlBase.OnMouseEnter
- uid: SadConsole.UI.Controls.ControlBase.ControlMouseState
  commentId: T:SadConsole.UI.Controls.ControlBase.ControlMouseState
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html
  name: ControlBase.ControlMouseState
  nameWithType: ControlBase.ControlMouseState
  fullName: SadConsole.UI.Controls.ControlBase.ControlMouseState
  spec.csharp:
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: .
  - uid: SadConsole.UI.Controls.ControlBase.ControlMouseState
    name: ControlMouseState
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.ControlMouseState.html
  spec.vb:
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: .
  - uid: SadConsole.UI.Controls.ControlBase.ControlMouseState
    name: ControlMouseState
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.ControlMouseState.html
- uid: SadConsole.UI.Controls.ControlBase.OnMouseExit*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnMouseExit
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnMouseExit_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  name: OnMouseExit
  nameWithType: ControlBase.OnMouseExit
  fullName: SadConsole.UI.Controls.ControlBase.OnMouseExit
- uid: SadConsole.UI.Controls.ControlBase.OnMouseIn*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnMouseIn
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnMouseIn_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  name: OnMouseIn
  nameWithType: ControlBase.OnMouseIn
  fullName: SadConsole.UI.Controls.ControlBase.OnMouseIn
- uid: SadConsole.UI.Controls.ControlBase.OnLeftMouseClicked*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnLeftMouseClicked
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnLeftMouseClicked_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  name: OnLeftMouseClicked
  nameWithType: ControlBase.OnLeftMouseClicked
  fullName: SadConsole.UI.Controls.ControlBase.OnLeftMouseClicked
- uid: SadConsole.UI.Controls.ControlBase.OnRightMouseClicked*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.OnRightMouseClicked
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_OnRightMouseClicked_SadConsole_UI_Controls_ControlBase_ControlMouseState_
  name: OnRightMouseClicked
  nameWithType: ControlBase.OnRightMouseClicked
  fullName: SadConsole.UI.Controls.ControlBase.OnRightMouseClicked
- uid: SadConsole.UI.Controls.ControlBase.UpdateAndRedraw*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.UpdateAndRedraw
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_UpdateAndRedraw_System_TimeSpan_
  name: UpdateAndRedraw
  nameWithType: ControlBase.UpdateAndRedraw
  fullName: SadConsole.UI.Controls.ControlBase.UpdateAndRedraw
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: SadConsole.UI.Controls.ControlBase.ThemeState*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.ThemeState
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_ThemeState
  name: ThemeState
  nameWithType: ControlBase.ThemeState
  fullName: SadConsole.UI.Controls.ControlBase.ThemeState
- uid: SadConsole.UI.Controls.ControlBase.UseKeyboard*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.UseKeyboard
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_UseKeyboard
  name: UseKeyboard
  nameWithType: ControlBase.UseKeyboard
  fullName: SadConsole.UI.Controls.ControlBase.UseKeyboard
- uid: SadConsole.UI.Controls.ControlBase.UseMouse*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.UseMouse
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_UseMouse
  name: UseMouse
  nameWithType: ControlBase.UseMouse
  fullName: SadConsole.UI.Controls.ControlBase.UseMouse
- uid: SadConsole.UI.Controls.ControlBase.CanFocus*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.CanFocus
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_CanFocus
  name: CanFocus
  nameWithType: ControlBase.CanFocus
  fullName: SadConsole.UI.Controls.ControlBase.CanFocus
- uid: SadConsole.UI.Controls.ControlBase.CanResize*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.CanResize
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_CanResize
  name: CanResize
  nameWithType: ControlBase.CanResize
  fullName: SadConsole.UI.Controls.ControlBase.CanResize
- uid: SadConsole.UI.Controls.ControlBase.AlternateFont*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.AlternateFont
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_AlternateFont
  name: AlternateFont
  nameWithType: ControlBase.AlternateFont
  fullName: SadConsole.UI.Controls.ControlBase.AlternateFont
- uid: SadConsole.IFont
  commentId: T:SadConsole.IFont
  parent: SadConsole
  isExternal: true
  href: SadConsole.IFont.html
  name: IFont
  nameWithType: IFont
  fullName: SadConsole.IFont
- uid: SadConsole.UI.Controls.ControlBase.Surface*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.Surface
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Surface
  name: Surface
  nameWithType: ControlBase.Surface
  fullName: SadConsole.UI.Controls.ControlBase.Surface
- uid: SadConsole.UI.Controls.ControlBase.MouseArea*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.MouseArea
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_MouseArea
  name: MouseArea
  nameWithType: ControlBase.MouseArea
  fullName: SadConsole.UI.Controls.ControlBase.MouseArea
- uid: SadRogue.Primitives.Rectangle
  commentId: T:SadRogue.Primitives.Rectangle
  parent: SadRogue.Primitives
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: SadRogue.Primitives.Rectangle
- uid: SadConsole.UI.Controls.ControlBase.IsMouseButtonStateClean*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.IsMouseButtonStateClean
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_IsMouseButtonStateClean
  name: IsMouseButtonStateClean
  nameWithType: ControlBase.IsMouseButtonStateClean
  fullName: SadConsole.UI.Controls.ControlBase.IsMouseButtonStateClean
- uid: SadConsole.UI.Controls.ControlBase.Position*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.Position
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Position
  name: Position
  nameWithType: ControlBase.Position
  fullName: SadConsole.UI.Controls.ControlBase.Position
- uid: SadRogue.Primitives.Point
  commentId: T:SadRogue.Primitives.Point
  parent: SadRogue.Primitives
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: SadRogue.Primitives.Point
- uid: SadConsole.UI.Controls.ControlBase.Position
  commentId: P:SadConsole.UI.Controls.ControlBase.Position
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Position
  name: Position
  nameWithType: ControlBase.Position
  fullName: SadConsole.UI.Controls.ControlBase.Position
- uid: SadConsole.UI.Controls.ControlBase.Parent
  commentId: P:SadConsole.UI.Controls.ControlBase.Parent
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Parent
  name: Parent
  nameWithType: ControlBase.Parent
  fullName: SadConsole.UI.Controls.ControlBase.Parent
- uid: SadConsole.UI.Controls.ControlBase.AbsolutePosition*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.AbsolutePosition
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_AbsolutePosition
  name: AbsolutePosition
  nameWithType: ControlBase.AbsolutePosition
  fullName: SadConsole.UI.Controls.ControlBase.AbsolutePosition
- uid: SadConsole.UI.Controls.ControlBase.IsVisible*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.IsVisible
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_IsVisible
  name: IsVisible
  nameWithType: ControlBase.IsVisible
  fullName: SadConsole.UI.Controls.ControlBase.IsVisible
- uid: SadConsole.UI.Controls.ControlBase.Tag*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.Tag
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Tag
  name: Tag
  nameWithType: ControlBase.Tag
  fullName: SadConsole.UI.Controls.ControlBase.Tag
- uid: SadConsole.UI.Controls.ControlBase.TabStop*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.TabStop
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_TabStop
  name: TabStop
  nameWithType: ControlBase.TabStop
  fullName: SadConsole.UI.Controls.ControlBase.TabStop
- uid: SadConsole.UI.Controls.ControlBase.TabIndex*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.TabIndex
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_TabIndex
  name: TabIndex
  nameWithType: ControlBase.TabIndex
  fullName: SadConsole.UI.Controls.ControlBase.TabIndex
- uid: SadConsole.UI.Controls.ControlBase.IsDirty*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.IsDirty
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_IsDirty
  name: IsDirty
  nameWithType: ControlBase.IsDirty
  fullName: SadConsole.UI.Controls.ControlBase.IsDirty
- uid: SadConsole.UI.Controls.ControlBase.Name*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.Name
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Name
  name: Name
  nameWithType: ControlBase.Name
  fullName: SadConsole.UI.Controls.ControlBase.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SadConsole.UI.Controls.ControlBase.FocusOnMouseClick*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.FocusOnMouseClick
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_FocusOnMouseClick
  name: FocusOnMouseClick
  nameWithType: ControlBase.FocusOnMouseClick
  fullName: SadConsole.UI.Controls.ControlBase.FocusOnMouseClick
- uid: SadConsole.UI.Controls.ControlBase.Width*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.Width
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Width
  name: Width
  nameWithType: ControlBase.Width
  fullName: SadConsole.UI.Controls.ControlBase.Width
- uid: SadConsole.UI.Controls.ControlBase.Height*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.Height
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Height
  name: Height
  nameWithType: ControlBase.Height
  fullName: SadConsole.UI.Controls.ControlBase.Height
- uid: SadConsole.UI.Controls.ControlBase.IsFocused*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.IsFocused
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_IsFocused
  name: IsFocused
  nameWithType: ControlBase.IsFocused
  fullName: SadConsole.UI.Controls.ControlBase.IsFocused
- uid: SadConsole.UI.Controls.ControlBase.IsEnabled*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.IsEnabled
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_IsEnabled
  name: IsEnabled
  nameWithType: ControlBase.IsEnabled
  fullName: SadConsole.UI.Controls.ControlBase.IsEnabled
- uid: SadConsole.UI.Controls.ControlBase.Bounds*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.Bounds
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Bounds
  name: Bounds
  nameWithType: ControlBase.Bounds
  fullName: SadConsole.UI.Controls.ControlBase.Bounds
- uid: SadConsole.UI.Controls.ControlBase.Parent*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.Parent
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Parent
  name: Parent
  nameWithType: ControlBase.Parent
  fullName: SadConsole.UI.Controls.ControlBase.Parent
- uid: SadConsole.UI.Controls.IContainer
  commentId: T:SadConsole.UI.Controls.IContainer
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.IContainer.html
  name: IContainer
  nameWithType: IContainer
  fullName: SadConsole.UI.Controls.IContainer
- uid: SadConsole.UI.Controls.ControlBase.State*
  commentId: Overload:SadConsole.UI.Controls.ControlBase.State
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_State
  name: State
  nameWithType: ControlBase.State
  fullName: SadConsole.UI.Controls.ControlBase.State
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: SadConsole.UI.Controls.ControlBase.IsFocused
  commentId: P:SadConsole.UI.Controls.ControlBase.IsFocused
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_IsFocused
  name: IsFocused
  nameWithType: ControlBase.IsFocused
  fullName: SadConsole.UI.Controls.ControlBase.IsFocused
- uid: System.EventHandler{SadConsole.UI.Controls.ControlBase.ControlMouseState}
  commentId: T:System.EventHandler{SadConsole.UI.Controls.ControlBase.ControlMouseState}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ControlBase.ControlMouseState>
  nameWithType: EventHandler<ControlBase.ControlMouseState>
  fullName: System.EventHandler<SadConsole.UI.Controls.ControlBase.ControlMouseState>
  nameWithType.vb: EventHandler(Of ControlBase.ControlMouseState)
  fullName.vb: System.EventHandler(Of SadConsole.UI.Controls.ControlBase.ControlMouseState)
  name.vb: EventHandler(Of ControlBase.ControlMouseState)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: .
  - uid: SadConsole.UI.Controls.ControlBase.ControlMouseState
    name: ControlMouseState
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.ControlMouseState.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: .
  - uid: SadConsole.UI.Controls.ControlBase.ControlMouseState
    name: ControlMouseState
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.ControlMouseState.html
  - name: )
