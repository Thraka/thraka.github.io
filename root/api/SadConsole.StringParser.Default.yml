### YamlMime:ManagedReference
items:
- uid: SadConsole.StringParser.Default
  commentId: T:SadConsole.StringParser.Default
  id: Default
  parent: SadConsole.StringParser
  children:
  - SadConsole.StringParser.Default.#ctor
  - SadConsole.StringParser.Default.CustomProcessor
  - SadConsole.StringParser.Default.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  - SadConsole.StringParser.Default.Variables
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: Default
  fullName: SadConsole.StringParser.Default
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: The default string parser.
  example: []
  syntax:
    content: 'public class Default : IParser'
    content.vb: Public Class [Default] Implements IParser
  inheritance:
  - System.Object
  implements:
  - SadConsole.StringParser.IParser
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: SadConsole.StringParser.Default.CustomProcessor
  commentId: F:SadConsole.StringParser.Default.CustomProcessor
  id: CustomProcessor
  parent: SadConsole.StringParser.Default
  langs:
  - csharp
  - vb
  name: CustomProcessor
  nameWithType: Default.CustomProcessor
  fullName: SadConsole.StringParser.Default.CustomProcessor
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: Custom processor called if any built in command is not triggerd. Signature is ("command", "parameters", existing glyphs, text surface, associated editor, command stacks).
  example: []
  syntax:
    content: public Func<string, string, ColoredGlyphAndEffect[], ICellSurface?, ParseCommandStacks?, ParseCommandBase?>? CustomProcessor
    return:
      type: System.Func{System.String,System.String,SadConsole.ColoredGlyphAndEffect[],SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks,SadConsole.StringParser.ParseCommandBase}
    content.vb: Public CustomProcessor As Func(Of String, String, ColoredGlyphAndEffect(), ICellSurface, ParseCommandStacks, ParseCommandBase)
- uid: SadConsole.StringParser.Default.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  commentId: M:SadConsole.StringParser.Default.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  id: Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  parent: SadConsole.StringParser.Default
  langs:
  - csharp
  - vb
  name: Parse(ReadOnlySpan<char>, int, ICellSurface?, ParseCommandStacks?)
  nameWithType: Default.Parse(ReadOnlySpan<char>, int, ICellSurface?, ParseCommandStacks?)
  fullName: SadConsole.StringParser.Default.Parse(System.ReadOnlySpan<char>, int, SadConsole.ICellSurface?, SadConsole.StringParser.ParseCommandStacks?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: Creates a colored string by parsing commands embedded in the string.
  example: []
  syntax:
    content: public ColoredString Parse(ReadOnlySpan<char> value, int surfaceIndex = -1, ICellSurface? surface = null, ParseCommandStacks? initialBehaviors = null)
    parameters:
    - id: value
      type: System.ReadOnlySpan{System.Char}
      description: The string to parse.
    - id: surfaceIndex
      type: System.Int32
      description: Index of where this string will be printed.
    - id: surface
      type: SadConsole.ICellSurface
      description: The surface the string will be printed to.
    - id: initialBehaviors
      type: SadConsole.StringParser.ParseCommandStacks
      description: Any initial defaults.
    return:
      type: SadConsole.ColoredString
      description: The finalized string.
    content.vb: Public Function Parse(value As ReadOnlySpan(Of Char), surfaceIndex As Integer = -1, surface As ICellSurface = Nothing, initialBehaviors As ParseCommandStacks = Nothing) As ColoredString
  overload: SadConsole.StringParser.Default.Parse*
  implements:
  - SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  nameWithType.vb: Default.Parse(ReadOnlySpan(Of Char), Integer, ICellSurface, ParseCommandStacks)
  fullName.vb: SadConsole.StringParser.Default.Parse(System.ReadOnlySpan(Of Char), Integer, SadConsole.ICellSurface, SadConsole.StringParser.ParseCommandStacks)
  name.vb: Parse(ReadOnlySpan(Of Char), Integer, ICellSurface, ParseCommandStacks)
- uid: SadConsole.StringParser.Default.#ctor
  commentId: M:SadConsole.StringParser.Default.#ctor
  id: '#ctor'
  parent: SadConsole.StringParser.Default
  langs:
  - csharp
  - vb
  name: Default()
  nameWithType: Default.Default()
  fullName: SadConsole.StringParser.Default.Default()
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  syntax:
    content: public Default()
    content.vb: Public Sub New()
  overload: SadConsole.StringParser.Default.#ctor*
  nameWithType.vb: Default.New()
  fullName.vb: SadConsole.StringParser.Default.New()
  name.vb: New()
- uid: SadConsole.StringParser.Default.Variables
  commentId: P:SadConsole.StringParser.Default.Variables
  id: Variables
  parent: SadConsole.StringParser.Default
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: Default.Variables
  fullName: SadConsole.StringParser.Default.Variables
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: A dictionary of variable resolution methods.
  example: []
  syntax:
    content: public Dictionary<string, Func<string>> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Func{System.String}}
    content.vb: Public ReadOnly Property Variables As Dictionary(Of String, Func(Of String))
  overload: SadConsole.StringParser.Default.Variables*
references:
- uid: SadConsole.StringParser
  commentId: N:SadConsole.StringParser
  isExternal: true
  href: SadConsole.html
  name: SadConsole.StringParser
  nameWithType: SadConsole.StringParser
  fullName: SadConsole.StringParser
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.StringParser
    name: StringParser
    isExternal: true
    href: SadConsole.StringParser.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.StringParser
    name: StringParser
    isExternal: true
    href: SadConsole.StringParser.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SadConsole.StringParser.IParser
  commentId: T:SadConsole.StringParser.IParser
  parent: SadConsole.StringParser
  isExternal: true
  href: SadConsole.StringParser.IParser.html
  name: IParser
  nameWithType: IParser
  fullName: SadConsole.StringParser.IParser
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{System.String,System.String,SadConsole.ColoredGlyphAndEffect[],SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks,SadConsole.StringParser.ParseCommandBase}
  commentId: T:System.Func{System.String,System.String,SadConsole.ColoredGlyphAndEffect[],SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks,SadConsole.StringParser.ParseCommandBase}
  parent: System
  definition: System.Func`6
  href: https://learn.microsoft.com/dotnet/api/system.func-6
  name: Func<string, string, ColoredGlyphAndEffect[], ICellSurface, ParseCommandStacks, ParseCommandBase>
  nameWithType: Func<string, string, ColoredGlyphAndEffect[], ICellSurface, ParseCommandStacks, ParseCommandBase>
  fullName: System.Func<string, string, SadConsole.ColoredGlyphAndEffect[], SadConsole.ICellSurface, SadConsole.StringParser.ParseCommandStacks, SadConsole.StringParser.ParseCommandBase>
  nameWithType.vb: Func(Of String, String, ColoredGlyphAndEffect(), ICellSurface, ParseCommandStacks, ParseCommandBase)
  fullName.vb: System.Func(Of String, String, SadConsole.ColoredGlyphAndEffect(), SadConsole.ICellSurface, SadConsole.StringParser.ParseCommandStacks, SadConsole.StringParser.ParseCommandBase)
  name.vb: Func(Of String, String, ColoredGlyphAndEffect(), ICellSurface, ParseCommandStacks, ParseCommandBase)
  spec.csharp:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: SadConsole.ICellSurface
    name: ICellSurface
    isExternal: true
    href: SadConsole.ICellSurface.html
  - name: ','
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandStacks
    name: ParseCommandStacks
    isExternal: true
    href: SadConsole.StringParser.ParseCommandStacks.html
  - name: ','
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandBase
    name: ParseCommandBase
    isExternal: true
    href: SadConsole.StringParser.ParseCommandBase.html
  - name: '>'
  spec.vb:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphAndEffect
    name: ColoredGlyphAndEffect
    isExternal: true
    href: SadConsole.ColoredGlyphAndEffect.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: SadConsole.ICellSurface
    name: ICellSurface
    isExternal: true
    href: SadConsole.ICellSurface.html
  - name: ','
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandStacks
    name: ParseCommandStacks
    isExternal: true
    href: SadConsole.StringParser.ParseCommandStacks.html
  - name: ','
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandBase
    name: ParseCommandBase
    isExternal: true
    href: SadConsole.StringParser.ParseCommandBase.html
  - name: )
- uid: System.Func`6
  commentId: T:System.Func`6
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-6
  name: Func<T1, T2, T3, T4, T5, TResult>
  nameWithType: Func<T1, T2, T3, T4, T5, TResult>
  fullName: System.Func<T1, T2, T3, T4, T5, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, T5, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, T4, T5, TResult)
  name.vb: Func(Of T1, T2, T3, T4, T5, TResult)
  spec.csharp:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: SadConsole.StringParser.Default.Parse*
  commentId: Overload:SadConsole.StringParser.Default.Parse
  isExternal: true
  href: SadConsole.StringParser.Default.html#SadConsole_StringParser_Default_Parse_System_ReadOnlySpan_System_Char__System_Int32_SadConsole_ICellSurface_SadConsole_StringParser_ParseCommandStacks_
  name: Parse
  nameWithType: Default.Parse
  fullName: SadConsole.StringParser.Default.Parse
- uid: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  commentId: M:SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  parent: SadConsole.StringParser.IParser
  isExternal: true
  href: SadConsole.StringParser.IParser.html#SadConsole_StringParser_IParser_Parse_System_ReadOnlySpan_System_Char__System_Int32_SadConsole_ICellSurface_SadConsole_StringParser_ParseCommandStacks_
  name: Parse(ReadOnlySpan<char>, int, ICellSurface, ParseCommandStacks)
  nameWithType: IParser.Parse(ReadOnlySpan<char>, int, ICellSurface, ParseCommandStacks)
  fullName: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan<char>, int, SadConsole.ICellSurface, SadConsole.StringParser.ParseCommandStacks)
  nameWithType.vb: IParser.Parse(ReadOnlySpan(Of Char), Integer, ICellSurface, ParseCommandStacks)
  fullName.vb: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan(Of Char), Integer, SadConsole.ICellSurface, SadConsole.StringParser.ParseCommandStacks)
  name.vb: Parse(ReadOnlySpan(Of Char), Integer, ICellSurface, ParseCommandStacks)
  spec.csharp:
  - uid: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
    name: Parse
    isExternal: true
    href: SadConsole.StringParser.IParser.html#SadConsole_StringParser_IParser_Parse_System_ReadOnlySpan_System_Char__System_Int32_SadConsole_ICellSurface_SadConsole_StringParser_ParseCommandStacks_
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SadConsole.ICellSurface
    name: ICellSurface
    isExternal: true
    href: SadConsole.ICellSurface.html
  - name: ','
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandStacks
    name: ParseCommandStacks
    isExternal: true
    href: SadConsole.StringParser.ParseCommandStacks.html
  - name: )
  spec.vb:
  - uid: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
    name: Parse
    isExternal: true
    href: SadConsole.StringParser.IParser.html#SadConsole_StringParser_IParser_Parse_System_ReadOnlySpan_System_Char__System_Int32_SadConsole_ICellSurface_SadConsole_StringParser_ParseCommandStacks_
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SadConsole.ICellSurface
    name: ICellSurface
    isExternal: true
    href: SadConsole.ICellSurface.html
  - name: ','
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandStacks
    name: ParseCommandStacks
    isExternal: true
    href: SadConsole.StringParser.ParseCommandStacks.html
  - name: )
- uid: System.ReadOnlySpan{System.Char}
  commentId: T:System.ReadOnlySpan{System.Char}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<char>
  nameWithType: ReadOnlySpan<char>
  fullName: System.ReadOnlySpan<char>
  nameWithType.vb: ReadOnlySpan(Of Char)
  fullName.vb: System.ReadOnlySpan(Of Char)
  name.vb: ReadOnlySpan(Of Char)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SadConsole.ICellSurface
  commentId: T:SadConsole.ICellSurface
  parent: SadConsole
  isExternal: true
  href: SadConsole.ICellSurface.html
  name: ICellSurface
  nameWithType: ICellSurface
  fullName: SadConsole.ICellSurface
- uid: SadConsole.StringParser.ParseCommandStacks
  commentId: T:SadConsole.StringParser.ParseCommandStacks
  parent: SadConsole.StringParser
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html
  name: ParseCommandStacks
  nameWithType: ParseCommandStacks
  fullName: SadConsole.StringParser.ParseCommandStacks
- uid: SadConsole.ColoredString
  commentId: T:SadConsole.ColoredString
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredString.html
  name: ColoredString
  nameWithType: ColoredString
  fullName: SadConsole.ColoredString
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: SadConsole.StringParser.Default.#ctor*
  commentId: Overload:SadConsole.StringParser.Default.#ctor
  isExternal: true
  href: SadConsole.StringParser.Default.html#SadConsole_StringParser_Default__ctor
  name: Default
  nameWithType: Default.Default
  fullName: SadConsole.StringParser.Default.Default
  nameWithType.vb: Default.New
  fullName.vb: SadConsole.StringParser.Default.New
  name.vb: New
- uid: SadConsole.StringParser.Default.Variables*
  commentId: Overload:SadConsole.StringParser.Default.Variables
  isExternal: true
  href: SadConsole.StringParser.Default.html#SadConsole_StringParser_Default_Variables
  name: Variables
  nameWithType: Default.Variables
  fullName: SadConsole.StringParser.Default.Variables
- uid: System.Collections.Generic.Dictionary{System.String,System.Func{System.String}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Func{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, Func<string>>
  nameWithType: Dictionary<string, Func<string>>
  fullName: System.Collections.Generic.Dictionary<string, System.Func<string>>
  nameWithType.vb: Dictionary(Of String, Func(Of String))
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Func(Of String))
  name.vb: Dictionary(Of String, Func(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
