### YamlMime:ManagedReference
items:
- uid: SadConsole.UI.Controls.Table.Cell.Options
  commentId: T:SadConsole.UI.Controls.Table.Cell.Options
  id: Table.Cell.Options
  parent: SadConsole.UI.Controls
  children:
  - SadConsole.UI.Controls.Table.Cell.Options.#ctor(SadConsole.UI.Controls.Table)
  - SadConsole.UI.Controls.Table.Cell.Options.Equals(SadConsole.UI.Controls.Table.Cell.Options)
  - SadConsole.UI.Controls.Table.Cell.Options.Equals(System.Object)
  - SadConsole.UI.Controls.Table.Cell.Options.GetHashCode
  - SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlignment
  - SadConsole.UI.Controls.Table.Cell.Options.HoverMode
  - SadConsole.UI.Controls.Table.Cell.Options.Interactable
  - SadConsole.UI.Controls.Table.Cell.Options.MaxCharactersPerLine
  - SadConsole.UI.Controls.Table.Cell.Options.Selectable
  - SadConsole.UI.Controls.Table.Cell.Options.SelectionMode
  - SadConsole.UI.Controls.Table.Cell.Options.UseFakeLayout
  - SadConsole.UI.Controls.Table.Cell.Options.VerticalAlignment
  - SadConsole.UI.Controls.Table.Cell.Options.op_Equality(SadConsole.UI.Controls.Table.Cell.Options,SadConsole.UI.Controls.Table.Cell.Options)
  - SadConsole.UI.Controls.Table.Cell.Options.op_Inequality(SadConsole.UI.Controls.Table.Cell.Options,SadConsole.UI.Controls.Table.Cell.Options)
  langs:
  - csharp
  - vb
  name: Table.Cell.Options
  nameWithType: Table.Cell.Options
  fullName: SadConsole.UI.Controls.Table.Cell.Options
  type: Class
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: A collection of settings that are used by <xref href="SadConsole.UI.Controls.Table.Cell" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: 'public class Table.Cell.Options : IEquatable<Table.Cell.Options>'
    content.vb: Public Class Table.Cell.Options Implements IEquatable(Of Table.Cell.Options)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{SadConsole.UI.Controls.Table.Cell.Options}
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.SadConsole.ExtensionsSystem.GetDebuggerDisplayValue
- uid: SadConsole.UI.Controls.Table.Cell.Options.#ctor(SadConsole.UI.Controls.Table)
  commentId: M:SadConsole.UI.Controls.Table.Cell.Options.#ctor(SadConsole.UI.Controls.Table)
  id: '#ctor(SadConsole.UI.Controls.Table)'
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: Options(Table)
  nameWithType: Table.Cell.Options.Options(Table)
  fullName: SadConsole.UI.Controls.Table.Cell.Options.Options(SadConsole.UI.Controls.Table)
  type: Constructor
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Creates new options based on the default values of the table
  example: []
  syntax:
    content: public Options(Table table)
    parameters:
    - id: table
      type: SadConsole.UI.Controls.Table
      description: ''
    content.vb: Public Sub New(table As Table)
  overload: SadConsole.UI.Controls.Table.Cell.Options.#ctor*
  nameWithType.vb: Table.Cell.Options.New(Table)
  fullName.vb: SadConsole.UI.Controls.Table.Cell.Options.New(SadConsole.UI.Controls.Table)
  name.vb: New(Table)
- uid: SadConsole.UI.Controls.Table.Cell.Options.op_Equality(SadConsole.UI.Controls.Table.Cell.Options,SadConsole.UI.Controls.Table.Cell.Options)
  commentId: M:SadConsole.UI.Controls.Table.Cell.Options.op_Equality(SadConsole.UI.Controls.Table.Cell.Options,SadConsole.UI.Controls.Table.Cell.Options)
  id: op_Equality(SadConsole.UI.Controls.Table.Cell.Options,SadConsole.UI.Controls.Table.Cell.Options)
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: operator ==(Options?, Options?)
  nameWithType: Table.Cell.Options.operator ==(Table.Cell.Options?, Table.Cell.Options?)
  fullName: SadConsole.UI.Controls.Table.Cell.Options.operator ==(SadConsole.UI.Controls.Table.Cell.Options?, SadConsole.UI.Controls.Table.Cell.Options?)
  type: Operator
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public static bool operator ==(Table.Cell.Options? a, Table.Cell.Options? b)
    parameters:
    - id: a
      type: SadConsole.UI.Controls.Table.Cell.Options
    - id: b
      type: SadConsole.UI.Controls.Table.Cell.Options
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Table.Cell.Options, b As Table.Cell.Options) As Boolean
  overload: SadConsole.UI.Controls.Table.Cell.Options.op_Equality*
  nameWithType.vb: Table.Cell.Options.=(Table.Cell.Options, Table.Cell.Options)
  fullName.vb: SadConsole.UI.Controls.Table.Cell.Options.=(SadConsole.UI.Controls.Table.Cell.Options, SadConsole.UI.Controls.Table.Cell.Options)
  name.vb: =(Options, Options)
- uid: SadConsole.UI.Controls.Table.Cell.Options.op_Inequality(SadConsole.UI.Controls.Table.Cell.Options,SadConsole.UI.Controls.Table.Cell.Options)
  commentId: M:SadConsole.UI.Controls.Table.Cell.Options.op_Inequality(SadConsole.UI.Controls.Table.Cell.Options,SadConsole.UI.Controls.Table.Cell.Options)
  id: op_Inequality(SadConsole.UI.Controls.Table.Cell.Options,SadConsole.UI.Controls.Table.Cell.Options)
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: operator !=(Options?, Options?)
  nameWithType: Table.Cell.Options.operator !=(Table.Cell.Options?, Table.Cell.Options?)
  fullName: SadConsole.UI.Controls.Table.Cell.Options.operator !=(SadConsole.UI.Controls.Table.Cell.Options?, SadConsole.UI.Controls.Table.Cell.Options?)
  type: Operator
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public static bool operator !=(Table.Cell.Options? a, Table.Cell.Options? b)
    parameters:
    - id: a
      type: SadConsole.UI.Controls.Table.Cell.Options
    - id: b
      type: SadConsole.UI.Controls.Table.Cell.Options
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Table.Cell.Options, b As Table.Cell.Options) As Boolean
  overload: SadConsole.UI.Controls.Table.Cell.Options.op_Inequality*
  nameWithType.vb: Table.Cell.Options.<>(Table.Cell.Options, Table.Cell.Options)
  fullName.vb: SadConsole.UI.Controls.Table.Cell.Options.<>(SadConsole.UI.Controls.Table.Cell.Options, SadConsole.UI.Controls.Table.Cell.Options)
  name.vb: <>(Options, Options)
- uid: SadConsole.UI.Controls.Table.Cell.Options.Equals(SadConsole.UI.Controls.Table.Cell.Options)
  commentId: M:SadConsole.UI.Controls.Table.Cell.Options.Equals(SadConsole.UI.Controls.Table.Cell.Options)
  id: Equals(SadConsole.UI.Controls.Table.Cell.Options)
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: Equals(Options?)
  nameWithType: Table.Cell.Options.Equals(Table.Cell.Options?)
  fullName: SadConsole.UI.Controls.Table.Cell.Options.Equals(SadConsole.UI.Controls.Table.Cell.Options?)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public bool Equals(Table.Cell.Options? other)
    parameters:
    - id: other
      type: SadConsole.UI.Controls.Table.Cell.Options
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Table.Cell.Options) As Boolean
  overload: SadConsole.UI.Controls.Table.Cell.Options.Equals*
  implements:
  - System.IEquatable{SadConsole.UI.Controls.Table.Cell.Options}.Equals(SadConsole.UI.Controls.Table.Cell.Options)
  nameWithType.vb: Table.Cell.Options.Equals(Table.Cell.Options)
  fullName.vb: SadConsole.UI.Controls.Table.Cell.Options.Equals(SadConsole.UI.Controls.Table.Cell.Options)
  name.vb: Equals(Options)
- uid: SadConsole.UI.Controls.Table.Cell.Options.Equals(System.Object)
  commentId: M:SadConsole.UI.Controls.Table.Cell.Options.Equals(System.Object)
  id: Equals(System.Object)
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Table.Cell.Options.Equals(object?)
  fullName: SadConsole.UI.Controls.Table.Cell.Options.Equals(object?)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: SadConsole.UI.Controls.Table.Cell.Options.Equals*
  nameWithType.vb: Table.Cell.Options.Equals(Object)
  fullName.vb: SadConsole.UI.Controls.Table.Cell.Options.Equals(Object)
  name.vb: Equals(Object)
- uid: SadConsole.UI.Controls.Table.Cell.Options.GetHashCode
  commentId: M:SadConsole.UI.Controls.Table.Cell.Options.GetHashCode
  id: GetHashCode
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Table.Cell.Options.GetHashCode()
  fullName: SadConsole.UI.Controls.Table.Cell.Options.GetHashCode()
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: SadConsole.UI.Controls.Table.Cell.Options.GetHashCode*
- uid: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlignment
  commentId: P:SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlignment
  id: HorizontalAlignment
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: HorizontalAlignment
  nameWithType: Table.Cell.Options.HorizontalAlignment
  fullName: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlignment
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: 'The horizontal text alignment setting; Default: left'
  example: []
  syntax:
    content: public Table.Cell.Options.HorizontalAlign HorizontalAlignment { get; set; }
    parameters: []
    return:
      type: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign
    content.vb: Public Property HorizontalAlignment As Table.Cell.Options.HorizontalAlign
  overload: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlignment*
- uid: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlignment
  commentId: P:SadConsole.UI.Controls.Table.Cell.Options.VerticalAlignment
  id: VerticalAlignment
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: VerticalAlignment
  nameWithType: Table.Cell.Options.VerticalAlignment
  fullName: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlignment
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: 'The vertical text alignment setting; Default: left'
  example: []
  syntax:
    content: public Table.Cell.Options.VerticalAlign VerticalAlignment { get; set; }
    parameters: []
    return:
      type: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign
    content.vb: Public Property VerticalAlignment As Table.Cell.Options.VerticalAlign
  overload: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlignment*
- uid: SadConsole.UI.Controls.Table.Cell.Options.UseFakeLayout
  commentId: P:SadConsole.UI.Controls.Table.Cell.Options.UseFakeLayout
  id: UseFakeLayout
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: UseFakeLayout
  nameWithType: Table.Cell.Options.UseFakeLayout
  fullName: SadConsole.UI.Controls.Table.Cell.Options.UseFakeLayout
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: 'Defines if the cell should also trigger the fake layout event if the option is enabled on the table; Default: false'
  example: []
  syntax:
    content: public bool UseFakeLayout { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseFakeLayout As Boolean
  overload: SadConsole.UI.Controls.Table.Cell.Options.UseFakeLayout*
- uid: SadConsole.UI.Controls.Table.Cell.Options.MaxCharactersPerLine
  commentId: P:SadConsole.UI.Controls.Table.Cell.Options.MaxCharactersPerLine
  id: MaxCharactersPerLine
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: MaxCharactersPerLine
  nameWithType: Table.Cell.Options.MaxCharactersPerLine
  fullName: SadConsole.UI.Controls.Table.Cell.Options.MaxCharactersPerLine
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: 'The maximum characters this cell can show per line; Default: cell width'
  example: []
  syntax:
    content: public int? MaxCharactersPerLine { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property MaxCharactersPerLine As Integer?
  overload: SadConsole.UI.Controls.Table.Cell.Options.MaxCharactersPerLine*
- uid: SadConsole.UI.Controls.Table.Cell.Options.Interactable
  commentId: P:SadConsole.UI.Controls.Table.Cell.Options.Interactable
  id: Interactable
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: Interactable
  nameWithType: Table.Cell.Options.Interactable
  fullName: SadConsole.UI.Controls.Table.Cell.Options.Interactable
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: 'Defines if the cell can interact with mouse events; Default: true'
  example: []
  syntax:
    content: public bool Interactable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Interactable As Boolean
  overload: SadConsole.UI.Controls.Table.Cell.Options.Interactable*
- uid: SadConsole.UI.Controls.Table.Cell.Options.Selectable
  commentId: P:SadConsole.UI.Controls.Table.Cell.Options.Selectable
  id: Selectable
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: Selectable
  nameWithType: Table.Cell.Options.Selectable
  fullName: SadConsole.UI.Controls.Table.Cell.Options.Selectable
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: 'Defines if the cell can be selected by the mouse; Default: true'
  example: []
  syntax:
    content: public bool Selectable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Selectable As Boolean
  overload: SadConsole.UI.Controls.Table.Cell.Options.Selectable*
- uid: SadConsole.UI.Controls.Table.Cell.Options.SelectionMode
  commentId: P:SadConsole.UI.Controls.Table.Cell.Options.SelectionMode
  id: SelectionMode
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: SelectionMode
  nameWithType: Table.Cell.Options.SelectionMode
  fullName: SadConsole.UI.Controls.Table.Cell.Options.SelectionMode
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: 'Defines the selection visual mode when the cell is selected; Default: single'
  example: []
  syntax:
    content: public Table.TableCells.Layout.Mode SelectionMode { get; set; }
    parameters: []
    return:
      type: SadConsole.UI.Controls.Table.TableCells.Layout.Mode
    content.vb: Public Property SelectionMode As Table.TableCells.Layout.Mode
  overload: SadConsole.UI.Controls.Table.Cell.Options.SelectionMode*
- uid: SadConsole.UI.Controls.Table.Cell.Options.HoverMode
  commentId: P:SadConsole.UI.Controls.Table.Cell.Options.HoverMode
  id: HoverMode
  parent: SadConsole.UI.Controls.Table.Cell.Options
  langs:
  - csharp
  - vb
  name: HoverMode
  nameWithType: Table.Cell.Options.HoverMode
  fullName: SadConsole.UI.Controls.Table.Cell.Options.HoverMode
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: 'Defines the hover visual mode when the cell is hovered over by the mouse; Default: single'
  example: []
  syntax:
    content: public Table.TableCells.Layout.Mode HoverMode { get; set; }
    parameters: []
    return:
      type: SadConsole.UI.Controls.Table.TableCells.Layout.Mode
    content.vb: Public Property HoverMode As Table.TableCells.Layout.Mode
  overload: SadConsole.UI.Controls.Table.Cell.Options.HoverMode*
references:
- uid: SadConsole.UI.Controls.Table.Cell
  commentId: T:SadConsole.UI.Controls.Table.Cell
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.Cell
  nameWithType: Table.Cell
  fullName: SadConsole.UI.Controls.Table.Cell
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
- uid: SadConsole.UI.Controls
  commentId: N:SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.html
  name: SadConsole.UI.Controls
  nameWithType: SadConsole.UI.Controls
  fullName: SadConsole.UI.Controls
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{SadConsole.UI.Controls.Table.Cell.Options}
  commentId: T:System.IEquatable{SadConsole.UI.Controls.Table.Cell.Options}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Table.Cell.Options>
  nameWithType: IEquatable<Table.Cell.Options>
  fullName: System.IEquatable<SadConsole.UI.Controls.Table.Cell.Options>
  nameWithType.vb: IEquatable(Of Table.Cell.Options)
  fullName.vb: System.IEquatable(Of SadConsole.UI.Controls.Table.Cell.Options)
  name.vb: IEquatable(Of Table.Cell.Options)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.SadConsole.ExtensionsSystem.GetDebuggerDisplayValue
  commentId: M:SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  parent: SadConsole.ExtensionsSystem
  definition: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  name: GetDebuggerDisplayValue(object)
  nameWithType: ExtensionsSystem.GetDebuggerDisplayValue(object)
  fullName: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(object)
  nameWithType.vb: ExtensionsSystem.GetDebuggerDisplayValue(Object)
  fullName.vb: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(Object)
  name.vb: GetDebuggerDisplayValue(Object)
  spec.csharp:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  commentId: M:SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  isExternal: true
  href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  name: GetDebuggerDisplayValue(object)
  nameWithType: ExtensionsSystem.GetDebuggerDisplayValue(object)
  fullName: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(object)
  nameWithType.vb: ExtensionsSystem.GetDebuggerDisplayValue(Object)
  fullName.vb: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(Object)
  name.vb: GetDebuggerDisplayValue(Object)
  spec.csharp:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: SadConsole.ExtensionsSystem
  commentId: T:SadConsole.ExtensionsSystem
  parent: SadConsole
  isExternal: true
  href: SadConsole.ExtensionsSystem.html
  name: ExtensionsSystem
  nameWithType: ExtensionsSystem
  fullName: SadConsole.ExtensionsSystem
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: SadConsole.UI.Controls.Table.Cell.Options.#ctor*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.#ctor
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options__ctor_SadConsole_UI_Controls_Table_
  name: Options
  nameWithType: Table.Cell.Options.Options
  fullName: SadConsole.UI.Controls.Table.Cell.Options.Options
  nameWithType.vb: Table.Cell.Options.New
  fullName.vb: SadConsole.UI.Controls.Table.Cell.Options.New
  name.vb: New
- uid: SadConsole.UI.Controls.Table
  commentId: T:SadConsole.UI.Controls.Table
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table
  nameWithType: Table
  fullName: SadConsole.UI.Controls.Table
- uid: SadConsole.UI.Controls.Table.Cell.Options.op_Equality*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.op_Equality
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_op_Equality_SadConsole_UI_Controls_Table_Cell_Options_SadConsole_UI_Controls_Table_Cell_Options_
  name: operator ==
  nameWithType: Table.Cell.Options.operator ==
  fullName: SadConsole.UI.Controls.Table.Cell.Options.operator ==
  nameWithType.vb: Table.Cell.Options.=
  fullName.vb: SadConsole.UI.Controls.Table.Cell.Options.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell.Options.op_Equality*
    name: ==
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_op_Equality_SadConsole_UI_Controls_Table_Cell_Options_SadConsole_UI_Controls_Table_Cell_Options_
- uid: SadConsole.UI.Controls.Table.Cell.Options
  commentId: T:SadConsole.UI.Controls.Table.Cell.Options
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.Cell.Options
  nameWithType: Table.Cell.Options
  fullName: SadConsole.UI.Controls.Table.Cell.Options
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.UI.Controls.Table.Cell.Options.op_Inequality*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.op_Inequality
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_op_Inequality_SadConsole_UI_Controls_Table_Cell_Options_SadConsole_UI_Controls_Table_Cell_Options_
  name: operator !=
  nameWithType: Table.Cell.Options.operator !=
  fullName: SadConsole.UI.Controls.Table.Cell.Options.operator !=
  nameWithType.vb: Table.Cell.Options.<>
  fullName.vb: SadConsole.UI.Controls.Table.Cell.Options.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell.Options.op_Inequality*
    name: '!='
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_op_Inequality_SadConsole_UI_Controls_Table_Cell_Options_SadConsole_UI_Controls_Table_Cell_Options_
- uid: SadConsole.UI.Controls.Table.Cell.Options.Equals*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.Equals
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_Equals_SadConsole_UI_Controls_Table_Cell_Options_
  name: Equals
  nameWithType: Table.Cell.Options.Equals
  fullName: SadConsole.UI.Controls.Table.Cell.Options.Equals
- uid: System.IEquatable{SadConsole.UI.Controls.Table.Cell.Options}.Equals(SadConsole.UI.Controls.Table.Cell.Options)
  commentId: M:System.IEquatable{SadConsole.UI.Controls.Table.Cell.Options}.Equals(SadConsole.UI.Controls.Table.Cell.Options)
  parent: System.IEquatable{SadConsole.UI.Controls.Table.Cell.Options}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Options)
  nameWithType: IEquatable<Table.Cell.Options>.Equals(Table.Cell.Options)
  fullName: System.IEquatable<SadConsole.UI.Controls.Table.Cell.Options>.Equals(SadConsole.UI.Controls.Table.Cell.Options)
  nameWithType.vb: IEquatable(Of Table.Cell.Options).Equals(Table.Cell.Options)
  fullName.vb: System.IEquatable(Of SadConsole.UI.Controls.Table.Cell.Options).Equals(SadConsole.UI.Controls.Table.Cell.Options)
  spec.csharp:
  - uid: System.IEquatable{SadConsole.UI.Controls.Table.Cell.Options}.Equals(SadConsole.UI.Controls.Table.Cell.Options)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{SadConsole.UI.Controls.Table.Cell.Options}.Equals(SadConsole.UI.Controls.Table.Cell.Options)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: SadConsole.UI.Controls.Table.Cell.Options.GetHashCode*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.GetHashCode
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_GetHashCode
  name: GetHashCode
  nameWithType: Table.Cell.Options.GetHashCode
  fullName: SadConsole.UI.Controls.Table.Cell.Options.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlignment*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlignment
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_HorizontalAlignment
  name: HorizontalAlignment
  nameWithType: Table.Cell.Options.HorizontalAlignment
  fullName: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlignment
- uid: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign
  commentId: T:SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.Cell.Options.HorizontalAlign
  nameWithType: Table.Cell.Options.HorizontalAlign
  fullName: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign
    name: HorizontalAlign
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign
    name: HorizontalAlign
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign.html
- uid: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlignment*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.VerticalAlignment
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_VerticalAlignment
  name: VerticalAlignment
  nameWithType: Table.Cell.Options.VerticalAlignment
  fullName: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlignment
- uid: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign
  commentId: T:SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.Cell.Options.VerticalAlign
  nameWithType: Table.Cell.Options.VerticalAlign
  fullName: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign
    name: VerticalAlign
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign
    name: VerticalAlign
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign.html
- uid: SadConsole.UI.Controls.Table.Cell.Options.UseFakeLayout*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.UseFakeLayout
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_UseFakeLayout
  name: UseFakeLayout
  nameWithType: Table.Cell.Options.UseFakeLayout
  fullName: SadConsole.UI.Controls.Table.Cell.Options.UseFakeLayout
- uid: SadConsole.UI.Controls.Table.Cell.Options.MaxCharactersPerLine*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.MaxCharactersPerLine
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_MaxCharactersPerLine
  name: MaxCharactersPerLine
  nameWithType: Table.Cell.Options.MaxCharactersPerLine
  fullName: SadConsole.UI.Controls.Table.Cell.Options.MaxCharactersPerLine
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.UI.Controls.Table.Cell.Options.Interactable*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.Interactable
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_Interactable
  name: Interactable
  nameWithType: Table.Cell.Options.Interactable
  fullName: SadConsole.UI.Controls.Table.Cell.Options.Interactable
- uid: SadConsole.UI.Controls.Table.Cell.Options.Selectable*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.Selectable
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_Selectable
  name: Selectable
  nameWithType: Table.Cell.Options.Selectable
  fullName: SadConsole.UI.Controls.Table.Cell.Options.Selectable
- uid: SadConsole.UI.Controls.Table.Cell.Options.SelectionMode*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.SelectionMode
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_SelectionMode
  name: SelectionMode
  nameWithType: Table.Cell.Options.SelectionMode
  fullName: SadConsole.UI.Controls.Table.Cell.Options.SelectionMode
- uid: SadConsole.UI.Controls.Table.TableCells.Layout.Mode
  commentId: T:SadConsole.UI.Controls.Table.TableCells.Layout.Mode
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.TableCells.Layout.Mode
  nameWithType: Table.TableCells.Layout.Mode
  fullName: SadConsole.UI.Controls.Table.TableCells.Layout.Mode
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells.Layout
    name: Layout
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.Layout.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells.Layout.Mode
    name: Mode
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.Layout.Mode.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells.Layout
    name: Layout
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.Layout.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells.Layout.Mode
    name: Mode
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.Layout.Mode.html
- uid: SadConsole.UI.Controls.Table.Cell.Options.HoverMode*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Options.HoverMode
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.Options.html#SadConsole_UI_Controls_Table_Cell_Options_HoverMode
  name: HoverMode
  nameWithType: Table.Cell.Options.HoverMode
  fullName: SadConsole.UI.Controls.Table.Cell.Options.HoverMode
