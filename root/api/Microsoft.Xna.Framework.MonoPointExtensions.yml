### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.MonoPointExtensions
  commentId: T:Microsoft.Xna.Framework.MonoPointExtensions
  id: MonoPointExtensions
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Direction)
  - Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  - Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point,System.Int32)
  - Microsoft.Xna.Framework.MonoPointExtensions.Divide(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  - Microsoft.Xna.Framework.MonoPointExtensions.Divide(Microsoft.Xna.Framework.Point,System.Double)
  - Microsoft.Xna.Framework.MonoPointExtensions.Matches(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  - Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  - Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point,System.Double)
  - Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point,System.Int32)
  - Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Direction)
  - Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  - Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point,System.Int32)
  - Microsoft.Xna.Framework.MonoPointExtensions.ToPoint(Microsoft.Xna.Framework.Point)
  langs:
  - csharp
  - vb
  name: MonoPointExtensions
  nameWithType: MonoPointExtensions
  fullName: Microsoft.Xna.Framework.MonoPointExtensions
  type: Class
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: >-
    Extension methods for <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> that enable operations involving

    <xref href="SadRogue.Primitives.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class MonoPointExtensions
    content.vb: Public Module MonoPointExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: Microsoft.Xna.Framework.MonoPointExtensions.ToPoint(Microsoft.Xna.Framework.Point)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.ToPoint(Microsoft.Xna.Framework.Point)
  id: ToPoint(Microsoft.Xna.Framework.Point)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: ToPoint(Point)
  nameWithType: MonoPointExtensions.ToPoint(Point)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.ToPoint(Microsoft.Xna.Framework.Point)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: Converts from <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> to <xref href="SadRogue.Primitives.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Point ToPoint(this Point self)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    return:
      type: SadRogue.Primitives.Point
      description: ''
    content.vb: Public Shared Function ToPoint(self As Point) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.ToPoint*
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  id: Add(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Add(Point, Point)
  nameWithType: MonoPointExtensions.Add(Point, Point)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point, SadRogue.Primitives.Point)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: Adds a <xref href="SadRogue.Primitives.Point" data-throw-if-not-resolved="false"></xref> to a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Point Add(this Point self, Point other)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: other
      type: SadRogue.Primitives.Point
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Add(self As Point, other As Point) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Add*
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point,System.Int32)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point,System.Int32)
  id: Add(Microsoft.Xna.Framework.Point,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Add(Point, int)
  nameWithType: MonoPointExtensions.Add(Point, int)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point, int)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: Adds an integer to both the X and Y values of a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Point Add(this Point self, int i)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Add(self As Point, i As Integer) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Add*
  nameWithType.vb: MonoPointExtensions.Add(Point, Integer)
  fullName.vb: Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point, Integer)
  name.vb: Add(Point, Integer)
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Direction)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Direction)
  id: Add(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Direction)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Add(Point, Direction)
  nameWithType: MonoPointExtensions.Add(Point, Direction)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point, SadRogue.Primitives.Direction)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: Adds a <xref href="SadRogue.Primitives.Direction" data-throw-if-not-resolved="false"></xref> to a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Point Add(this Point self, Direction dir)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: dir
      type: SadRogue.Primitives.Direction
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Add(self As Point, dir As Direction) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Add*
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  id: Subtract(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Subtract(Point, Point)
  nameWithType: MonoPointExtensions.Subtract(Point, Point)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point, SadRogue.Primitives.Point)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: Subtracts a <xref href="SadRogue.Primitives.Point" data-throw-if-not-resolved="false"></xref> from a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Point Subtract(this Point self, Point other)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: other
      type: SadRogue.Primitives.Point
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Subtract(self As Point, other As Point) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Subtract*
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point,System.Int32)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point,System.Int32)
  id: Subtract(Microsoft.Xna.Framework.Point,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Subtract(Point, int)
  nameWithType: MonoPointExtensions.Subtract(Point, int)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point, int)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: Subtracts an integer from both the X and Y values of a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Point Subtract(this Point self, int i)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Subtract(self As Point, i As Integer) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Subtract*
  nameWithType.vb: MonoPointExtensions.Subtract(Point, Integer)
  fullName.vb: Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point, Integer)
  name.vb: Subtract(Point, Integer)
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Direction)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Direction)
  id: Subtract(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Direction)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Subtract(Point, Direction)
  nameWithType: MonoPointExtensions.Subtract(Point, Direction)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point, SadRogue.Primitives.Direction)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: Subtracts a <xref href="SadRogue.Primitives.Direction" data-throw-if-not-resolved="false"></xref> from a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Point Subtract(this Point self, Direction dir)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: dir
      type: SadRogue.Primitives.Direction
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Subtract(self As Point, dir As Direction) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Subtract*
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  id: Multiply(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Multiply(Point, Point)
  nameWithType: MonoPointExtensions.Multiply(Point, Point)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point, SadRogue.Primitives.Point)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: Multiplies a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> by a <xref href="SadRogue.Primitives.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Point Multiply(this Point self, Point other)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: other
      type: SadRogue.Primitives.Point
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Multiply(self As Point, other As Point) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Multiply*
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point,System.Int32)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point,System.Int32)
  id: Multiply(Microsoft.Xna.Framework.Point,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Multiply(Point, int)
  nameWithType: MonoPointExtensions.Multiply(Point, int)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point, int)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: Multiplies the X and Y values of a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> by an integer.
  example: []
  syntax:
    content: public static Point Multiply(this Point self, int i)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Multiply(self As Point, i As Integer) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Multiply*
  nameWithType.vb: MonoPointExtensions.Multiply(Point, Integer)
  fullName.vb: Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point, Integer)
  name.vb: Multiply(Point, Integer)
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point,System.Double)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point,System.Double)
  id: Multiply(Microsoft.Xna.Framework.Point,System.Double)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Multiply(Point, double)
  nameWithType: MonoPointExtensions.Multiply(Point, double)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point, double)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: >-
    Multiplies the X and Y values of a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> by a double, then rounds the

    values to the nearest integer.
  example: []
  syntax:
    content: public static Point Multiply(this Point self, double d)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: d
      type: System.Double
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Multiply(self As Point, d As Double) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Multiply*
  nameWithType.vb: MonoPointExtensions.Multiply(Point, Double)
  fullName.vb: Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point, Double)
  name.vb: Multiply(Point, Double)
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Divide(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Divide(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  id: Divide(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Divide(Point, Point)
  nameWithType: MonoPointExtensions.Divide(Point, Point)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Divide(Microsoft.Xna.Framework.Point, SadRogue.Primitives.Point)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: >-
    Divides a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> by a <xref href="SadRogue.Primitives.Point" data-throw-if-not-resolved="false"></xref>, and

    rounds the resulting X and Y values to the nearest integer.
  example: []
  syntax:
    content: public static Point Divide(this Point self, Point other)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: other
      type: SadRogue.Primitives.Point
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Divide(self As Point, other As Point) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Divide*
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Divide(Microsoft.Xna.Framework.Point,System.Double)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Divide(Microsoft.Xna.Framework.Point,System.Double)
  id: Divide(Microsoft.Xna.Framework.Point,System.Double)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Divide(Point, double)
  nameWithType: MonoPointExtensions.Divide(Point, double)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Divide(Microsoft.Xna.Framework.Point, double)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: >-
    Divides the X and Y values of a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> by a double, then rounds the

    values to the nearest integer.
  example: []
  syntax:
    content: public static Point Divide(this Point self, double d)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: d
      type: System.Double
      description: ''
    return:
      type: Microsoft.Xna.Framework.Point
      description: ''
    content.vb: Public Shared Function Divide(self As Point, d As Double) As Point
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Divide*
  nameWithType.vb: MonoPointExtensions.Divide(Point, Double)
  fullName.vb: Microsoft.Xna.Framework.MonoPointExtensions.Divide(Microsoft.Xna.Framework.Point, Double)
  name.vb: Divide(Point, Double)
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Matches(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  commentId: M:Microsoft.Xna.Framework.MonoPointExtensions.Matches(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  id: Matches(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  isExtensionMethod: true
  parent: Microsoft.Xna.Framework.MonoPointExtensions
  langs:
  - csharp
  - vb
  name: Matches(Point, Point)
  nameWithType: MonoPointExtensions.Matches(Point, Point)
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Matches(Microsoft.Xna.Framework.Point, SadRogue.Primitives.Point)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: Microsoft.Xna.Framework
  summary: Compares a <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> to a <xref href="SadRogue.Primitives.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool Matches(this Point self, Point other)
    parameters:
    - id: self
      type: Microsoft.Xna.Framework.Point
      description: ''
    - id: other
      type: SadRogue.Primitives.Point
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function Matches(self As Point, other As Point) As Boolean
  overload: Microsoft.Xna.Framework.MonoPointExtensions.Matches*
references:
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: SadRogue.Primitives.Point
  commentId: T:SadRogue.Primitives.Point
  parent: SadRogue.Primitives
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: SadRogue.Primitives.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  href: Microsoft.html
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: Microsoft.html
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
    href: Microsoft.Xna.html
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
    href: Microsoft.Xna.Framework.html
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: Microsoft.html
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
    href: Microsoft.Xna.html
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
    href: Microsoft.Xna.Framework.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: SadRogue.Primitives
  commentId: N:SadRogue.Primitives
  isExternal: true
  href: SadRogue.html
  name: SadRogue.Primitives
  nameWithType: SadRogue.Primitives
  fullName: SadRogue.Primitives
  spec.csharp:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
  spec.vb:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.MonoPointExtensions.ToPoint*
  commentId: Overload:Microsoft.Xna.Framework.MonoPointExtensions.ToPoint
  isExternal: true
  href: Microsoft.Xna.Framework.MonoPointExtensions.html#Microsoft.Xna.Framework.MonoPointExtensions.ToPoint(Microsoft.Xna.Framework.Point)
  name: ToPoint
  nameWithType: MonoPointExtensions.ToPoint
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.ToPoint
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Add*
  commentId: Overload:Microsoft.Xna.Framework.MonoPointExtensions.Add
  isExternal: true
  href: Microsoft.Xna.Framework.MonoPointExtensions.html#Microsoft.Xna.Framework.MonoPointExtensions.Add(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  name: Add
  nameWithType: MonoPointExtensions.Add
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Add
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SadRogue.Primitives.Direction
  commentId: T:SadRogue.Primitives.Direction
  parent: SadRogue.Primitives
  isExternal: true
  name: Direction
  nameWithType: Direction
  fullName: SadRogue.Primitives.Direction
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Subtract*
  commentId: Overload:Microsoft.Xna.Framework.MonoPointExtensions.Subtract
  isExternal: true
  href: Microsoft.Xna.Framework.MonoPointExtensions.html#Microsoft.Xna.Framework.MonoPointExtensions.Subtract(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  name: Subtract
  nameWithType: MonoPointExtensions.Subtract
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Subtract
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Multiply*
  commentId: Overload:Microsoft.Xna.Framework.MonoPointExtensions.Multiply
  isExternal: true
  href: Microsoft.Xna.Framework.MonoPointExtensions.html#Microsoft.Xna.Framework.MonoPointExtensions.Multiply(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  name: Multiply
  nameWithType: MonoPointExtensions.Multiply
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Multiply
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Divide*
  commentId: Overload:Microsoft.Xna.Framework.MonoPointExtensions.Divide
  isExternal: true
  href: Microsoft.Xna.Framework.MonoPointExtensions.html#Microsoft.Xna.Framework.MonoPointExtensions.Divide(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  name: Divide
  nameWithType: MonoPointExtensions.Divide
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Divide
- uid: Microsoft.Xna.Framework.MonoPointExtensions.Matches*
  commentId: Overload:Microsoft.Xna.Framework.MonoPointExtensions.Matches
  isExternal: true
  href: Microsoft.Xna.Framework.MonoPointExtensions.html#Microsoft.Xna.Framework.MonoPointExtensions.Matches(Microsoft.Xna.Framework.Point,SadRogue.Primitives.Point)
  name: Matches
  nameWithType: MonoPointExtensions.Matches
  fullName: Microsoft.Xna.Framework.MonoPointExtensions.Matches
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
