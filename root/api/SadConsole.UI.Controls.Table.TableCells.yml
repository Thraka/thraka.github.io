### YamlMime:ManagedReference
items:
- uid: SadConsole.UI.Controls.Table.TableCells
  commentId: T:SadConsole.UI.Controls.Table.TableCells
  id: Table.TableCells
  parent: SadConsole.UI.Controls
  children:
  - SadConsole.UI.Controls.Table.TableCells.Clear(System.Boolean)
  - SadConsole.UI.Controls.Table.TableCells.ClearContent(System.Boolean)
  - SadConsole.UI.Controls.Table.TableCells.Column(System.Int32)
  - SadConsole.UI.Controls.Table.TableCells.Column(System.Int32,System.Boolean)
  - SadConsole.UI.Controls.Table.TableCells.Count
  - SadConsole.UI.Controls.Table.TableCells.Deselect
  - SadConsole.UI.Controls.Table.TableCells.GetCell(System.Int32,System.Int32)
  - SadConsole.UI.Controls.Table.TableCells.GetEnumerator
  - SadConsole.UI.Controls.Table.TableCells.HeaderRow
  - SadConsole.UI.Controls.Table.TableCells.Item(System.Int32,System.Int32)
  - SadConsole.UI.Controls.Table.TableCells.MaxColumn
  - SadConsole.UI.Controls.Table.TableCells.MaxRow
  - SadConsole.UI.Controls.Table.TableCells.Remove(System.Int32,System.Int32)
  - SadConsole.UI.Controls.Table.TableCells.Row(System.Int32)
  - SadConsole.UI.Controls.Table.TableCells.Row(System.Int32,System.Boolean)
  - SadConsole.UI.Controls.Table.TableCells.Select(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: Table.TableCells
  nameWithType: Table.TableCells
  fullName: SadConsole.UI.Controls.Table.TableCells
  type: Class
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: A collection class that contains all the cells of the <xref href="SadConsole.UI.Controls.Table" data-throw-if-not-resolved="false"></xref> and methods to modify them.
  example: []
  syntax:
    content: 'public sealed class Table.TableCells : IEnumerable<Table.Cell>, IEnumerable'
    content.vb: Public NotInheritable Class Table.TableCells Implements IEnumerable(Of Table.Cell), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.GetType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  extensionMethods:
  - SadConsole.UI.Controls.Table.TableCells.SadConsole.UI.Controls.TableExtensions.Column(System.Int32[])
  - SadConsole.UI.Controls.Table.TableCells.SadConsole.UI.Controls.TableExtensions.Range(System.Int32,System.Int32,System.Int32,System.Int32)
  - SadConsole.UI.Controls.Table.TableCells.SadConsole.UI.Controls.TableExtensions.Row(System.Int32[])
  - System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}.SadConsole.UI.Controls.TableExtensions.ForEach(System.Action{SadConsole.UI.Controls.Table.Cell})
  - System.Object.SadConsole.ExtensionsSystem.GetDebuggerDisplayValue
- uid: SadConsole.UI.Controls.Table.TableCells.Row(System.Int32,System.Boolean)
  commentId: M:SadConsole.UI.Controls.Table.TableCells.Row(System.Int32,System.Boolean)
  id: Row(System.Int32,System.Boolean)
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: Row(int, bool)
  nameWithType: Table.TableCells.Row(int, bool)
  fullName: SadConsole.UI.Controls.Table.TableCells.Row(int, bool)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Sets the visibility of the entire row
  example: []
  syntax:
    content: public void Row(int row, bool visible)
    parameters:
    - id: row
      type: System.Int32
      description: ''
    - id: visible
      type: System.Boolean
      description: ''
    content.vb: Public Sub Row(row As Integer, visible As Boolean)
  overload: SadConsole.UI.Controls.Table.TableCells.Row*
  nameWithType.vb: Table.TableCells.Row(Integer, Boolean)
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.Row(Integer, Boolean)
  name.vb: Row(Integer, Boolean)
- uid: SadConsole.UI.Controls.Table.TableCells.Column(System.Int32,System.Boolean)
  commentId: M:SadConsole.UI.Controls.Table.TableCells.Column(System.Int32,System.Boolean)
  id: Column(System.Int32,System.Boolean)
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: Column(int, bool)
  nameWithType: Table.TableCells.Column(int, bool)
  fullName: SadConsole.UI.Controls.Table.TableCells.Column(int, bool)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Sets the visibility of the entire column
  example: []
  syntax:
    content: public void Column(int column, bool visible)
    parameters:
    - id: column
      type: System.Int32
      description: ''
    - id: visible
      type: System.Boolean
      description: ''
    content.vb: Public Sub Column(column As Integer, visible As Boolean)
  overload: SadConsole.UI.Controls.Table.TableCells.Column*
  nameWithType.vb: Table.TableCells.Column(Integer, Boolean)
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.Column(Integer, Boolean)
  name.vb: Column(Integer, Boolean)
- uid: SadConsole.UI.Controls.Table.TableCells.Column(System.Int32)
  commentId: M:SadConsole.UI.Controls.Table.TableCells.Column(System.Int32)
  id: Column(System.Int32)
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: Column(int)
  nameWithType: Table.TableCells.Column(int)
  fullName: SadConsole.UI.Controls.Table.TableCells.Column(int)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Get the layout for the given column
  example: []
  syntax:
    content: public Table.TableCells.Layout Column(int column)
    parameters:
    - id: column
      type: System.Int32
      description: ''
    return:
      type: SadConsole.UI.Controls.Table.TableCells.Layout
      description: ''
    content.vb: Public Function Column(column As Integer) As Table.TableCells.Layout
  overload: SadConsole.UI.Controls.Table.TableCells.Column*
  nameWithType.vb: Table.TableCells.Column(Integer)
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.Column(Integer)
  name.vb: Column(Integer)
- uid: SadConsole.UI.Controls.Table.TableCells.Row(System.Int32)
  commentId: M:SadConsole.UI.Controls.Table.TableCells.Row(System.Int32)
  id: Row(System.Int32)
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: Row(int)
  nameWithType: Table.TableCells.Row(int)
  fullName: SadConsole.UI.Controls.Table.TableCells.Row(int)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Get the layout for the given row
  example: []
  syntax:
    content: public Table.TableCells.Layout Row(int row)
    parameters:
    - id: row
      type: System.Int32
      description: ''
    return:
      type: SadConsole.UI.Controls.Table.TableCells.Layout
      description: ''
    content.vb: Public Function Row(row As Integer) As Table.TableCells.Layout
  overload: SadConsole.UI.Controls.Table.TableCells.Row*
  nameWithType.vb: Table.TableCells.Row(Integer)
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.Row(Integer)
  name.vb: Row(Integer)
- uid: SadConsole.UI.Controls.Table.TableCells.GetCell(System.Int32,System.Int32)
  commentId: M:SadConsole.UI.Controls.Table.TableCells.GetCell(System.Int32,System.Int32)
  id: GetCell(System.Int32,System.Int32)
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: GetCell(int, int)
  nameWithType: Table.TableCells.GetCell(int, int)
  fullName: SadConsole.UI.Controls.Table.TableCells.GetCell(int, int)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Gets the cell at the given row and col
  example: []
  syntax:
    content: public Table.Cell GetCell(int row, int col)
    parameters:
    - id: row
      type: System.Int32
      description: ''
    - id: col
      type: System.Int32
      description: ''
    return:
      type: SadConsole.UI.Controls.Table.Cell
      description: ''
    content.vb: Public Function GetCell(row As Integer, col As Integer) As Table.Cell
  overload: SadConsole.UI.Controls.Table.TableCells.GetCell*
  nameWithType.vb: Table.TableCells.GetCell(Integer, Integer)
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.GetCell(Integer, Integer)
  name.vb: GetCell(Integer, Integer)
- uid: SadConsole.UI.Controls.Table.TableCells.Select(System.Int32,System.Int32)
  commentId: M:SadConsole.UI.Controls.Table.TableCells.Select(System.Int32,System.Int32)
  id: Select(System.Int32,System.Int32)
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: Select(int, int)
  nameWithType: Table.TableCells.Select(int, int)
  fullName: SadConsole.UI.Controls.Table.TableCells.Select(int, int)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Sets the specified cell as the selected cell if it exists.
  example: []
  syntax:
    content: public void Select(int row, int column)
    parameters:
    - id: row
      type: System.Int32
      description: ''
    - id: column
      type: System.Int32
      description: ''
    content.vb: Public Sub [Select](row As Integer, column As Integer)
  overload: SadConsole.UI.Controls.Table.TableCells.Select*
  nameWithType.vb: Table.TableCells.Select(Integer, Integer)
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.Select(Integer, Integer)
  name.vb: Select(Integer, Integer)
- uid: SadConsole.UI.Controls.Table.TableCells.Deselect
  commentId: M:SadConsole.UI.Controls.Table.TableCells.Deselect
  id: Deselect
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: Deselect()
  nameWithType: Table.TableCells.Deselect()
  fullName: SadConsole.UI.Controls.Table.TableCells.Deselect()
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Deselects the current selected cell.
  example: []
  syntax:
    content: public void Deselect()
    content.vb: Public Sub Deselect()
  overload: SadConsole.UI.Controls.Table.TableCells.Deselect*
- uid: SadConsole.UI.Controls.Table.TableCells.Remove(System.Int32,System.Int32)
  commentId: M:SadConsole.UI.Controls.Table.TableCells.Remove(System.Int32,System.Int32)
  id: Remove(System.Int32,System.Int32)
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: Remove(int, int)
  nameWithType: Table.TableCells.Remove(int, int)
  fullName: SadConsole.UI.Controls.Table.TableCells.Remove(int, int)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Removes a cell from the table.
  example: []
  syntax:
    content: public void Remove(int row, int column)
    parameters:
    - id: row
      type: System.Int32
      description: ''
    - id: column
      type: System.Int32
      description: ''
    content.vb: Public Sub Remove(row As Integer, column As Integer)
  overload: SadConsole.UI.Controls.Table.TableCells.Remove*
  nameWithType.vb: Table.TableCells.Remove(Integer, Integer)
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.Remove(Integer, Integer)
  name.vb: Remove(Integer, Integer)
- uid: SadConsole.UI.Controls.Table.TableCells.Clear(System.Boolean)
  commentId: M:SadConsole.UI.Controls.Table.TableCells.Clear(System.Boolean)
  id: Clear(System.Boolean)
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: Clear(bool)
  nameWithType: Table.TableCells.Clear(bool)
  fullName: SadConsole.UI.Controls.Table.TableCells.Clear(bool)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Resets all the cells data
  example: []
  syntax:
    content: public void Clear(bool clearLayoutOptions = true)
    parameters:
    - id: clearLayoutOptions
      type: System.Boolean
      description: ''
    content.vb: Public Sub Clear(clearLayoutOptions As Boolean = True)
  overload: SadConsole.UI.Controls.Table.TableCells.Clear*
  nameWithType.vb: Table.TableCells.Clear(Boolean)
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.Clear(Boolean)
  name.vb: Clear(Boolean)
- uid: SadConsole.UI.Controls.Table.TableCells.ClearContent(System.Boolean)
  commentId: M:SadConsole.UI.Controls.Table.TableCells.ClearContent(System.Boolean)
  id: ClearContent(System.Boolean)
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: ClearContent(bool)
  nameWithType: Table.TableCells.ClearContent(bool)
  fullName: SadConsole.UI.Controls.Table.TableCells.ClearContent(bool)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Removes all rows and columns except the header if applicable
  example: []
  syntax:
    content: public void ClearContent(bool clearLayoutOptionsForContent = true)
    parameters:
    - id: clearLayoutOptionsForContent
      type: System.Boolean
      description: ''
    content.vb: Public Sub ClearContent(clearLayoutOptionsForContent As Boolean = True)
  overload: SadConsole.UI.Controls.Table.TableCells.ClearContent*
  nameWithType.vb: Table.TableCells.ClearContent(Boolean)
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.ClearContent(Boolean)
  name.vb: ClearContent(Boolean)
- uid: SadConsole.UI.Controls.Table.TableCells.GetEnumerator
  commentId: M:SadConsole.UI.Controls.Table.TableCells.GetEnumerator
  id: GetEnumerator
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: Table.TableCells.GetEnumerator()
  fullName: SadConsole.UI.Controls.Table.TableCells.GetEnumerator()
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public IEnumerator<Table.Cell> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{SadConsole.UI.Controls.Table.Cell}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of Table.Cell)
  overload: SadConsole.UI.Controls.Table.TableCells.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}.GetEnumerator
- uid: SadConsole.UI.Controls.Table.TableCells.Item(System.Int32,System.Int32)
  commentId: P:SadConsole.UI.Controls.Table.TableCells.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: this[int, int]
  nameWithType: Table.TableCells.this[int, int]
  fullName: SadConsole.UI.Controls.Table.TableCells.this[int, int]
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Gets or creates a new cell on the specified row and column
  example: []
  syntax:
    content: public Table.Cell this[int row, int col] { get; }
    parameters:
    - id: row
      type: System.Int32
      description: ''
    - id: col
      type: System.Int32
      description: ''
    return:
      type: SadConsole.UI.Controls.Table.Cell
      description: ''
    content.vb: Public ReadOnly Default Property this[](row As Integer, col As Integer) As Table.Cell
  overload: SadConsole.UI.Controls.Table.TableCells.Item*
  nameWithType.vb: Table.TableCells.this[](Integer, Integer)
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.this[](Integer, Integer)
  name.vb: this[](Integer, Integer)
- uid: SadConsole.UI.Controls.Table.TableCells.MaxRow
  commentId: P:SadConsole.UI.Controls.Table.TableCells.MaxRow
  id: MaxRow
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: MaxRow
  nameWithType: Table.TableCells.MaxRow
  fullName: SadConsole.UI.Controls.Table.TableCells.MaxRow
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The maximum row in the table.
  example: []
  syntax:
    content: public int MaxRow { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxRow As Integer
  overload: SadConsole.UI.Controls.Table.TableCells.MaxRow*
- uid: SadConsole.UI.Controls.Table.TableCells.MaxColumn
  commentId: P:SadConsole.UI.Controls.Table.TableCells.MaxColumn
  id: MaxColumn
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: MaxColumn
  nameWithType: Table.TableCells.MaxColumn
  fullName: SadConsole.UI.Controls.Table.TableCells.MaxColumn
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The maximum column in the table.
  example: []
  syntax:
    content: public int MaxColumn { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxColumn As Integer
  overload: SadConsole.UI.Controls.Table.TableCells.MaxColumn*
- uid: SadConsole.UI.Controls.Table.TableCells.HeaderRow
  commentId: P:SadConsole.UI.Controls.Table.TableCells.HeaderRow
  id: HeaderRow
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: HeaderRow
  nameWithType: Table.TableCells.HeaderRow
  fullName: SadConsole.UI.Controls.Table.TableCells.HeaderRow
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: True if row 0 should be the header of the table, and remain at the top when vertical scrolling.
  example: []
  syntax:
    content: public bool HeaderRow { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HeaderRow As Boolean
  overload: SadConsole.UI.Controls.Table.TableCells.HeaderRow*
- uid: SadConsole.UI.Controls.Table.TableCells.Count
  commentId: P:SadConsole.UI.Controls.Table.TableCells.Count
  id: Count
  parent: SadConsole.UI.Controls.Table.TableCells
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Table.TableCells.Count
  fullName: SadConsole.UI.Controls.Table.TableCells.Count
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The amount of cells currently in the table.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: SadConsole.UI.Controls.Table.TableCells.Count*
references:
- uid: SadConsole.UI.Controls.Table
  commentId: T:SadConsole.UI.Controls.Table
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table
  nameWithType: Table
  fullName: SadConsole.UI.Controls.Table
- uid: SadConsole.UI.Controls
  commentId: N:SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.html
  name: SadConsole.UI.Controls
  nameWithType: SadConsole.UI.Controls
  fullName: SadConsole.UI.Controls
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}
  commentId: T:System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Table.Cell>
  nameWithType: IEnumerable<Table.Cell>
  fullName: System.Collections.Generic.IEnumerable<SadConsole.UI.Controls.Table.Cell>
  nameWithType.vb: IEnumerable(Of Table.Cell)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.UI.Controls.Table.Cell)
  name.vb: IEnumerable(Of Table.Cell)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: SadConsole.UI.Controls.Table.TableCells.SadConsole.UI.Controls.TableExtensions.Column(System.Int32[])
  commentId: M:SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  parent: SadConsole.UI.Controls.TableExtensions
  definition: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Column_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  name: Column(TableCells, params int[])
  nameWithType: TableExtensions.Column(Table.TableCells, params int[])
  fullName: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells, params int[])
  nameWithType.vb: TableExtensions.Column(Table.TableCells, ParamArray Integer())
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells, ParamArray Integer())
  name.vb: Column(TableCells, ParamArray Integer())
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
    name: Column
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Column_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
    name: Column
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Column_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: SadConsole.UI.Controls.Table.TableCells.SadConsole.UI.Controls.TableExtensions.Range(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: SadConsole.UI.Controls.TableExtensions
  definition: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Range_SadConsole_UI_Controls_Table_TableCells_System_Int32_System_Int32_System_Int32_System_Int32_
  name: Range(TableCells, int, int, int, int)
  nameWithType: TableExtensions.Range(Table.TableCells, int, int, int, int)
  fullName: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells, int, int, int, int)
  nameWithType.vb: TableExtensions.Range(Table.TableCells, Integer, Integer, Integer, Integer)
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells, Integer, Integer, Integer, Integer)
  name.vb: Range(TableCells, Integer, Integer, Integer, Integer)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
    name: Range
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Range_SadConsole_UI_Controls_Table_TableCells_System_Int32_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
    name: Range
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Range_SadConsole_UI_Controls_Table_TableCells_System_Int32_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SadConsole.UI.Controls.Table.TableCells.SadConsole.UI.Controls.TableExtensions.Row(System.Int32[])
  commentId: M:SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  parent: SadConsole.UI.Controls.TableExtensions
  definition: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Row_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  name: Row(TableCells, params int[])
  nameWithType: TableExtensions.Row(Table.TableCells, params int[])
  fullName: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells, params int[])
  nameWithType.vb: TableExtensions.Row(Table.TableCells, ParamArray Integer())
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells, ParamArray Integer())
  name.vb: Row(TableCells, ParamArray Integer())
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
    name: Row
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Row_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
    name: Row
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Row_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}.SadConsole.UI.Controls.TableExtensions.ForEach(System.Action{SadConsole.UI.Controls.Table.Cell})
  commentId: M:SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
  parent: SadConsole.UI.Controls.TableExtensions
  definition: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_ForEach_System_Collections_Generic_IEnumerable_SadConsole_UI_Controls_Table_Cell__System_Action_SadConsole_UI_Controls_Table_Cell__
  name: ForEach(IEnumerable<Cell>, Action<Cell>)
  nameWithType: TableExtensions.ForEach(IEnumerable<Table.Cell>, Action<Table.Cell>)
  fullName: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable<SadConsole.UI.Controls.Table.Cell>, System.Action<SadConsole.UI.Controls.Table.Cell>)
  nameWithType.vb: TableExtensions.ForEach(IEnumerable(Of Table.Cell), Action(Of Table.Cell))
  fullName.vb: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable(Of SadConsole.UI.Controls.Table.Cell), System.Action(Of SadConsole.UI.Controls.Table.Cell))
  name.vb: ForEach(IEnumerable(Of Cell), Action(Of Cell))
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
    name: ForEach
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_ForEach_System_Collections_Generic_IEnumerable_SadConsole_UI_Controls_Table_Cell__System_Action_SadConsole_UI_Controls_Table_Cell__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
    name: ForEach
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_ForEach_System_Collections_Generic_IEnumerable_SadConsole_UI_Controls_Table_Cell__System_Action_SadConsole_UI_Controls_Table_Cell__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  - name: )
- uid: System.Object.SadConsole.ExtensionsSystem.GetDebuggerDisplayValue
  commentId: M:SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  parent: SadConsole.ExtensionsSystem
  definition: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  name: GetDebuggerDisplayValue(object)
  nameWithType: ExtensionsSystem.GetDebuggerDisplayValue(object)
  fullName: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(object)
  nameWithType.vb: ExtensionsSystem.GetDebuggerDisplayValue(Object)
  fullName.vb: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(Object)
  name.vb: GetDebuggerDisplayValue(Object)
  spec.csharp:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  commentId: M:SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Column_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  name: Column(TableCells, params int[])
  nameWithType: TableExtensions.Column(Table.TableCells, params int[])
  fullName: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells, params int[])
  nameWithType.vb: TableExtensions.Column(Table.TableCells, ParamArray Integer())
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells, ParamArray Integer())
  name.vb: Column(TableCells, ParamArray Integer())
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
    name: Column
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Column_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
    name: Column
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Column_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: SadConsole.UI.Controls.TableExtensions
  commentId: T:SadConsole.UI.Controls.TableExtensions
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html
  name: TableExtensions
  nameWithType: TableExtensions
  fullName: SadConsole.UI.Controls.TableExtensions
- uid: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Range_SadConsole_UI_Controls_Table_TableCells_System_Int32_System_Int32_System_Int32_System_Int32_
  name: Range(TableCells, int, int, int, int)
  nameWithType: TableExtensions.Range(Table.TableCells, int, int, int, int)
  fullName: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells, int, int, int, int)
  nameWithType.vb: TableExtensions.Range(Table.TableCells, Integer, Integer, Integer, Integer)
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells, Integer, Integer, Integer, Integer)
  name.vb: Range(TableCells, Integer, Integer, Integer, Integer)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
    name: Range
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Range_SadConsole_UI_Controls_Table_TableCells_System_Int32_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
    name: Range
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Range_SadConsole_UI_Controls_Table_TableCells_System_Int32_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  commentId: M:SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Row_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  name: Row(TableCells, params int[])
  nameWithType: TableExtensions.Row(Table.TableCells, params int[])
  fullName: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells, params int[])
  nameWithType.vb: TableExtensions.Row(Table.TableCells, ParamArray Integer())
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells, ParamArray Integer())
  name.vb: Row(TableCells, ParamArray Integer())
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
    name: Row
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Row_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
    name: Row
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_Row_SadConsole_UI_Controls_Table_TableCells_System_Int32___
  - name: (
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
  commentId: M:SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_ForEach_System_Collections_Generic_IEnumerable_SadConsole_UI_Controls_Table_Cell__System_Action_SadConsole_UI_Controls_Table_Cell__
  name: ForEach(IEnumerable<Cell>, Action<Cell>)
  nameWithType: TableExtensions.ForEach(IEnumerable<Table.Cell>, Action<Table.Cell>)
  fullName: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable<SadConsole.UI.Controls.Table.Cell>, System.Action<SadConsole.UI.Controls.Table.Cell>)
  nameWithType.vb: TableExtensions.ForEach(IEnumerable(Of Table.Cell), Action(Of Table.Cell))
  fullName.vb: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable(Of SadConsole.UI.Controls.Table.Cell), System.Action(Of SadConsole.UI.Controls.Table.Cell))
  name.vb: ForEach(IEnumerable(Of Cell), Action(Of Cell))
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
    name: ForEach
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_ForEach_System_Collections_Generic_IEnumerable_SadConsole_UI_Controls_Table_Cell__System_Action_SadConsole_UI_Controls_Table_Cell__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
    name: ForEach
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole_UI_Controls_TableExtensions_ForEach_System_Collections_Generic_IEnumerable_SadConsole_UI_Controls_Table_Cell__System_Action_SadConsole_UI_Controls_Table_Cell__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  - name: )
- uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  commentId: M:SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  isExternal: true
  href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  name: GetDebuggerDisplayValue(object)
  nameWithType: ExtensionsSystem.GetDebuggerDisplayValue(object)
  fullName: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(object)
  nameWithType.vb: ExtensionsSystem.GetDebuggerDisplayValue(Object)
  fullName.vb: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(Object)
  name.vb: GetDebuggerDisplayValue(Object)
  spec.csharp:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: SadConsole.ExtensionsSystem
  commentId: T:SadConsole.ExtensionsSystem
  parent: SadConsole
  isExternal: true
  href: SadConsole.ExtensionsSystem.html
  name: ExtensionsSystem
  nameWithType: ExtensionsSystem
  fullName: SadConsole.ExtensionsSystem
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: SadConsole.UI.Controls.Table.TableCells.Row*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.Row
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_Row_System_Int32_System_Boolean_
  name: Row
  nameWithType: Table.TableCells.Row
  fullName: SadConsole.UI.Controls.Table.TableCells.Row
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.UI.Controls.Table.TableCells.Column*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.Column
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_Column_System_Int32_System_Boolean_
  name: Column
  nameWithType: Table.TableCells.Column
  fullName: SadConsole.UI.Controls.Table.TableCells.Column
- uid: SadConsole.UI.Controls.Table.TableCells.Layout
  commentId: T:SadConsole.UI.Controls.Table.TableCells.Layout
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.TableCells.Layout
  nameWithType: Table.TableCells.Layout
  fullName: SadConsole.UI.Controls.Table.TableCells.Layout
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells.Layout
    name: Layout
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.Layout.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells.Layout
    name: Layout
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.Layout.html
- uid: SadConsole.UI.Controls.Table.TableCells.GetCell*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.GetCell
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_GetCell_System_Int32_System_Int32_
  name: GetCell
  nameWithType: Table.TableCells.GetCell
  fullName: SadConsole.UI.Controls.Table.TableCells.GetCell
- uid: SadConsole.UI.Controls.Table.Cell
  commentId: T:SadConsole.UI.Controls.Table.Cell
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.Cell
  nameWithType: Table.Cell
  fullName: SadConsole.UI.Controls.Table.Cell
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
- uid: SadConsole.UI.Controls.Table.TableCells.Select*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.Select
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_Select_System_Int32_System_Int32_
  name: Select
  nameWithType: Table.TableCells.Select
  fullName: SadConsole.UI.Controls.Table.TableCells.Select
- uid: SadConsole.UI.Controls.Table.TableCells.Deselect*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.Deselect
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_Deselect
  name: Deselect
  nameWithType: Table.TableCells.Deselect
  fullName: SadConsole.UI.Controls.Table.TableCells.Deselect
- uid: SadConsole.UI.Controls.Table.TableCells.Remove*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.Remove
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_Remove_System_Int32_System_Int32_
  name: Remove
  nameWithType: Table.TableCells.Remove
  fullName: SadConsole.UI.Controls.Table.TableCells.Remove
- uid: SadConsole.UI.Controls.Table.TableCells.Clear*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.Clear
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_Clear_System_Boolean_
  name: Clear
  nameWithType: Table.TableCells.Clear
  fullName: SadConsole.UI.Controls.Table.TableCells.Clear
- uid: SadConsole.UI.Controls.Table.TableCells.ClearContent*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.ClearContent
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_ClearContent_System_Boolean_
  name: ClearContent
  nameWithType: Table.TableCells.ClearContent
  fullName: SadConsole.UI.Controls.Table.TableCells.ClearContent
- uid: SadConsole.UI.Controls.Table.TableCells.GetEnumerator*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.GetEnumerator
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_GetEnumerator
  name: GetEnumerator
  nameWithType: Table.TableCells.GetEnumerator
  fullName: SadConsole.UI.Controls.Table.TableCells.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<Table.Cell>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<SadConsole.UI.Controls.Table.Cell>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Table.Cell).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.UI.Controls.Table.Cell).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{SadConsole.UI.Controls.Table.Cell}
  commentId: T:System.Collections.Generic.IEnumerator{SadConsole.UI.Controls.Table.Cell}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<Table.Cell>
  nameWithType: IEnumerator<Table.Cell>
  fullName: System.Collections.Generic.IEnumerator<SadConsole.UI.Controls.Table.Cell>
  nameWithType.vb: IEnumerator(Of Table.Cell)
  fullName.vb: System.Collections.Generic.IEnumerator(Of SadConsole.UI.Controls.Table.Cell)
  name.vb: IEnumerator(Of Table.Cell)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.UI.Controls.Table.TableCells.Item*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.Item
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_Item_System_Int32_System_Int32_
  name: this
  nameWithType: Table.TableCells.this
  fullName: SadConsole.UI.Controls.Table.TableCells.this
  nameWithType.vb: Table.TableCells.this[]
  fullName.vb: SadConsole.UI.Controls.Table.TableCells.this[]
  name.vb: this[]
- uid: SadConsole.UI.Controls.Table.TableCells.MaxRow*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.MaxRow
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_MaxRow
  name: MaxRow
  nameWithType: Table.TableCells.MaxRow
  fullName: SadConsole.UI.Controls.Table.TableCells.MaxRow
- uid: SadConsole.UI.Controls.Table.TableCells.MaxColumn*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.MaxColumn
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_MaxColumn
  name: MaxColumn
  nameWithType: Table.TableCells.MaxColumn
  fullName: SadConsole.UI.Controls.Table.TableCells.MaxColumn
- uid: SadConsole.UI.Controls.Table.TableCells.HeaderRow*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.HeaderRow
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_HeaderRow
  name: HeaderRow
  nameWithType: Table.TableCells.HeaderRow
  fullName: SadConsole.UI.Controls.Table.TableCells.HeaderRow
- uid: SadConsole.UI.Controls.Table.TableCells.Count*
  commentId: Overload:SadConsole.UI.Controls.Table.TableCells.Count
  isExternal: true
  href: SadConsole.UI.Controls.Table.TableCells.html#SadConsole_UI_Controls_Table_TableCells_Count
  name: Count
  nameWithType: Table.TableCells.Count
  fullName: SadConsole.UI.Controls.Table.TableCells.Count
