### YamlMime:ManagedReference
items:
- uid: SadConsole.StringParser.IParser
  commentId: T:SadConsole.StringParser.IParser
  id: IParser
  parent: SadConsole.StringParser
  children:
  - SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  langs:
  - csharp
  - vb
  name: IParser
  nameWithType: IParser
  fullName: SadConsole.StringParser.IParser
  type: Interface
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  syntax:
    content: public interface IParser
    content.vb: Public Interface IParser
- uid: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  commentId: M:SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  id: Parse(System.ReadOnlySpan{System.Char},System.Int32,SadConsole.ICellSurface,SadConsole.StringParser.ParseCommandStacks)
  parent: SadConsole.StringParser.IParser
  langs:
  - csharp
  - vb
  name: Parse(ReadOnlySpan<char>, int, ICellSurface?, ParseCommandStacks?)
  nameWithType: IParser.Parse(ReadOnlySpan<char>, int, ICellSurface?, ParseCommandStacks?)
  fullName: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan<char>, int, SadConsole.ICellSurface?, SadConsole.StringParser.ParseCommandStacks?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  syntax:
    content: ColoredString Parse(ReadOnlySpan<char> value, int surfaceIndex = -1, ICellSurface? surface = null, ParseCommandStacks? initialBehaviors = null)
    parameters:
    - id: value
      type: System.ReadOnlySpan{System.Char}
    - id: surfaceIndex
      type: System.Int32
    - id: surface
      type: SadConsole.ICellSurface
    - id: initialBehaviors
      type: SadConsole.StringParser.ParseCommandStacks
    return:
      type: SadConsole.ColoredString
    content.vb: Function Parse(value As ReadOnlySpan(Of Char), surfaceIndex As Integer = -1, surface As ICellSurface = Nothing, initialBehaviors As ParseCommandStacks = Nothing) As ColoredString
  overload: SadConsole.StringParser.IParser.Parse*
  nameWithType.vb: IParser.Parse(ReadOnlySpan(Of Char), Integer, ICellSurface, ParseCommandStacks)
  fullName.vb: SadConsole.StringParser.IParser.Parse(System.ReadOnlySpan(Of Char), Integer, SadConsole.ICellSurface, SadConsole.StringParser.ParseCommandStacks)
  name.vb: Parse(ReadOnlySpan(Of Char), Integer, ICellSurface, ParseCommandStacks)
references:
- uid: SadConsole.StringParser
  commentId: N:SadConsole.StringParser
  isExternal: true
  href: SadConsole.html
  name: SadConsole.StringParser
  nameWithType: SadConsole.StringParser
  fullName: SadConsole.StringParser
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.StringParser
    name: StringParser
    isExternal: true
    href: SadConsole.StringParser.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.StringParser
    name: StringParser
    isExternal: true
    href: SadConsole.StringParser.html
- uid: SadConsole.StringParser.IParser.Parse*
  commentId: Overload:SadConsole.StringParser.IParser.Parse
  isExternal: true
  href: SadConsole.StringParser.IParser.html#SadConsole_StringParser_IParser_Parse_System_ReadOnlySpan_System_Char__System_Int32_SadConsole_ICellSurface_SadConsole_StringParser_ParseCommandStacks_
  name: Parse
  nameWithType: IParser.Parse
  fullName: SadConsole.StringParser.IParser.Parse
- uid: System.ReadOnlySpan{System.Char}
  commentId: T:System.ReadOnlySpan{System.Char}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<char>
  nameWithType: ReadOnlySpan<char>
  fullName: System.ReadOnlySpan<char>
  nameWithType.vb: ReadOnlySpan(Of Char)
  fullName.vb: System.ReadOnlySpan(Of Char)
  name.vb: ReadOnlySpan(Of Char)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SadConsole.ICellSurface
  commentId: T:SadConsole.ICellSurface
  parent: SadConsole
  isExternal: true
  href: SadConsole.ICellSurface.html
  name: ICellSurface
  nameWithType: ICellSurface
  fullName: SadConsole.ICellSurface
- uid: SadConsole.StringParser.ParseCommandStacks
  commentId: T:SadConsole.StringParser.ParseCommandStacks
  parent: SadConsole.StringParser
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html
  name: ParseCommandStacks
  nameWithType: ParseCommandStacks
  fullName: SadConsole.StringParser.ParseCommandStacks
- uid: SadConsole.ColoredString
  commentId: T:SadConsole.ColoredString
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredString.html
  name: ColoredString
  nameWithType: ColoredString
  fullName: SadConsole.ColoredString
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
