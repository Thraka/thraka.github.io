### YamlMime:ManagedReference
items:
- uid: SadConsole.Algorithms.NodeConnections`1
  commentId: T:SadConsole.Algorithms.NodeConnections`1
  id: Algorithms.NodeConnections`1
  parent: SadConsole
  children:
  - SadConsole.Algorithms.NodeConnections`1.#ctor
  - SadConsole.Algorithms.NodeConnections`1.#ctor(`0,`0,`0,`0,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - SadConsole.Algorithms.NodeConnections`1.East
  - SadConsole.Algorithms.NodeConnections`1.HasEast
  - SadConsole.Algorithms.NodeConnections`1.HasNorth
  - SadConsole.Algorithms.NodeConnections`1.HasSouth
  - SadConsole.Algorithms.NodeConnections`1.HasWest
  - SadConsole.Algorithms.NodeConnections`1.North
  - SadConsole.Algorithms.NodeConnections`1.South
  - SadConsole.Algorithms.NodeConnections`1.West
  langs:
  - csharp
  - vb
  name: Algorithms.NodeConnections<TNode>
  nameWithType: Algorithms.NodeConnections<TNode>
  fullName: SadConsole.Algorithms.NodeConnections<TNode>
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Describes the 4-way connections of a node.
  example: []
  syntax:
    content: public class Algorithms.NodeConnections<TNode>
    typeParameters:
    - id: TNode
      description: The type of object the node and its connections are.
    content.vb: Public Class Algorithms.NodeConnections(Of TNode)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  nameWithType.vb: Algorithms.NodeConnections(Of TNode)
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode)
  name.vb: Algorithms.NodeConnections(Of TNode)
- uid: SadConsole.Algorithms.NodeConnections`1.West
  commentId: F:SadConsole.Algorithms.NodeConnections`1.West
  id: West
  parent: SadConsole.Algorithms.NodeConnections`1
  langs:
  - csharp
  - vb
  name: West
  nameWithType: Algorithms.NodeConnections<TNode>.West
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.West
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: The west or left node.
  example: []
  syntax:
    content: public TNode? West
    return:
      type: '{TNode}'
    content.vb: Public West As TNode
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).West
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).West
- uid: SadConsole.Algorithms.NodeConnections`1.East
  commentId: F:SadConsole.Algorithms.NodeConnections`1.East
  id: East
  parent: SadConsole.Algorithms.NodeConnections`1
  langs:
  - csharp
  - vb
  name: East
  nameWithType: Algorithms.NodeConnections<TNode>.East
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.East
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: The east or right node.
  example: []
  syntax:
    content: public TNode? East
    return:
      type: '{TNode}'
    content.vb: Public East As TNode
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).East
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).East
- uid: SadConsole.Algorithms.NodeConnections`1.North
  commentId: F:SadConsole.Algorithms.NodeConnections`1.North
  id: North
  parent: SadConsole.Algorithms.NodeConnections`1
  langs:
  - csharp
  - vb
  name: North
  nameWithType: Algorithms.NodeConnections<TNode>.North
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.North
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: The north or up node.
  example: []
  syntax:
    content: public TNode? North
    return:
      type: '{TNode}'
    content.vb: Public North As TNode
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).North
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).North
- uid: SadConsole.Algorithms.NodeConnections`1.South
  commentId: F:SadConsole.Algorithms.NodeConnections`1.South
  id: South
  parent: SadConsole.Algorithms.NodeConnections`1
  langs:
  - csharp
  - vb
  name: South
  nameWithType: Algorithms.NodeConnections<TNode>.South
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.South
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: The south or down node.
  example: []
  syntax:
    content: public TNode? South
    return:
      type: '{TNode}'
    content.vb: Public South As TNode
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).South
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).South
- uid: SadConsole.Algorithms.NodeConnections`1.HasWest
  commentId: F:SadConsole.Algorithms.NodeConnections`1.HasWest
  id: HasWest
  parent: SadConsole.Algorithms.NodeConnections`1
  langs:
  - csharp
  - vb
  name: HasWest
  nameWithType: Algorithms.NodeConnections<TNode>.HasWest
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.HasWest
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> indicates the <xref href="SadConsole.Algorithms.NodeConnections%601.West" data-throw-if-not-resolved="false"></xref> connection is valid; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool HasWest
    return:
      type: System.Boolean
    content.vb: Public HasWest As Boolean
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).HasWest
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).HasWest
- uid: SadConsole.Algorithms.NodeConnections`1.HasEast
  commentId: F:SadConsole.Algorithms.NodeConnections`1.HasEast
  id: HasEast
  parent: SadConsole.Algorithms.NodeConnections`1
  langs:
  - csharp
  - vb
  name: HasEast
  nameWithType: Algorithms.NodeConnections<TNode>.HasEast
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.HasEast
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> indicates the <xref href="SadConsole.Algorithms.NodeConnections%601.East" data-throw-if-not-resolved="false"></xref> connection is valid; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool HasEast
    return:
      type: System.Boolean
    content.vb: Public HasEast As Boolean
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).HasEast
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).HasEast
- uid: SadConsole.Algorithms.NodeConnections`1.HasNorth
  commentId: F:SadConsole.Algorithms.NodeConnections`1.HasNorth
  id: HasNorth
  parent: SadConsole.Algorithms.NodeConnections`1
  langs:
  - csharp
  - vb
  name: HasNorth
  nameWithType: Algorithms.NodeConnections<TNode>.HasNorth
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.HasNorth
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> indicates the <xref href="SadConsole.Algorithms.NodeConnections%601.North" data-throw-if-not-resolved="false"></xref> connection is valid; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool HasNorth
    return:
      type: System.Boolean
    content.vb: Public HasNorth As Boolean
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).HasNorth
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).HasNorth
- uid: SadConsole.Algorithms.NodeConnections`1.HasSouth
  commentId: F:SadConsole.Algorithms.NodeConnections`1.HasSouth
  id: HasSouth
  parent: SadConsole.Algorithms.NodeConnections`1
  langs:
  - csharp
  - vb
  name: HasSouth
  nameWithType: Algorithms.NodeConnections<TNode>.HasSouth
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.HasSouth
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> indicates the <xref href="SadConsole.Algorithms.NodeConnections%601.South" data-throw-if-not-resolved="false"></xref> connection is valid; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool HasSouth
    return:
      type: System.Boolean
    content.vb: Public HasSouth As Boolean
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).HasSouth
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).HasSouth
- uid: SadConsole.Algorithms.NodeConnections`1.#ctor(`0,`0,`0,`0,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:SadConsole.Algorithms.NodeConnections`1.#ctor(`0,`0,`0,`0,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(`0,`0,`0,`0,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: SadConsole.Algorithms.NodeConnections`1
  langs:
  - csharp
  - vb
  name: NodeConnections(TNode, TNode, TNode, TNode, bool, bool, bool, bool)
  nameWithType: Algorithms.NodeConnections<TNode>.NodeConnections(TNode, TNode, TNode, TNode, bool, bool, bool, bool)
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.NodeConnections(TNode, TNode, TNode, TNode, bool, bool, bool, bool)
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a new instance of this object with the specified connections.
  example: []
  syntax:
    content: public NodeConnections(TNode west, TNode east, TNode north, TNode south, bool isWest, bool isEast, bool isNorth, bool isSouth)
    parameters:
    - id: west
      type: '{TNode}'
      description: The west connection.
    - id: east
      type: '{TNode}'
      description: The east connection.
    - id: north
      type: '{TNode}'
      description: The north connection.
    - id: south
      type: '{TNode}'
      description: The south connection.
    - id: isWest
      type: System.Boolean
      description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> indicates the <xref href="SadConsole.Algorithms.NodeConnections%601.West" data-throw-if-not-resolved="false"></xref> connection is valid; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    - id: isEast
      type: System.Boolean
      description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> indicates the <xref href="SadConsole.Algorithms.NodeConnections%601.East" data-throw-if-not-resolved="false"></xref> connection is valid; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    - id: isNorth
      type: System.Boolean
      description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> indicates the <xref href="SadConsole.Algorithms.NodeConnections%601.North" data-throw-if-not-resolved="false"></xref> connection is valid; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    - id: isSouth
      type: System.Boolean
      description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> indicates the <xref href="SadConsole.Algorithms.NodeConnections%601.South" data-throw-if-not-resolved="false"></xref> connection is valid; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Sub New(west As TNode, east As TNode, north As TNode, south As TNode, isWest As Boolean, isEast As Boolean, isNorth As Boolean, isSouth As Boolean)
  overload: SadConsole.Algorithms.NodeConnections`1.#ctor*
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).New(TNode, TNode, TNode, TNode, Boolean, Boolean, Boolean, Boolean)
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).New(TNode, TNode, TNode, TNode, Boolean, Boolean, Boolean, Boolean)
  name.vb: New(TNode, TNode, TNode, TNode, Boolean, Boolean, Boolean, Boolean)
- uid: SadConsole.Algorithms.NodeConnections`1.#ctor
  commentId: M:SadConsole.Algorithms.NodeConnections`1.#ctor
  id: '#ctor'
  parent: SadConsole.Algorithms.NodeConnections`1
  langs:
  - csharp
  - vb
  name: NodeConnections()
  nameWithType: Algorithms.NodeConnections<TNode>.NodeConnections()
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.NodeConnections()
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a new instance of this object with all connections set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: public NodeConnections()
    content.vb: Public Sub New()
  overload: SadConsole.Algorithms.NodeConnections`1.#ctor*
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).New()
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).New()
  name.vb: New()
references:
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: '{TNode}'
  commentId: '!:TNode'
  definition: TNode
  name: TNode
  nameWithType: TNode
  fullName: TNode
- uid: TNode
  name: TNode
  nameWithType: TNode
  fullName: TNode
- uid: SadConsole.Algorithms.NodeConnections`1.West
  commentId: F:SadConsole.Algorithms.NodeConnections`1.West
  isExternal: true
  href: SadConsole.Algorithms.NodeConnections-1.html#SadConsole_Algorithms_NodeConnections_1_West
  name: West
  nameWithType: Algorithms.NodeConnections<TNode>.West
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.West
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).West
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).West
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.Algorithms.NodeConnections`1.East
  commentId: F:SadConsole.Algorithms.NodeConnections`1.East
  isExternal: true
  href: SadConsole.Algorithms.NodeConnections-1.html#SadConsole_Algorithms_NodeConnections_1_East
  name: East
  nameWithType: Algorithms.NodeConnections<TNode>.East
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.East
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).East
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).East
- uid: SadConsole.Algorithms.NodeConnections`1.North
  commentId: F:SadConsole.Algorithms.NodeConnections`1.North
  isExternal: true
  href: SadConsole.Algorithms.NodeConnections-1.html#SadConsole_Algorithms_NodeConnections_1_North
  name: North
  nameWithType: Algorithms.NodeConnections<TNode>.North
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.North
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).North
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).North
- uid: SadConsole.Algorithms.NodeConnections`1.South
  commentId: F:SadConsole.Algorithms.NodeConnections`1.South
  isExternal: true
  href: SadConsole.Algorithms.NodeConnections-1.html#SadConsole_Algorithms_NodeConnections_1_South
  name: South
  nameWithType: Algorithms.NodeConnections<TNode>.South
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.South
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).South
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).South
- uid: SadConsole.Algorithms.NodeConnections`1.#ctor*
  commentId: Overload:SadConsole.Algorithms.NodeConnections`1.#ctor
  isExternal: true
  href: SadConsole.Algorithms.NodeConnections-1.html#SadConsole_Algorithms_NodeConnections_1__ctor__0__0__0__0_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: NodeConnections
  nameWithType: Algorithms.NodeConnections<TNode>.NodeConnections
  fullName: SadConsole.Algorithms.NodeConnections<TNode>.NodeConnections
  nameWithType.vb: Algorithms.NodeConnections(Of TNode).New
  fullName.vb: SadConsole.Algorithms.NodeConnections(Of TNode).New
  name.vb: New
