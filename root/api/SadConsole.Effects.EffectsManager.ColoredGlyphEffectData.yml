### YamlMime:ManagedReference
items:
- uid: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData
  commentId: T:SadConsole.Effects.EffectsManager.ColoredGlyphEffectData
  id: EffectsManager.ColoredGlyphEffectData
  parent: SadConsole.Effects
  children:
  - SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.#ctor(SadConsole.Effects.ICellEffect)
  - SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.CellsStates
  - SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.ContainsCell(SadConsole.ColoredGlyphBase)
  - SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.Effect
  - SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.RemoveCell(SadConsole.ColoredGlyphBase,System.Boolean)
  langs:
  - csharp
  - vb
  name: EffectsManager.ColoredGlyphEffectData
  nameWithType: EffectsManager.ColoredGlyphEffectData
  fullName: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Represents a mapping of a single effect and associated cells.
  example: []
  syntax:
    content: protected class EffectsManager.ColoredGlyphEffectData
    content.vb: Protected Class EffectsManager.ColoredGlyphEffectData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  extensionMethods:
  - System.Object.SadConsole.ExtensionsSystem.GetDebuggerDisplayValue
- uid: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.Effect
  commentId: F:SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.Effect
  id: Effect
  parent: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: EffectsManager.ColoredGlyphEffectData.Effect
  fullName: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.Effect
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: The effect.
  example: []
  syntax:
    content: public ICellEffect Effect
    return:
      type: SadConsole.Effects.ICellEffect
    content.vb: Public Effect As ICellEffect
- uid: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.CellsStates
  commentId: F:SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.CellsStates
  id: CellsStates
  parent: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData
  langs:
  - csharp
  - vb
  name: CellsStates
  nameWithType: EffectsManager.ColoredGlyphEffectData.CellsStates
  fullName: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.CellsStates
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: The cells affected by the effect.
  example: []
  syntax:
    content: public List<EffectsManager.ColoredGlyphWithState> CellsStates
    return:
      type: System.Collections.Generic.List{SadConsole.Effects.EffectsManager.ColoredGlyphWithState}
    content.vb: Public CellsStates As List(Of EffectsManager.ColoredGlyphWithState)
- uid: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.#ctor(SadConsole.Effects.ICellEffect)
  commentId: M:SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.#ctor(SadConsole.Effects.ICellEffect)
  id: '#ctor(SadConsole.Effects.ICellEffect)'
  parent: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData
  langs:
  - csharp
  - vb
  name: ColoredGlyphEffectData(ICellEffect)
  nameWithType: EffectsManager.ColoredGlyphEffectData.ColoredGlyphEffectData(ICellEffect)
  fullName: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.ColoredGlyphEffectData(SadConsole.Effects.ICellEffect)
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Creates a new instance of the cell-effect mapping.
  example: []
  syntax:
    content: public ColoredGlyphEffectData(ICellEffect effect)
    parameters:
    - id: effect
      type: SadConsole.Effects.ICellEffect
      description: The effect.
    content.vb: Public Sub New(effect As ICellEffect)
  overload: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.#ctor*
  nameWithType.vb: EffectsManager.ColoredGlyphEffectData.New(ICellEffect)
  fullName.vb: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.New(SadConsole.Effects.ICellEffect)
  name.vb: New(ICellEffect)
- uid: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.RemoveCell(SadConsole.ColoredGlyphBase,System.Boolean)
  commentId: M:SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.RemoveCell(SadConsole.ColoredGlyphBase,System.Boolean)
  id: RemoveCell(SadConsole.ColoredGlyphBase,System.Boolean)
  parent: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData
  langs:
  - csharp
  - vb
  name: RemoveCell(ColoredGlyphBase, bool)
  nameWithType: EffectsManager.ColoredGlyphEffectData.RemoveCell(ColoredGlyphBase, bool)
  fullName: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.RemoveCell(SadConsole.ColoredGlyphBase, bool)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Removes a cell by index from the effect data.
  example: []
  syntax:
    content: public void RemoveCell(ColoredGlyphBase cell, bool restoreState)
    parameters:
    - id: cell
      type: SadConsole.ColoredGlyphBase
      description: The cell.
    - id: restoreState
      type: System.Boolean
      description: If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> the cell will have its original state restored; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Sub RemoveCell(cell As ColoredGlyphBase, restoreState As Boolean)
  overload: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.RemoveCell*
  nameWithType.vb: EffectsManager.ColoredGlyphEffectData.RemoveCell(ColoredGlyphBase, Boolean)
  fullName.vb: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.RemoveCell(SadConsole.ColoredGlyphBase, Boolean)
  name.vb: RemoveCell(ColoredGlyphBase, Boolean)
- uid: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.ContainsCell(SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.ContainsCell(SadConsole.ColoredGlyphBase)
  id: ContainsCell(SadConsole.ColoredGlyphBase)
  parent: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData
  langs:
  - csharp
  - vb
  name: ContainsCell(ColoredGlyphBase)
  nameWithType: EffectsManager.ColoredGlyphEffectData.ContainsCell(ColoredGlyphBase)
  fullName: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.ContainsCell(SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the cell index is already associated with the effect; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool ContainsCell(ColoredGlyphBase cell)
    parameters:
    - id: cell
      type: SadConsole.ColoredGlyphBase
      description: The cell to check.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to indicate the cell is associated with the effect; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function ContainsCell(cell As ColoredGlyphBase) As Boolean
  overload: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.ContainsCell*
references:
- uid: SadConsole.Effects
  commentId: N:SadConsole.Effects
  isExternal: true
  href: SadConsole.html
  name: SadConsole.Effects
  nameWithType: SadConsole.Effects
  fullName: SadConsole.Effects
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.SadConsole.ExtensionsSystem.GetDebuggerDisplayValue
  commentId: M:SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  parent: SadConsole.ExtensionsSystem
  definition: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  name: GetDebuggerDisplayValue(object)
  nameWithType: ExtensionsSystem.GetDebuggerDisplayValue(object)
  fullName: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(object)
  nameWithType.vb: ExtensionsSystem.GetDebuggerDisplayValue(Object)
  fullName.vb: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(Object)
  name.vb: GetDebuggerDisplayValue(Object)
  spec.csharp:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  commentId: M:SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
  isExternal: true
  href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  name: GetDebuggerDisplayValue(object)
  nameWithType: ExtensionsSystem.GetDebuggerDisplayValue(object)
  fullName: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(object)
  nameWithType.vb: ExtensionsSystem.GetDebuggerDisplayValue(Object)
  fullName.vb: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(Object)
  name.vb: GetDebuggerDisplayValue(Object)
  spec.csharp:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: SadConsole.ExtensionsSystem.GetDebuggerDisplayValue(System.Object)
    name: GetDebuggerDisplayValue
    isExternal: true
    href: SadConsole.ExtensionsSystem.html#SadConsole_ExtensionsSystem_GetDebuggerDisplayValue_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: SadConsole.ExtensionsSystem
  commentId: T:SadConsole.ExtensionsSystem
  parent: SadConsole
  isExternal: true
  href: SadConsole.ExtensionsSystem.html
  name: ExtensionsSystem
  nameWithType: ExtensionsSystem
  fullName: SadConsole.ExtensionsSystem
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: SadConsole.Effects.ICellEffect
  commentId: T:SadConsole.Effects.ICellEffect
  parent: SadConsole.Effects
  isExternal: true
  href: SadConsole.Effects.ICellEffect.html
  name: ICellEffect
  nameWithType: ICellEffect
  fullName: SadConsole.Effects.ICellEffect
- uid: System.Collections.Generic.List{SadConsole.Effects.EffectsManager.ColoredGlyphWithState}
  commentId: T:System.Collections.Generic.List{SadConsole.Effects.EffectsManager.ColoredGlyphWithState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<EffectsManager.ColoredGlyphWithState>
  nameWithType: List<EffectsManager.ColoredGlyphWithState>
  fullName: System.Collections.Generic.List<SadConsole.Effects.EffectsManager.ColoredGlyphWithState>
  nameWithType.vb: List(Of EffectsManager.ColoredGlyphWithState)
  fullName.vb: System.Collections.Generic.List(Of SadConsole.Effects.EffectsManager.ColoredGlyphWithState)
  name.vb: List(Of EffectsManager.ColoredGlyphWithState)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SadConsole.Effects.EffectsManager
    name: EffectsManager
    isExternal: true
    href: SadConsole.Effects.EffectsManager.html
  - name: .
  - uid: SadConsole.Effects.EffectsManager.ColoredGlyphWithState
    name: ColoredGlyphWithState
    isExternal: true
    href: SadConsole.Effects.EffectsManager.ColoredGlyphWithState.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Effects.EffectsManager
    name: EffectsManager
    isExternal: true
    href: SadConsole.Effects.EffectsManager.html
  - name: .
  - uid: SadConsole.Effects.EffectsManager.ColoredGlyphWithState
    name: ColoredGlyphWithState
    isExternal: true
    href: SadConsole.Effects.EffectsManager.ColoredGlyphWithState.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.#ctor*
  commentId: Overload:SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.#ctor
  isExternal: true
  href: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.html#SadConsole_Effects_EffectsManager_ColoredGlyphEffectData__ctor_SadConsole_Effects_ICellEffect_
  name: ColoredGlyphEffectData
  nameWithType: EffectsManager.ColoredGlyphEffectData.ColoredGlyphEffectData
  fullName: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.ColoredGlyphEffectData
  nameWithType.vb: EffectsManager.ColoredGlyphEffectData.New
  fullName.vb: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.New
  name.vb: New
- uid: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.RemoveCell*
  commentId: Overload:SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.RemoveCell
  isExternal: true
  href: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.html#SadConsole_Effects_EffectsManager_ColoredGlyphEffectData_RemoveCell_SadConsole_ColoredGlyphBase_System_Boolean_
  name: RemoveCell
  nameWithType: EffectsManager.ColoredGlyphEffectData.RemoveCell
  fullName: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.RemoveCell
- uid: SadConsole.ColoredGlyphBase
  commentId: T:SadConsole.ColoredGlyphBase
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredGlyphBase.html
  name: ColoredGlyphBase
  nameWithType: ColoredGlyphBase
  fullName: SadConsole.ColoredGlyphBase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.ContainsCell*
  commentId: Overload:SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.ContainsCell
  isExternal: true
  href: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.html#SadConsole_Effects_EffectsManager_ColoredGlyphEffectData_ContainsCell_SadConsole_ColoredGlyphBase_
  name: ContainsCell
  nameWithType: EffectsManager.ColoredGlyphEffectData.ContainsCell
  fullName: SadConsole.Effects.EffectsManager.ColoredGlyphEffectData.ContainsCell
