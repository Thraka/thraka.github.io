### YamlMime:ManagedReference
items:
- uid: SadConsole.UI.ControlHost
  commentId: T:SadConsole.UI.ControlHost
  id: ControlHost
  parent: SadConsole.UI
  children:
  - SadConsole.UI.ControlHost.#ctor
  - SadConsole.UI.ControlHost.Add(SadConsole.UI.Controls.ControlBase)
  - SadConsole.UI.ControlHost.CanFocusControl(SadConsole.UI.Controls.ControlBase)
  - SadConsole.UI.ControlHost.CanTabToNextConsole
  - SadConsole.UI.ControlHost.CaptureControl(SadConsole.UI.Controls.ControlBase)
  - SadConsole.UI.ControlHost.CapturedControl
  - SadConsole.UI.ControlHost.Clear
  - SadConsole.UI.ControlHost.ClearOnAdded
  - SadConsole.UI.ControlHost.Contains(SadConsole.UI.Controls.ControlBase)
  - SadConsole.UI.ControlHost.ControlsList
  - SadConsole.UI.ControlHost.CopyTo(SadConsole.UI.Controls.ControlBase[],System.Int32)
  - SadConsole.UI.ControlHost.Count
  - SadConsole.UI.ControlHost.DisableControlFocusing
  - SadConsole.UI.ControlHost.DisableCursorOnAdded
  - SadConsole.UI.ControlHost.FocusedControl
  - SadConsole.UI.ControlHost.FocusedControlChanged(SadConsole.UI.Controls.ControlBase,SadConsole.UI.Controls.ControlBase)
  - SadConsole.UI.ControlHost.FocusedControlChanging(SadConsole.UI.Controls.ControlBase,SadConsole.UI.Controls.ControlBase)
  - SadConsole.UI.ControlHost.ForceRedrawAllControls
  - SadConsole.UI.ControlHost.GetEnumerator
  - SadConsole.UI.ControlHost.GetNamedControl(System.String)
  - SadConsole.UI.ControlHost.GetThemeColors
  - SadConsole.UI.ControlHost.HasNamedControl(System.String)
  - SadConsole.UI.ControlHost.HasNamedControl(System.String,SadConsole.UI.Controls.ControlBase@)
  - SadConsole.UI.ControlHost.IndexOf(SadConsole.UI.Controls.ControlBase)
  - SadConsole.UI.ControlHost.Insert(System.Int32,SadConsole.UI.Controls.ControlBase)
  - SadConsole.UI.ControlHost.IsDirty
  - SadConsole.UI.ControlHost.IsReadOnly
  - SadConsole.UI.ControlHost.Item(System.Int32)
  - SadConsole.UI.ControlHost.Item(System.String)
  - SadConsole.UI.ControlHost.NamedControls
  - SadConsole.UI.ControlHost.NextTabConsole
  - SadConsole.UI.ControlHost.ParentConsole
  - SadConsole.UI.ControlHost.PreviousTabConsole
  - SadConsole.UI.ControlHost.ReOrderControls
  - SadConsole.UI.ControlHost.ReleaseControl
  - SadConsole.UI.ControlHost.Remove(SadConsole.UI.Controls.ControlBase)
  - SadConsole.UI.ControlHost.RemoveAt(System.Int32)
  - SadConsole.UI.ControlHost.SortOrder
  - SadConsole.UI.ControlHost.TabNextControl
  - SadConsole.UI.ControlHost.TabPreviousControl
  - SadConsole.UI.ControlHost.ThemeColors
  - SadConsole.UI.ControlHost.ToArray
  - SadConsole.UI.ControlHost.TryTabNextConsole
  - SadConsole.UI.ControlHost.TryTabPreviousConsole
  langs:
  - csharp
  - vb
  name: ControlHost
  nameWithType: ControlHost
  fullName: SadConsole.UI.ControlHost
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Adds the ability for a host to contain and display controls from <xref href="SadConsole.UI.Controls" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class ControlHost : IComponent, IContainer, IList<ControlBase>, ICollection<ControlBase>, IEnumerable<ControlBase>, IEnumerable'
    content.vb: Public Class ControlHost Implements IComponent, IContainer, IList(Of ControlBase), ICollection(Of ControlBase), IEnumerable(Of ControlBase), IEnumerable
  inheritance:
  - System.Object
  implements:
  - SadConsole.Components.IComponent
  - SadConsole.UI.Controls.IContainer
  - System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}
  - System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}
  - System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.ControlBase}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: SadConsole.UI.ControlHost.ControlsList
  commentId: F:SadConsole.UI.ControlHost.ControlsList
  id: ControlsList
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: ControlsList
  nameWithType: ControlHost.ControlsList
  fullName: SadConsole.UI.ControlHost.ControlsList
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: The collection of controls.
  example: []
  syntax:
    content: >-
      [DataMember]

      protected List<ControlBase> ControlsList
    return:
      type: System.Collections.Generic.List{SadConsole.UI.Controls.ControlBase}
    content.vb: >-
      <DataMember>

      Protected ControlsList As List(Of ControlBase)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.ControlHost.NamedControls
  commentId: F:SadConsole.UI.ControlHost.NamedControls
  id: NamedControls
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: NamedControls
  nameWithType: ControlHost.NamedControls
  fullName: SadConsole.UI.ControlHost.NamedControls
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: The controls added which contain a <xref href="SadConsole.UI.Controls.ControlBase.Name" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: protected Dictionary<string, ControlBase> NamedControls
    return:
      type: System.Collections.Generic.Dictionary{System.String,SadConsole.UI.Controls.ControlBase}
    content.vb: Protected NamedControls As Dictionary(Of String, ControlBase)
- uid: SadConsole.UI.ControlHost.HasNamedControl(System.String)
  commentId: M:SadConsole.UI.ControlHost.HasNamedControl(System.String)
  id: HasNamedControl(System.String)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: HasNamedControl(string)
  nameWithType: ControlHost.HasNamedControl(string)
  fullName: SadConsole.UI.ControlHost.HasNamedControl(string)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Checks whether or not the container has a control registered with the given name.
  example: []
  syntax:
    content: public bool HasNamedControl(string name)
    parameters:
    - id: name
      type: System.String
      description: The name to check.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the control is found; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function HasNamedControl(name As String) As Boolean
  overload: SadConsole.UI.ControlHost.HasNamedControl*
  implements:
  - SadConsole.UI.Controls.IContainer.HasNamedControl(System.String)
  nameWithType.vb: ControlHost.HasNamedControl(String)
  fullName.vb: SadConsole.UI.ControlHost.HasNamedControl(String)
  name.vb: HasNamedControl(String)
- uid: SadConsole.UI.ControlHost.HasNamedControl(System.String,SadConsole.UI.Controls.ControlBase@)
  commentId: M:SadConsole.UI.ControlHost.HasNamedControl(System.String,SadConsole.UI.Controls.ControlBase@)
  id: HasNamedControl(System.String,SadConsole.UI.Controls.ControlBase@)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: HasNamedControl(string, out ControlBase?)
  nameWithType: ControlHost.HasNamedControl(string, out ControlBase?)
  fullName: SadConsole.UI.ControlHost.HasNamedControl(string, out SadConsole.UI.Controls.ControlBase?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Checks whether or not the container has a control registered with the given name. If found, the instance is assigned to the <code class="paramref">control</code> parameter.
  example: []
  syntax:
    content: public bool HasNamedControl(string name, out ControlBase? control)
    parameters:
    - id: name
      type: System.String
      description: The name to check.
    - id: control
      type: SadConsole.UI.Controls.ControlBase
      description: The control instance found.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the control is found; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function HasNamedControl(name As String, control As ControlBase) As Boolean
  overload: SadConsole.UI.ControlHost.HasNamedControl*
  implements:
  - SadConsole.UI.Controls.IContainer.HasNamedControl(System.String,SadConsole.UI.Controls.ControlBase@)
  nameWithType.vb: ControlHost.HasNamedControl(String, ControlBase)
  fullName.vb: SadConsole.UI.ControlHost.HasNamedControl(String, SadConsole.UI.Controls.ControlBase)
  name.vb: HasNamedControl(String, ControlBase)
- uid: SadConsole.UI.ControlHost.GetNamedControl(System.String)
  commentId: M:SadConsole.UI.ControlHost.GetNamedControl(System.String)
  id: GetNamedControl(System.String)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: GetNamedControl(string)
  nameWithType: ControlHost.GetNamedControl(string)
  fullName: SadConsole.UI.ControlHost.GetNamedControl(string)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gets a control by its <xref href="SadConsole.UI.Controls.ControlBase.Name" data-throw-if-not-resolved="false"></xref> property.
  example: []
  syntax:
    content: public ControlBase GetNamedControl(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the control.
    return:
      type: SadConsole.UI.Controls.ControlBase
      description: The control.
    content.vb: Public Function GetNamedControl(name As String) As ControlBase
  overload: SadConsole.UI.ControlHost.GetNamedControl*
  implements:
  - SadConsole.UI.Controls.IContainer.GetNamedControl(System.String)
  nameWithType.vb: ControlHost.GetNamedControl(String)
  fullName.vb: SadConsole.UI.ControlHost.GetNamedControl(String)
  name.vb: GetNamedControl(String)
- uid: SadConsole.UI.ControlHost.TabNextControl
  commentId: M:SadConsole.UI.ControlHost.TabNextControl
  id: TabNextControl
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: TabNextControl()
  nameWithType: ControlHost.TabNextControl()
  fullName: SadConsole.UI.ControlHost.TabNextControl()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gives the focus to the next control in the tab order.
  example: []
  syntax:
    content: public void TabNextControl()
    content.vb: Public Sub TabNextControl()
  overload: SadConsole.UI.ControlHost.TabNextControl*
- uid: SadConsole.UI.ControlHost.TabPreviousControl
  commentId: M:SadConsole.UI.ControlHost.TabPreviousControl
  id: TabPreviousControl
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: TabPreviousControl()
  nameWithType: ControlHost.TabPreviousControl()
  fullName: SadConsole.UI.ControlHost.TabPreviousControl()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gives focus to the previous control in the tab order.
  example: []
  syntax:
    content: public void TabPreviousControl()
    content.vb: Public Sub TabPreviousControl()
  overload: SadConsole.UI.ControlHost.TabPreviousControl*
- uid: SadConsole.UI.ControlHost.TryTabPreviousConsole
  commentId: M:SadConsole.UI.ControlHost.TryTabPreviousConsole
  id: TryTabPreviousConsole
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: TryTabPreviousConsole()
  nameWithType: ControlHost.TryTabPreviousConsole()
  fullName: SadConsole.UI.ControlHost.TryTabPreviousConsole()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Tries to tab to the console that comes before this one in the <xref href="SadConsole.IScreenObject.Parent" data-throw-if-not-resolved="false"></xref> collection of <xref href="SadConsole.IScreenObject.Children" data-throw-if-not-resolved="false"></xref>. Sets focus to the target console if found.
  example: []
  syntax:
    content: protected bool TryTabPreviousConsole()
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the tab was successful; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Protected Function TryTabPreviousConsole() As Boolean
  overload: SadConsole.UI.ControlHost.TryTabPreviousConsole*
- uid: SadConsole.UI.ControlHost.TryTabNextConsole
  commentId: M:SadConsole.UI.ControlHost.TryTabNextConsole
  id: TryTabNextConsole
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: TryTabNextConsole()
  nameWithType: ControlHost.TryTabNextConsole()
  fullName: SadConsole.UI.ControlHost.TryTabNextConsole()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Tries to tab to the console that comes after this one in the <xref href="SadConsole.IScreenObject.Parent" data-throw-if-not-resolved="false"></xref> collection of <xref href="SadConsole.IScreenObject.Children" data-throw-if-not-resolved="false"></xref>. Sets focus to the target console if found.
  example: []
  syntax:
    content: protected bool TryTabNextConsole()
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the tab was successful; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Protected Function TryTabNextConsole() As Boolean
  overload: SadConsole.UI.ControlHost.TryTabNextConsole*
- uid: SadConsole.UI.ControlHost.GetThemeColors
  commentId: M:SadConsole.UI.ControlHost.GetThemeColors
  id: GetThemeColors
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: GetThemeColors()
  nameWithType: ControlHost.GetThemeColors()
  fullName: SadConsole.UI.ControlHost.GetThemeColors()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Returns the colors assigned to this console or the library default.
  example: []
  syntax:
    content: public Colors GetThemeColors()
    return:
      type: SadConsole.UI.Colors
      description: The found colors.
    content.vb: Public Function GetThemeColors() As Colors
  overload: SadConsole.UI.ControlHost.GetThemeColors*
- uid: SadConsole.UI.ControlHost.ToArray
  commentId: M:SadConsole.UI.ControlHost.ToArray
  id: ToArray
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: ControlHost.ToArray()
  fullName: SadConsole.UI.ControlHost.ToArray()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gets an array containing all of the controls this host contains.
  example: []
  syntax:
    content: public ControlBase[] ToArray()
    return:
      type: SadConsole.UI.Controls.ControlBase[]
    content.vb: Public Function ToArray() As ControlBase()
  overload: SadConsole.UI.ControlHost.ToArray*
- uid: SadConsole.UI.ControlHost.FocusedControlChanging(SadConsole.UI.Controls.ControlBase,SadConsole.UI.Controls.ControlBase)
  commentId: M:SadConsole.UI.ControlHost.FocusedControlChanging(SadConsole.UI.Controls.ControlBase,SadConsole.UI.Controls.ControlBase)
  id: FocusedControlChanging(SadConsole.UI.Controls.ControlBase,SadConsole.UI.Controls.ControlBase)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: FocusedControlChanging(ControlBase?, ControlBase?)
  nameWithType: ControlHost.FocusedControlChanging(ControlBase?, ControlBase?)
  fullName: SadConsole.UI.ControlHost.FocusedControlChanging(SadConsole.UI.Controls.ControlBase?, SadConsole.UI.Controls.ControlBase?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: When overridden, allows you to prevent a control from taking focus from another control.
  example: []
  syntax:
    content: protected virtual bool FocusedControlChanging(ControlBase? newControl, ControlBase? oldControl)
    parameters:
    - id: newControl
      type: SadConsole.UI.Controls.ControlBase
      description: The control requesting focus.
    - id: oldControl
      type: SadConsole.UI.Controls.ControlBase
      description: The control that has focus.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the focus change is allowed; otherwise false.
    content.vb: Protected Overridable Function FocusedControlChanging(newControl As ControlBase, oldControl As ControlBase) As Boolean
  overload: SadConsole.UI.ControlHost.FocusedControlChanging*
  nameWithType.vb: ControlHost.FocusedControlChanging(ControlBase, ControlBase)
  fullName.vb: SadConsole.UI.ControlHost.FocusedControlChanging(SadConsole.UI.Controls.ControlBase, SadConsole.UI.Controls.ControlBase)
  name.vb: FocusedControlChanging(ControlBase, ControlBase)
- uid: SadConsole.UI.ControlHost.FocusedControlChanged(SadConsole.UI.Controls.ControlBase,SadConsole.UI.Controls.ControlBase)
  commentId: M:SadConsole.UI.ControlHost.FocusedControlChanged(SadConsole.UI.Controls.ControlBase,SadConsole.UI.Controls.ControlBase)
  id: FocusedControlChanged(SadConsole.UI.Controls.ControlBase,SadConsole.UI.Controls.ControlBase)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: FocusedControlChanged(ControlBase?, ControlBase?)
  nameWithType: ControlHost.FocusedControlChanged(ControlBase?, ControlBase?)
  fullName: SadConsole.UI.ControlHost.FocusedControlChanged(SadConsole.UI.Controls.ControlBase?, SadConsole.UI.Controls.ControlBase?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: >-
    This method actually changes the variable that tracks which control is focused. It then sets the <xref href="SadConsole.UI.Controls.ControlBase.IsFocused" data-throw-if-not-resolved="false"></xref> property

    to the appropriate value for both the previously focused control and the newly focused control.
  example: []
  syntax:
    content: protected virtual void FocusedControlChanged(ControlBase? newControl, ControlBase? oldControl)
    parameters:
    - id: newControl
      type: SadConsole.UI.Controls.ControlBase
      description: The control that should be focused.
    - id: oldControl
      type: SadConsole.UI.Controls.ControlBase
      description: The control that currently has focus.
    content.vb: Protected Overridable Sub FocusedControlChanged(newControl As ControlBase, oldControl As ControlBase)
  overload: SadConsole.UI.ControlHost.FocusedControlChanged*
  nameWithType.vb: ControlHost.FocusedControlChanged(ControlBase, ControlBase)
  fullName.vb: SadConsole.UI.ControlHost.FocusedControlChanged(SadConsole.UI.Controls.ControlBase, SadConsole.UI.Controls.ControlBase)
  name.vb: FocusedControlChanged(ControlBase, ControlBase)
- uid: SadConsole.UI.ControlHost.CanFocusControl(SadConsole.UI.Controls.ControlBase)
  commentId: M:SadConsole.UI.ControlHost.CanFocusControl(SadConsole.UI.Controls.ControlBase)
  id: CanFocusControl(SadConsole.UI.Controls.ControlBase)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: CanFocusControl(ControlBase?)
  nameWithType: ControlHost.CanFocusControl(ControlBase?)
  fullName: SadConsole.UI.ControlHost.CanFocusControl(SadConsole.UI.Controls.ControlBase?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Determins if a control is enabled and <xref href="SadConsole.UI.Controls.ControlBase.CanFocus" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: protected virtual bool CanFocusControl(ControlBase? control)
    parameters:
    - id: control
      type: SadConsole.UI.Controls.ControlBase
      description: The control to check.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the control can be focused; otherwise false.
    content.vb: Protected Overridable Function CanFocusControl(control As ControlBase) As Boolean
  overload: SadConsole.UI.ControlHost.CanFocusControl*
  nameWithType.vb: ControlHost.CanFocusControl(ControlBase)
  fullName.vb: SadConsole.UI.ControlHost.CanFocusControl(SadConsole.UI.Controls.ControlBase)
  name.vb: CanFocusControl(ControlBase)
- uid: SadConsole.UI.ControlHost.ReOrderControls
  commentId: M:SadConsole.UI.ControlHost.ReOrderControls
  id: ReOrderControls
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: ReOrderControls()
  nameWithType: ControlHost.ReOrderControls()
  fullName: SadConsole.UI.ControlHost.ReOrderControls()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Reorders the control collection based on the tab index of each control.
  example: []
  syntax:
    content: public void ReOrderControls()
    content.vb: Public Sub ReOrderControls()
  overload: SadConsole.UI.ControlHost.ReOrderControls*
- uid: SadConsole.UI.ControlHost.CaptureControl(SadConsole.UI.Controls.ControlBase)
  commentId: M:SadConsole.UI.ControlHost.CaptureControl(SadConsole.UI.Controls.ControlBase)
  id: CaptureControl(SadConsole.UI.Controls.ControlBase)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: CaptureControl(ControlBase)
  nameWithType: ControlHost.CaptureControl(ControlBase)
  fullName: SadConsole.UI.ControlHost.CaptureControl(SadConsole.UI.Controls.ControlBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Captures a control for exclusive mouse focus. Sets the ExclusiveMouse property to true.
  example: []
  syntax:
    content: public void CaptureControl(ControlBase control)
    parameters:
    - id: control
      type: SadConsole.UI.Controls.ControlBase
      description: The control to capture
    content.vb: Public Sub CaptureControl(control As ControlBase)
  overload: SadConsole.UI.ControlHost.CaptureControl*
- uid: SadConsole.UI.ControlHost.ReleaseControl
  commentId: M:SadConsole.UI.ControlHost.ReleaseControl
  id: ReleaseControl
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: ReleaseControl()
  nameWithType: ControlHost.ReleaseControl()
  fullName: SadConsole.UI.ControlHost.ReleaseControl()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Releases the control from exclusive mouse focus. Sets the ExclusiveMouse property to false and sets the CapturedControl property to null.
  example: []
  syntax:
    content: public void ReleaseControl()
    content.vb: Public Sub ReleaseControl()
  overload: SadConsole.UI.ControlHost.ReleaseControl*
- uid: SadConsole.UI.ControlHost.ForceRedrawAllControls
  commentId: M:SadConsole.UI.ControlHost.ForceRedrawAllControls
  id: ForceRedrawAllControls
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: ForceRedrawAllControls()
  nameWithType: ControlHost.ForceRedrawAllControls()
  fullName: SadConsole.UI.ControlHost.ForceRedrawAllControls()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Forces each control to dirty so that the next frame will redraw each control.
  example: []
  syntax:
    content: public void ForceRedrawAllControls()
    content.vb: Public Sub ForceRedrawAllControls()
  overload: SadConsole.UI.ControlHost.ForceRedrawAllControls*
- uid: SadConsole.UI.ControlHost.GetEnumerator
  commentId: M:SadConsole.UI.ControlHost.GetEnumerator
  id: GetEnumerator
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ControlHost.GetEnumerator()
  fullName: SadConsole.UI.ControlHost.GetEnumerator()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gets an enumerator of the controls collection.
  example: []
  syntax:
    content: public IEnumerator<ControlBase> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{SadConsole.UI.Controls.ControlBase}
      description: The enumerator of the controls collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of ControlBase)
  overload: SadConsole.UI.ControlHost.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.ControlBase}.GetEnumerator
- uid: SadConsole.UI.ControlHost.IndexOf(SadConsole.UI.Controls.ControlBase)
  commentId: M:SadConsole.UI.ControlHost.IndexOf(SadConsole.UI.Controls.ControlBase)
  id: IndexOf(SadConsole.UI.Controls.ControlBase)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: IndexOf(ControlBase)
  nameWithType: ControlHost.IndexOf(ControlBase)
  fullName: SadConsole.UI.ControlHost.IndexOf(SadConsole.UI.Controls.ControlBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gets the index of the specified control.
  example: []
  syntax:
    content: public int IndexOf(ControlBase control)
    parameters:
    - id: control
      type: SadConsole.UI.Controls.ControlBase
      description: The control.
    return:
      type: System.Int32
      description: The index of the control in the backing collection.
    content.vb: Public Function IndexOf(control As ControlBase) As Integer
  overload: SadConsole.UI.ControlHost.IndexOf*
  implements:
  - System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.IndexOf(SadConsole.UI.Controls.ControlBase)
- uid: SadConsole.UI.ControlHost.Insert(System.Int32,SadConsole.UI.Controls.ControlBase)
  commentId: M:SadConsole.UI.ControlHost.Insert(System.Int32,SadConsole.UI.Controls.ControlBase)
  id: Insert(System.Int32,SadConsole.UI.Controls.ControlBase)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: Insert(int, ControlBase)
  nameWithType: ControlHost.Insert(int, ControlBase)
  fullName: SadConsole.UI.ControlHost.Insert(int, SadConsole.UI.Controls.ControlBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Inserts an item at the specified index and sets the <xref href="SadConsole.UI.Controls.ControlBase.TabIndex" data-throw-if-not-resolved="false"></xref> to the specified index.
  remarks: Index within the backing collection is always based on <xref href="SadConsole.UI.Controls.ControlBase.TabIndex" data-throw-if-not-resolved="false"></xref> ranking. There may be conflicts so you're not guaranteed that the control will be available at the specified index.
  example: []
  syntax:
    content: public void Insert(int index, ControlBase control)
    parameters:
    - id: index
      type: System.Int32
      description: Index to insert at.
    - id: control
      type: SadConsole.UI.Controls.ControlBase
      description: The control to insert.
    content.vb: Public Sub Insert(index As Integer, control As ControlBase)
  overload: SadConsole.UI.ControlHost.Insert*
  implements:
  - System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.Insert(System.Int32,SadConsole.UI.Controls.ControlBase)
  nameWithType.vb: ControlHost.Insert(Integer, ControlBase)
  fullName.vb: SadConsole.UI.ControlHost.Insert(Integer, SadConsole.UI.Controls.ControlBase)
  name.vb: Insert(Integer, ControlBase)
- uid: SadConsole.UI.ControlHost.RemoveAt(System.Int32)
  commentId: M:SadConsole.UI.ControlHost.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: ControlHost.RemoveAt(int)
  fullName: SadConsole.UI.ControlHost.RemoveAt(int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Removes a control by index.
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: SadConsole.UI.ControlHost.RemoveAt*
  implements:
  - System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.RemoveAt(System.Int32)
  nameWithType.vb: ControlHost.RemoveAt(Integer)
  fullName.vb: SadConsole.UI.ControlHost.RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
- uid: SadConsole.UI.ControlHost.Add(SadConsole.UI.Controls.ControlBase)
  commentId: M:SadConsole.UI.ControlHost.Add(SadConsole.UI.Controls.ControlBase)
  id: Add(SadConsole.UI.Controls.ControlBase)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: Add(ControlBase)
  nameWithType: ControlHost.Add(ControlBase)
  fullName: SadConsole.UI.ControlHost.Add(SadConsole.UI.Controls.ControlBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Adds an existing control to this console.
  example: []
  syntax:
    content: public void Add(ControlBase control)
    parameters:
    - id: control
      type: SadConsole.UI.Controls.ControlBase
      description: The control to add.
    content.vb: Public Sub Add(control As ControlBase)
  overload: SadConsole.UI.ControlHost.Add*
  implements:
  - System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Add(SadConsole.UI.Controls.ControlBase)
- uid: SadConsole.UI.ControlHost.Clear
  commentId: M:SadConsole.UI.ControlHost.Clear
  id: Clear
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ControlHost.Clear()
  fullName: SadConsole.UI.ControlHost.Clear()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Removes all controls from this console.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: SadConsole.UI.ControlHost.Clear*
  implements:
  - System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Clear
- uid: SadConsole.UI.ControlHost.Contains(SadConsole.UI.Controls.ControlBase)
  commentId: M:SadConsole.UI.ControlHost.Contains(SadConsole.UI.Controls.ControlBase)
  id: Contains(SadConsole.UI.Controls.ControlBase)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: Contains(ControlBase)
  nameWithType: ControlHost.Contains(ControlBase)
  fullName: SadConsole.UI.ControlHost.Contains(SadConsole.UI.Controls.ControlBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Checks if the specified control exists in this console.
  example: []
  syntax:
    content: public bool Contains(ControlBase control)
    parameters:
    - id: control
      type: SadConsole.UI.Controls.ControlBase
      description: The control to check.
    return:
      type: System.Boolean
      description: True when the control exists in this console; otherwise false.
    content.vb: Public Function Contains(control As ControlBase) As Boolean
  overload: SadConsole.UI.ControlHost.Contains*
  implements:
  - System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Contains(SadConsole.UI.Controls.ControlBase)
- uid: SadConsole.UI.ControlHost.CopyTo(SadConsole.UI.Controls.ControlBase[],System.Int32)
  commentId: M:SadConsole.UI.ControlHost.CopyTo(SadConsole.UI.Controls.ControlBase[],System.Int32)
  id: CopyTo(SadConsole.UI.Controls.ControlBase[],System.Int32)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: CopyTo(ControlBase[], int)
  nameWithType: ControlHost.CopyTo(ControlBase[], int)
  fullName: SadConsole.UI.ControlHost.CopyTo(SadConsole.UI.Controls.ControlBase[], int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Copies the controls to a new array.
  example: []
  syntax:
    content: public void CopyTo(ControlBase[] array, int arrayIndex)
    parameters:
    - id: array
      type: SadConsole.UI.Controls.ControlBase[]
      description: The destination array.
    - id: arrayIndex
      type: System.Int32
      description: The starting index of where to copy the controls in the destination array.
    content.vb: Public Sub CopyTo(array As ControlBase(), arrayIndex As Integer)
  overload: SadConsole.UI.ControlHost.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.CopyTo(SadConsole.UI.Controls.ControlBase[],System.Int32)
  nameWithType.vb: ControlHost.CopyTo(ControlBase(), Integer)
  fullName.vb: SadConsole.UI.ControlHost.CopyTo(SadConsole.UI.Controls.ControlBase(), Integer)
  name.vb: CopyTo(ControlBase(), Integer)
- uid: SadConsole.UI.ControlHost.Remove(SadConsole.UI.Controls.ControlBase)
  commentId: M:SadConsole.UI.ControlHost.Remove(SadConsole.UI.Controls.ControlBase)
  id: Remove(SadConsole.UI.Controls.ControlBase)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: Remove(ControlBase)
  nameWithType: ControlHost.Remove(ControlBase)
  fullName: SadConsole.UI.ControlHost.Remove(SadConsole.UI.Controls.ControlBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Removes a control from this console.
  example: []
  syntax:
    content: public bool Remove(ControlBase control)
    parameters:
    - id: control
      type: SadConsole.UI.Controls.ControlBase
      description: The control to remove.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if item was successfully removed; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. This method also returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if item is not found.
    content.vb: Public Function Remove(control As ControlBase) As Boolean
  overload: SadConsole.UI.ControlHost.Remove*
- uid: SadConsole.UI.ControlHost.#ctor
  commentId: M:SadConsole.UI.ControlHost.#ctor
  id: '#ctor'
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: ControlHost()
  nameWithType: ControlHost.ControlHost()
  fullName: SadConsole.UI.ControlHost.ControlHost()
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  syntax:
    content: public ControlHost()
    content.vb: Public Sub New()
  overload: SadConsole.UI.ControlHost.#ctor*
  nameWithType.vb: ControlHost.New()
  fullName.vb: SadConsole.UI.ControlHost.New()
  name.vb: New()
- uid: SadConsole.UI.ControlHost.SortOrder
  commentId: P:SadConsole.UI.ControlHost.SortOrder
  id: SortOrder
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: SortOrder
  nameWithType: ControlHost.SortOrder
  fullName: SadConsole.UI.ControlHost.SortOrder
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Indicates priority to other components.
  example: []
  syntax:
    content: public uint SortOrder { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property SortOrder As UInteger
  overload: SadConsole.UI.ControlHost.SortOrder*
- uid: SadConsole.UI.ControlHost.Item(System.Int32)
  commentId: P:SadConsole.UI.ControlHost.Item(System.Int32)
  id: Item(System.Int32)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: ControlHost.this[int]
  fullName: SadConsole.UI.ControlHost.this[int]
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gets a control by index.
  example: []
  syntax:
    content: public ControlBase this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the control.
    return:
      type: SadConsole.UI.Controls.ControlBase
      description: A control.
    content.vb: Public ReadOnly Default Property this[](index As Integer) As ControlBase
  overload: SadConsole.UI.ControlHost.Item*
  nameWithType.vb: ControlHost.this[](Integer)
  fullName.vb: SadConsole.UI.ControlHost.this[](Integer)
  name.vb: this[](Integer)
- uid: SadConsole.UI.ControlHost.ParentConsole
  commentId: P:SadConsole.UI.ControlHost.ParentConsole
  id: ParentConsole
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: ParentConsole
  nameWithType: ControlHost.ParentConsole
  fullName: SadConsole.UI.ControlHost.ParentConsole
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: The parent object hosting the controls.
  example: []
  syntax:
    content: public IScreenSurface? ParentConsole { get; }
    parameters: []
    return:
      type: SadConsole.IScreenSurface
    content.vb: Public ReadOnly Property ParentConsole As IScreenSurface
  overload: SadConsole.UI.ControlHost.ParentConsole*
- uid: SadConsole.UI.ControlHost.ThemeColors
  commentId: P:SadConsole.UI.ControlHost.ThemeColors
  id: ThemeColors
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: ThemeColors
  nameWithType: ControlHost.ThemeColors
  fullName: SadConsole.UI.ControlHost.ThemeColors
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gets or sets the colors to use with drawing the console and controls.
  example: []
  syntax:
    content: public Colors? ThemeColors { get; set; }
    parameters: []
    return:
      type: SadConsole.UI.Colors
    content.vb: Public Property ThemeColors As Colors
  overload: SadConsole.UI.ControlHost.ThemeColors*
- uid: SadConsole.UI.ControlHost.IsDirty
  commentId: P:SadConsole.UI.ControlHost.IsDirty
  id: IsDirty
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: ControlHost.IsDirty
  fullName: SadConsole.UI.ControlHost.IsDirty
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Indicates that the control host needs to be redrawn.
  example: []
  syntax:
    content: public bool IsDirty { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDirty As Boolean
  overload: SadConsole.UI.ControlHost.IsDirty*
- uid: SadConsole.UI.ControlHost.CapturedControl
  commentId: P:SadConsole.UI.ControlHost.CapturedControl
  id: CapturedControl
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: CapturedControl
  nameWithType: ControlHost.CapturedControl
  fullName: SadConsole.UI.ControlHost.CapturedControl
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gets the control currently capturing mouse events.
  example: []
  syntax:
    content: public ControlBase? CapturedControl { get; }
    parameters: []
    return:
      type: SadConsole.UI.Controls.ControlBase
    content.vb: Public ReadOnly Property CapturedControl As ControlBase
  overload: SadConsole.UI.ControlHost.CapturedControl*
- uid: SadConsole.UI.ControlHost.FocusedControl
  commentId: P:SadConsole.UI.ControlHost.FocusedControl
  id: FocusedControl
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: FocusedControl
  nameWithType: ControlHost.FocusedControl
  fullName: SadConsole.UI.ControlHost.FocusedControl
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gets or sets the control that has keyboard focus.
  example: []
  syntax:
    content: public ControlBase? FocusedControl { get; set; }
    parameters: []
    return:
      type: SadConsole.UI.Controls.ControlBase
    content.vb: Public Property FocusedControl As ControlBase
  overload: SadConsole.UI.ControlHost.FocusedControl*
- uid: SadConsole.UI.ControlHost.ClearOnAdded
  commentId: P:SadConsole.UI.ControlHost.ClearOnAdded
  id: ClearOnAdded
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: ClearOnAdded
  nameWithType: ControlHost.ClearOnAdded
  fullName: SadConsole.UI.ControlHost.ClearOnAdded
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, the component will clear the console it's attached to with the theme color.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool ClearOnAdded { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property ClearOnAdded As Boolean
  overload: SadConsole.UI.ControlHost.ClearOnAdded*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.ControlHost.DisableCursorOnAdded
  commentId: P:SadConsole.UI.ControlHost.DisableCursorOnAdded
  id: DisableCursorOnAdded
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: DisableCursorOnAdded
  nameWithType: ControlHost.DisableCursorOnAdded
  fullName: SadConsole.UI.ControlHost.DisableCursorOnAdded
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, the component will disable the cursor of the console it's attached to.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool DisableCursorOnAdded { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property DisableCursorOnAdded As Boolean
  overload: SadConsole.UI.ControlHost.DisableCursorOnAdded*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.ControlHost.CanTabToNextConsole
  commentId: P:SadConsole.UI.ControlHost.CanTabToNextConsole
  id: CanTabToNextConsole
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: CanTabToNextConsole
  nameWithType: ControlHost.CanTabToNextConsole
  fullName: SadConsole.UI.ControlHost.CanTabToNextConsole
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: When true, allows the tab command to move to the next console (when there is a parent) instead of cycling back to the first control on this console.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool CanTabToNextConsole { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property CanTabToNextConsole As Boolean
  overload: SadConsole.UI.ControlHost.CanTabToNextConsole*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.ControlHost.NextTabConsole
  commentId: P:SadConsole.UI.ControlHost.NextTabConsole
  id: NextTabConsole
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: NextTabConsole
  nameWithType: ControlHost.NextTabConsole
  fullName: SadConsole.UI.ControlHost.NextTabConsole
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Sets reference to the console to tab to when the <xref href="SadConsole.UI.ControlHost.CanTabToNextConsole" data-throw-if-not-resolved="false"></xref> property is true. Set this to null to allow the engine to determine the next console.
  example: []
  syntax:
    content: public IScreenSurface? NextTabConsole { get; set; }
    parameters: []
    return:
      type: SadConsole.IScreenSurface
    content.vb: Public Property NextTabConsole As IScreenSurface
  overload: SadConsole.UI.ControlHost.NextTabConsole*
- uid: SadConsole.UI.ControlHost.PreviousTabConsole
  commentId: P:SadConsole.UI.ControlHost.PreviousTabConsole
  id: PreviousTabConsole
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: PreviousTabConsole
  nameWithType: ControlHost.PreviousTabConsole
  fullName: SadConsole.UI.ControlHost.PreviousTabConsole
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Sets reference to the console to tab to when the <xref href="SadConsole.UI.ControlHost.CanTabToNextConsole" data-throw-if-not-resolved="false"></xref> property is true. Set this to null to allow the engine to determine the next console.
  example: []
  syntax:
    content: public IScreenSurface? PreviousTabConsole { get; set; }
    parameters: []
    return:
      type: SadConsole.IScreenSurface
    content.vb: Public Property PreviousTabConsole As IScreenSurface
  overload: SadConsole.UI.ControlHost.PreviousTabConsole*
- uid: SadConsole.UI.ControlHost.DisableControlFocusing
  commentId: P:SadConsole.UI.ControlHost.DisableControlFocusing
  id: DisableControlFocusing
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: DisableControlFocusing
  nameWithType: ControlHost.DisableControlFocusing
  fullName: SadConsole.UI.ControlHost.DisableControlFocusing
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: When set to true, child controls are not alerted to focused and non-focused states.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool DisableControlFocusing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property DisableControlFocusing As Boolean
  overload: SadConsole.UI.ControlHost.DisableControlFocusing*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.UI.ControlHost.Count
  commentId: P:SadConsole.UI.ControlHost.Count
  id: Count
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ControlHost.Count
  fullName: SadConsole.UI.ControlHost.Count
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: The total number of controls in this component.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: SadConsole.UI.ControlHost.Count*
  implements:
  - System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Count
- uid: SadConsole.UI.ControlHost.IsReadOnly
  commentId: P:SadConsole.UI.ControlHost.IsReadOnly
  id: IsReadOnly
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ControlHost.IsReadOnly
  fullName: SadConsole.UI.ControlHost.IsReadOnly
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: SadConsole.UI.ControlHost.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.IsReadOnly
- uid: SadConsole.UI.ControlHost.Item(System.String)
  commentId: P:SadConsole.UI.ControlHost.Item(System.String)
  id: Item(System.String)
  parent: SadConsole.UI.ControlHost
  langs:
  - csharp
  - vb
  name: this[string]
  nameWithType: ControlHost.this[string]
  fullName: SadConsole.UI.ControlHost.this[string]
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.UI
  summary: Gets a control by its <xref href="SadConsole.UI.Controls.ControlBase.Name" data-throw-if-not-resolved="false"></xref> property.
  example: []
  syntax:
    content: public ControlBase this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: The name of the control.
    return:
      type: SadConsole.UI.Controls.ControlBase
      description: The control.
    content.vb: Public ReadOnly Default Property this[](name As String) As ControlBase
  overload: SadConsole.UI.ControlHost.Item*
  implements:
  - SadConsole.UI.Controls.IContainer.Item(System.String)
  nameWithType.vb: ControlHost.this[](String)
  fullName.vb: SadConsole.UI.ControlHost.this[](String)
  name.vb: this[](String)
references:
- uid: SadConsole.UI.Controls
  commentId: N:SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.html
  name: SadConsole.UI.Controls
  nameWithType: SadConsole.UI.Controls
  fullName: SadConsole.UI.Controls
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
- uid: SadConsole.UI
  commentId: N:SadConsole.UI
  isExternal: true
  href: SadConsole.html
  name: SadConsole.UI
  nameWithType: SadConsole.UI
  fullName: SadConsole.UI
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SadConsole.Components.IComponent
  commentId: T:SadConsole.Components.IComponent
  parent: SadConsole.Components
  isExternal: true
  href: SadConsole.Components.IComponent.html
  name: IComponent
  nameWithType: IComponent
  fullName: SadConsole.Components.IComponent
- uid: SadConsole.UI.Controls.IContainer
  commentId: T:SadConsole.UI.Controls.IContainer
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.IContainer.html
  name: IContainer
  nameWithType: IContainer
  fullName: SadConsole.UI.Controls.IContainer
- uid: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}
  commentId: T:System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<ControlBase>
  nameWithType: IList<ControlBase>
  fullName: System.Collections.Generic.IList<SadConsole.UI.Controls.ControlBase>
  nameWithType.vb: IList(Of ControlBase)
  fullName.vb: System.Collections.Generic.IList(Of SadConsole.UI.Controls.ControlBase)
  name.vb: IList(Of ControlBase)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}
  commentId: T:System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ControlBase>
  nameWithType: ICollection<ControlBase>
  fullName: System.Collections.Generic.ICollection<SadConsole.UI.Controls.ControlBase>
  nameWithType.vb: ICollection(Of ControlBase)
  fullName.vb: System.Collections.Generic.ICollection(Of SadConsole.UI.Controls.ControlBase)
  name.vb: ICollection(Of ControlBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.ControlBase}
  commentId: T:System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.ControlBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ControlBase>
  nameWithType: IEnumerable<ControlBase>
  fullName: System.Collections.Generic.IEnumerable<SadConsole.UI.Controls.ControlBase>
  nameWithType.vb: IEnumerable(Of ControlBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.UI.Controls.ControlBase)
  name.vb: IEnumerable(Of ControlBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.Components
  commentId: N:SadConsole.Components
  isExternal: true
  href: SadConsole.html
  name: SadConsole.Components
  nameWithType: SadConsole.Components
  fullName: SadConsole.Components
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Components
    name: Components
    isExternal: true
    href: SadConsole.Components.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Components
    name: Components
    isExternal: true
    href: SadConsole.Components.html
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Generic.List{SadConsole.UI.Controls.ControlBase}
  commentId: T:System.Collections.Generic.List{SadConsole.UI.Controls.ControlBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ControlBase>
  nameWithType: List<ControlBase>
  fullName: System.Collections.Generic.List<SadConsole.UI.Controls.ControlBase>
  nameWithType.vb: List(Of ControlBase)
  fullName.vb: System.Collections.Generic.List(Of SadConsole.UI.Controls.ControlBase)
  name.vb: List(Of ControlBase)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.UI.Controls.ControlBase.Name
  commentId: P:SadConsole.UI.Controls.ControlBase.Name
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_Name
  name: Name
  nameWithType: ControlBase.Name
  fullName: SadConsole.UI.Controls.ControlBase.Name
- uid: System.Collections.Generic.Dictionary{System.String,SadConsole.UI.Controls.ControlBase}
  commentId: T:System.Collections.Generic.Dictionary{System.String,SadConsole.UI.Controls.ControlBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, ControlBase>
  nameWithType: Dictionary<string, ControlBase>
  fullName: System.Collections.Generic.Dictionary<string, SadConsole.UI.Controls.ControlBase>
  nameWithType.vb: Dictionary(Of String, ControlBase)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, SadConsole.UI.Controls.ControlBase)
  name.vb: Dictionary(Of String, ControlBase)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: SadConsole.UI.Controls.ControlBase
  commentId: T:SadConsole.UI.Controls.ControlBase
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html
  name: ControlBase
  nameWithType: ControlBase
  fullName: SadConsole.UI.Controls.ControlBase
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: SadConsole.UI.ControlHost.HasNamedControl*
  commentId: Overload:SadConsole.UI.ControlHost.HasNamedControl
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_HasNamedControl_System_String_
  name: HasNamedControl
  nameWithType: ControlHost.HasNamedControl
  fullName: SadConsole.UI.ControlHost.HasNamedControl
- uid: SadConsole.UI.Controls.IContainer.HasNamedControl(System.String)
  commentId: M:SadConsole.UI.Controls.IContainer.HasNamedControl(System.String)
  parent: SadConsole.UI.Controls.IContainer
  isExternal: true
  href: SadConsole.UI.Controls.IContainer.html#SadConsole_UI_Controls_IContainer_HasNamedControl_System_String_
  name: HasNamedControl(string)
  nameWithType: IContainer.HasNamedControl(string)
  fullName: SadConsole.UI.Controls.IContainer.HasNamedControl(string)
  nameWithType.vb: IContainer.HasNamedControl(String)
  fullName.vb: SadConsole.UI.Controls.IContainer.HasNamedControl(String)
  name.vb: HasNamedControl(String)
  spec.csharp:
  - uid: SadConsole.UI.Controls.IContainer.HasNamedControl(System.String)
    name: HasNamedControl
    isExternal: true
    href: SadConsole.UI.Controls.IContainer.html#SadConsole_UI_Controls_IContainer_HasNamedControl_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.IContainer.HasNamedControl(System.String)
    name: HasNamedControl
    isExternal: true
    href: SadConsole.UI.Controls.IContainer.html#SadConsole_UI_Controls_IContainer_HasNamedControl_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.UI.Controls.IContainer.HasNamedControl(System.String,SadConsole.UI.Controls.ControlBase@)
  commentId: M:SadConsole.UI.Controls.IContainer.HasNamedControl(System.String,SadConsole.UI.Controls.ControlBase@)
  parent: SadConsole.UI.Controls.IContainer
  isExternal: true
  href: SadConsole.UI.Controls.IContainer.html#SadConsole_UI_Controls_IContainer_HasNamedControl_System_String_SadConsole_UI_Controls_ControlBase__
  name: HasNamedControl(string, out ControlBase)
  nameWithType: IContainer.HasNamedControl(string, out ControlBase)
  fullName: SadConsole.UI.Controls.IContainer.HasNamedControl(string, out SadConsole.UI.Controls.ControlBase)
  nameWithType.vb: IContainer.HasNamedControl(String, ControlBase)
  fullName.vb: SadConsole.UI.Controls.IContainer.HasNamedControl(String, SadConsole.UI.Controls.ControlBase)
  name.vb: HasNamedControl(String, ControlBase)
  spec.csharp:
  - uid: SadConsole.UI.Controls.IContainer.HasNamedControl(System.String,SadConsole.UI.Controls.ControlBase@)
    name: HasNamedControl
    isExternal: true
    href: SadConsole.UI.Controls.IContainer.html#SadConsole_UI_Controls_IContainer_HasNamedControl_System_String_SadConsole_UI_Controls_ControlBase__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.IContainer.HasNamedControl(System.String,SadConsole.UI.Controls.ControlBase@)
    name: HasNamedControl
    isExternal: true
    href: SadConsole.UI.Controls.IContainer.html#SadConsole_UI_Controls_IContainer_HasNamedControl_System_String_SadConsole_UI_Controls_ControlBase__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: SadConsole.UI.ControlHost.GetNamedControl*
  commentId: Overload:SadConsole.UI.ControlHost.GetNamedControl
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_GetNamedControl_System_String_
  name: GetNamedControl
  nameWithType: ControlHost.GetNamedControl
  fullName: SadConsole.UI.ControlHost.GetNamedControl
- uid: SadConsole.UI.Controls.IContainer.GetNamedControl(System.String)
  commentId: M:SadConsole.UI.Controls.IContainer.GetNamedControl(System.String)
  parent: SadConsole.UI.Controls.IContainer
  isExternal: true
  href: SadConsole.UI.Controls.IContainer.html#SadConsole_UI_Controls_IContainer_GetNamedControl_System_String_
  name: GetNamedControl(string)
  nameWithType: IContainer.GetNamedControl(string)
  fullName: SadConsole.UI.Controls.IContainer.GetNamedControl(string)
  nameWithType.vb: IContainer.GetNamedControl(String)
  fullName.vb: SadConsole.UI.Controls.IContainer.GetNamedControl(String)
  name.vb: GetNamedControl(String)
  spec.csharp:
  - uid: SadConsole.UI.Controls.IContainer.GetNamedControl(System.String)
    name: GetNamedControl
    isExternal: true
    href: SadConsole.UI.Controls.IContainer.html#SadConsole_UI_Controls_IContainer_GetNamedControl_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.IContainer.GetNamedControl(System.String)
    name: GetNamedControl
    isExternal: true
    href: SadConsole.UI.Controls.IContainer.html#SadConsole_UI_Controls_IContainer_GetNamedControl_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SadConsole.UI.ControlHost.TabNextControl*
  commentId: Overload:SadConsole.UI.ControlHost.TabNextControl
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_TabNextControl
  name: TabNextControl
  nameWithType: ControlHost.TabNextControl
  fullName: SadConsole.UI.ControlHost.TabNextControl
- uid: SadConsole.UI.ControlHost.TabPreviousControl*
  commentId: Overload:SadConsole.UI.ControlHost.TabPreviousControl
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_TabPreviousControl
  name: TabPreviousControl
  nameWithType: ControlHost.TabPreviousControl
  fullName: SadConsole.UI.ControlHost.TabPreviousControl
- uid: SadConsole.IScreenObject.Parent
  commentId: P:SadConsole.IScreenObject.Parent
  parent: SadConsole.IScreenObject
  isExternal: true
  href: SadConsole.IScreenObject.html#SadConsole_IScreenObject_Parent
  name: Parent
  nameWithType: IScreenObject.Parent
  fullName: SadConsole.IScreenObject.Parent
- uid: SadConsole.IScreenObject.Children
  commentId: P:SadConsole.IScreenObject.Children
  parent: SadConsole.IScreenObject
  isExternal: true
  href: SadConsole.IScreenObject.html#SadConsole_IScreenObject_Children
  name: Children
  nameWithType: IScreenObject.Children
  fullName: SadConsole.IScreenObject.Children
- uid: SadConsole.UI.ControlHost.TryTabPreviousConsole*
  commentId: Overload:SadConsole.UI.ControlHost.TryTabPreviousConsole
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_TryTabPreviousConsole
  name: TryTabPreviousConsole
  nameWithType: ControlHost.TryTabPreviousConsole
  fullName: SadConsole.UI.ControlHost.TryTabPreviousConsole
- uid: SadConsole.IScreenObject
  commentId: T:SadConsole.IScreenObject
  parent: SadConsole
  isExternal: true
  href: SadConsole.IScreenObject.html
  name: IScreenObject
  nameWithType: IScreenObject
  fullName: SadConsole.IScreenObject
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: SadConsole.UI.ControlHost.TryTabNextConsole*
  commentId: Overload:SadConsole.UI.ControlHost.TryTabNextConsole
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_TryTabNextConsole
  name: TryTabNextConsole
  nameWithType: ControlHost.TryTabNextConsole
  fullName: SadConsole.UI.ControlHost.TryTabNextConsole
- uid: SadConsole.UI.ControlHost.GetThemeColors*
  commentId: Overload:SadConsole.UI.ControlHost.GetThemeColors
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_GetThemeColors
  name: GetThemeColors
  nameWithType: ControlHost.GetThemeColors
  fullName: SadConsole.UI.ControlHost.GetThemeColors
- uid: SadConsole.UI.Colors
  commentId: T:SadConsole.UI.Colors
  parent: SadConsole.UI
  isExternal: true
  href: SadConsole.UI.Colors.html
  name: Colors
  nameWithType: Colors
  fullName: SadConsole.UI.Colors
- uid: SadConsole.UI.ControlHost.ToArray*
  commentId: Overload:SadConsole.UI.ControlHost.ToArray
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_ToArray
  name: ToArray
  nameWithType: ControlHost.ToArray
  fullName: SadConsole.UI.ControlHost.ToArray
- uid: SadConsole.UI.Controls.ControlBase[]
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html
  name: ControlBase[]
  nameWithType: ControlBase[]
  fullName: SadConsole.UI.Controls.ControlBase[]
  nameWithType.vb: ControlBase()
  fullName.vb: SadConsole.UI.Controls.ControlBase()
  name.vb: ControlBase()
  spec.csharp:
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: (
  - name: )
- uid: SadConsole.UI.ControlHost.FocusedControlChanging*
  commentId: Overload:SadConsole.UI.ControlHost.FocusedControlChanging
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_FocusedControlChanging_SadConsole_UI_Controls_ControlBase_SadConsole_UI_Controls_ControlBase_
  name: FocusedControlChanging
  nameWithType: ControlHost.FocusedControlChanging
  fullName: SadConsole.UI.ControlHost.FocusedControlChanging
- uid: SadConsole.UI.Controls.ControlBase.IsFocused
  commentId: P:SadConsole.UI.Controls.ControlBase.IsFocused
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_IsFocused
  name: IsFocused
  nameWithType: ControlBase.IsFocused
  fullName: SadConsole.UI.Controls.ControlBase.IsFocused
- uid: SadConsole.UI.ControlHost.FocusedControlChanged*
  commentId: Overload:SadConsole.UI.ControlHost.FocusedControlChanged
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_FocusedControlChanged_SadConsole_UI_Controls_ControlBase_SadConsole_UI_Controls_ControlBase_
  name: FocusedControlChanged
  nameWithType: ControlHost.FocusedControlChanged
  fullName: SadConsole.UI.ControlHost.FocusedControlChanged
- uid: SadConsole.UI.Controls.ControlBase.CanFocus
  commentId: P:SadConsole.UI.Controls.ControlBase.CanFocus
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_CanFocus
  name: CanFocus
  nameWithType: ControlBase.CanFocus
  fullName: SadConsole.UI.Controls.ControlBase.CanFocus
- uid: SadConsole.UI.ControlHost.CanFocusControl*
  commentId: Overload:SadConsole.UI.ControlHost.CanFocusControl
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_CanFocusControl_SadConsole_UI_Controls_ControlBase_
  name: CanFocusControl
  nameWithType: ControlHost.CanFocusControl
  fullName: SadConsole.UI.ControlHost.CanFocusControl
- uid: SadConsole.UI.ControlHost.ReOrderControls*
  commentId: Overload:SadConsole.UI.ControlHost.ReOrderControls
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_ReOrderControls
  name: ReOrderControls
  nameWithType: ControlHost.ReOrderControls
  fullName: SadConsole.UI.ControlHost.ReOrderControls
- uid: SadConsole.UI.ControlHost.CaptureControl*
  commentId: Overload:SadConsole.UI.ControlHost.CaptureControl
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_CaptureControl_SadConsole_UI_Controls_ControlBase_
  name: CaptureControl
  nameWithType: ControlHost.CaptureControl
  fullName: SadConsole.UI.ControlHost.CaptureControl
- uid: SadConsole.UI.ControlHost.ReleaseControl*
  commentId: Overload:SadConsole.UI.ControlHost.ReleaseControl
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_ReleaseControl
  name: ReleaseControl
  nameWithType: ControlHost.ReleaseControl
  fullName: SadConsole.UI.ControlHost.ReleaseControl
- uid: SadConsole.UI.ControlHost.ForceRedrawAllControls*
  commentId: Overload:SadConsole.UI.ControlHost.ForceRedrawAllControls
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_ForceRedrawAllControls
  name: ForceRedrawAllControls
  nameWithType: ControlHost.ForceRedrawAllControls
  fullName: SadConsole.UI.ControlHost.ForceRedrawAllControls
- uid: SadConsole.UI.ControlHost.GetEnumerator*
  commentId: Overload:SadConsole.UI.ControlHost.GetEnumerator
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_GetEnumerator
  name: GetEnumerator
  nameWithType: ControlHost.GetEnumerator
  fullName: SadConsole.UI.ControlHost.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.ControlBase}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.ControlBase}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.ControlBase}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<ControlBase>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<SadConsole.UI.Controls.ControlBase>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of ControlBase).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.UI.Controls.ControlBase).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.ControlBase}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.ControlBase}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{SadConsole.UI.Controls.ControlBase}
  commentId: T:System.Collections.Generic.IEnumerator{SadConsole.UI.Controls.ControlBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<ControlBase>
  nameWithType: IEnumerator<ControlBase>
  fullName: System.Collections.Generic.IEnumerator<SadConsole.UI.Controls.ControlBase>
  nameWithType.vb: IEnumerator(Of ControlBase)
  fullName.vb: System.Collections.Generic.IEnumerator(Of SadConsole.UI.Controls.ControlBase)
  name.vb: IEnumerator(Of ControlBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.UI.ControlHost.IndexOf*
  commentId: Overload:SadConsole.UI.ControlHost.IndexOf
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_IndexOf_SadConsole_UI_Controls_ControlBase_
  name: IndexOf
  nameWithType: ControlHost.IndexOf
  fullName: SadConsole.UI.ControlHost.IndexOf
- uid: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.IndexOf(SadConsole.UI.Controls.ControlBase)
  commentId: M:System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.IndexOf(SadConsole.UI.Controls.ControlBase)
  parent: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(ControlBase)
  nameWithType: IList<ControlBase>.IndexOf(ControlBase)
  fullName: System.Collections.Generic.IList<SadConsole.UI.Controls.ControlBase>.IndexOf(SadConsole.UI.Controls.ControlBase)
  nameWithType.vb: IList(Of ControlBase).IndexOf(ControlBase)
  fullName.vb: System.Collections.Generic.IList(Of SadConsole.UI.Controls.ControlBase).IndexOf(SadConsole.UI.Controls.ControlBase)
  spec.csharp:
  - uid: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.IndexOf(SadConsole.UI.Controls.ControlBase)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.IndexOf(SadConsole.UI.Controls.ControlBase)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: SadConsole.UI.Controls.ControlBase.TabIndex
  commentId: P:SadConsole.UI.Controls.ControlBase.TabIndex
  parent: SadConsole.UI.Controls.ControlBase
  isExternal: true
  href: SadConsole.UI.Controls.ControlBase.html#SadConsole_UI_Controls_ControlBase_TabIndex
  name: TabIndex
  nameWithType: ControlBase.TabIndex
  fullName: SadConsole.UI.Controls.ControlBase.TabIndex
- uid: SadConsole.UI.ControlHost.Insert*
  commentId: Overload:SadConsole.UI.ControlHost.Insert
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_Insert_System_Int32_SadConsole_UI_Controls_ControlBase_
  name: Insert
  nameWithType: ControlHost.Insert
  fullName: SadConsole.UI.ControlHost.Insert
- uid: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.Insert(System.Int32,SadConsole.UI.Controls.ControlBase)
  commentId: M:System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.Insert(System.Int32,SadConsole.UI.Controls.ControlBase)
  parent: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, ControlBase)
  nameWithType: IList<ControlBase>.Insert(int, ControlBase)
  fullName: System.Collections.Generic.IList<SadConsole.UI.Controls.ControlBase>.Insert(int, SadConsole.UI.Controls.ControlBase)
  nameWithType.vb: IList(Of ControlBase).Insert(Integer, ControlBase)
  fullName.vb: System.Collections.Generic.IList(Of SadConsole.UI.Controls.ControlBase).Insert(Integer, SadConsole.UI.Controls.ControlBase)
  name.vb: Insert(Integer, ControlBase)
  spec.csharp:
  - uid: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.Insert(System.Int32,SadConsole.UI.Controls.ControlBase)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.Insert(System.Int32,SadConsole.UI.Controls.ControlBase)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.UI.ControlHost.RemoveAt*
  commentId: Overload:SadConsole.UI.ControlHost.RemoveAt
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: ControlHost.RemoveAt
  fullName: SadConsole.UI.ControlHost.RemoveAt
- uid: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<ControlBase>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<SadConsole.UI.Controls.ControlBase>.RemoveAt(int)
  nameWithType.vb: IList(Of ControlBase).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of SadConsole.UI.Controls.ControlBase).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{SadConsole.UI.Controls.ControlBase}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SadConsole.UI.ControlHost.Add*
  commentId: Overload:SadConsole.UI.ControlHost.Add
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_Add_SadConsole_UI_Controls_ControlBase_
  name: Add
  nameWithType: ControlHost.Add
  fullName: SadConsole.UI.ControlHost.Add
- uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Add(SadConsole.UI.Controls.ControlBase)
  commentId: M:System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Add(SadConsole.UI.Controls.ControlBase)
  parent: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(ControlBase)
  nameWithType: ICollection<ControlBase>.Add(ControlBase)
  fullName: System.Collections.Generic.ICollection<SadConsole.UI.Controls.ControlBase>.Add(SadConsole.UI.Controls.ControlBase)
  nameWithType.vb: ICollection(Of ControlBase).Add(ControlBase)
  fullName.vb: System.Collections.Generic.ICollection(Of SadConsole.UI.Controls.ControlBase).Add(SadConsole.UI.Controls.ControlBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Add(SadConsole.UI.Controls.ControlBase)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Add(SadConsole.UI.Controls.ControlBase)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: SadConsole.UI.ControlHost.Clear*
  commentId: Overload:SadConsole.UI.ControlHost.Clear
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_Clear
  name: Clear
  nameWithType: ControlHost.Clear
  fullName: SadConsole.UI.ControlHost.Clear
- uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Clear
  commentId: M:System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Clear
  parent: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<ControlBase>.Clear()
  fullName: System.Collections.Generic.ICollection<SadConsole.UI.Controls.ControlBase>.Clear()
  nameWithType.vb: ICollection(Of ControlBase).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of SadConsole.UI.Controls.ControlBase).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: SadConsole.UI.ControlHost.Contains*
  commentId: Overload:SadConsole.UI.ControlHost.Contains
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_Contains_SadConsole_UI_Controls_ControlBase_
  name: Contains
  nameWithType: ControlHost.Contains
  fullName: SadConsole.UI.ControlHost.Contains
- uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Contains(SadConsole.UI.Controls.ControlBase)
  commentId: M:System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Contains(SadConsole.UI.Controls.ControlBase)
  parent: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(ControlBase)
  nameWithType: ICollection<ControlBase>.Contains(ControlBase)
  fullName: System.Collections.Generic.ICollection<SadConsole.UI.Controls.ControlBase>.Contains(SadConsole.UI.Controls.ControlBase)
  nameWithType.vb: ICollection(Of ControlBase).Contains(ControlBase)
  fullName.vb: System.Collections.Generic.ICollection(Of SadConsole.UI.Controls.ControlBase).Contains(SadConsole.UI.Controls.ControlBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Contains(SadConsole.UI.Controls.ControlBase)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Contains(SadConsole.UI.Controls.ControlBase)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: SadConsole.UI.ControlHost.CopyTo*
  commentId: Overload:SadConsole.UI.ControlHost.CopyTo
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_CopyTo_SadConsole_UI_Controls_ControlBase___System_Int32_
  name: CopyTo
  nameWithType: ControlHost.CopyTo
  fullName: SadConsole.UI.ControlHost.CopyTo
- uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.CopyTo(SadConsole.UI.Controls.ControlBase[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.CopyTo(SadConsole.UI.Controls.ControlBase[],System.Int32)
  parent: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(ControlBase[], int)
  nameWithType: ICollection<ControlBase>.CopyTo(ControlBase[], int)
  fullName: System.Collections.Generic.ICollection<SadConsole.UI.Controls.ControlBase>.CopyTo(SadConsole.UI.Controls.ControlBase[], int)
  nameWithType.vb: ICollection(Of ControlBase).CopyTo(ControlBase(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of SadConsole.UI.Controls.ControlBase).CopyTo(SadConsole.UI.Controls.ControlBase(), Integer)
  name.vb: CopyTo(ControlBase(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.CopyTo(SadConsole.UI.Controls.ControlBase[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.CopyTo(SadConsole.UI.Controls.ControlBase[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: SadConsole.UI.Controls.ControlBase
    name: ControlBase
    isExternal: true
    href: SadConsole.UI.Controls.ControlBase.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SadConsole.UI.ControlHost.Remove*
  commentId: Overload:SadConsole.UI.ControlHost.Remove
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_Remove_SadConsole_UI_Controls_ControlBase_
  name: Remove
  nameWithType: ControlHost.Remove
  fullName: SadConsole.UI.ControlHost.Remove
- uid: SadConsole.UI.ControlHost.#ctor*
  commentId: Overload:SadConsole.UI.ControlHost.#ctor
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost__ctor
  name: ControlHost
  nameWithType: ControlHost.ControlHost
  fullName: SadConsole.UI.ControlHost.ControlHost
  nameWithType.vb: ControlHost.New
  fullName.vb: SadConsole.UI.ControlHost.New
  name.vb: New
- uid: SadConsole.UI.ControlHost.SortOrder*
  commentId: Overload:SadConsole.UI.ControlHost.SortOrder
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_SortOrder
  name: SortOrder
  nameWithType: ControlHost.SortOrder
  fullName: SadConsole.UI.ControlHost.SortOrder
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: SadConsole.UI.ControlHost.Item*
  commentId: Overload:SadConsole.UI.ControlHost.Item
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_Item_System_Int32_
  name: this
  nameWithType: ControlHost.this
  fullName: SadConsole.UI.ControlHost.this
  nameWithType.vb: ControlHost.this[]
  fullName.vb: SadConsole.UI.ControlHost.this[]
  name.vb: this[]
- uid: SadConsole.UI.ControlHost.ParentConsole*
  commentId: Overload:SadConsole.UI.ControlHost.ParentConsole
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_ParentConsole
  name: ParentConsole
  nameWithType: ControlHost.ParentConsole
  fullName: SadConsole.UI.ControlHost.ParentConsole
- uid: SadConsole.IScreenSurface
  commentId: T:SadConsole.IScreenSurface
  parent: SadConsole
  isExternal: true
  href: SadConsole.IScreenSurface.html
  name: IScreenSurface
  nameWithType: IScreenSurface
  fullName: SadConsole.IScreenSurface
- uid: SadConsole.UI.ControlHost.ThemeColors*
  commentId: Overload:SadConsole.UI.ControlHost.ThemeColors
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_ThemeColors
  name: ThemeColors
  nameWithType: ControlHost.ThemeColors
  fullName: SadConsole.UI.ControlHost.ThemeColors
- uid: SadConsole.UI.ControlHost.IsDirty*
  commentId: Overload:SadConsole.UI.ControlHost.IsDirty
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_IsDirty
  name: IsDirty
  nameWithType: ControlHost.IsDirty
  fullName: SadConsole.UI.ControlHost.IsDirty
- uid: SadConsole.UI.ControlHost.CapturedControl*
  commentId: Overload:SadConsole.UI.ControlHost.CapturedControl
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_CapturedControl
  name: CapturedControl
  nameWithType: ControlHost.CapturedControl
  fullName: SadConsole.UI.ControlHost.CapturedControl
- uid: SadConsole.UI.ControlHost.FocusedControl*
  commentId: Overload:SadConsole.UI.ControlHost.FocusedControl
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_FocusedControl
  name: FocusedControl
  nameWithType: ControlHost.FocusedControl
  fullName: SadConsole.UI.ControlHost.FocusedControl
- uid: SadConsole.UI.ControlHost.ClearOnAdded*
  commentId: Overload:SadConsole.UI.ControlHost.ClearOnAdded
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_ClearOnAdded
  name: ClearOnAdded
  nameWithType: ControlHost.ClearOnAdded
  fullName: SadConsole.UI.ControlHost.ClearOnAdded
- uid: SadConsole.UI.ControlHost.DisableCursorOnAdded*
  commentId: Overload:SadConsole.UI.ControlHost.DisableCursorOnAdded
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_DisableCursorOnAdded
  name: DisableCursorOnAdded
  nameWithType: ControlHost.DisableCursorOnAdded
  fullName: SadConsole.UI.ControlHost.DisableCursorOnAdded
- uid: SadConsole.UI.ControlHost.CanTabToNextConsole*
  commentId: Overload:SadConsole.UI.ControlHost.CanTabToNextConsole
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_CanTabToNextConsole
  name: CanTabToNextConsole
  nameWithType: ControlHost.CanTabToNextConsole
  fullName: SadConsole.UI.ControlHost.CanTabToNextConsole
- uid: SadConsole.UI.ControlHost.CanTabToNextConsole
  commentId: P:SadConsole.UI.ControlHost.CanTabToNextConsole
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_CanTabToNextConsole
  name: CanTabToNextConsole
  nameWithType: ControlHost.CanTabToNextConsole
  fullName: SadConsole.UI.ControlHost.CanTabToNextConsole
- uid: SadConsole.UI.ControlHost.NextTabConsole*
  commentId: Overload:SadConsole.UI.ControlHost.NextTabConsole
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_NextTabConsole
  name: NextTabConsole
  nameWithType: ControlHost.NextTabConsole
  fullName: SadConsole.UI.ControlHost.NextTabConsole
- uid: SadConsole.UI.ControlHost.PreviousTabConsole*
  commentId: Overload:SadConsole.UI.ControlHost.PreviousTabConsole
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_PreviousTabConsole
  name: PreviousTabConsole
  nameWithType: ControlHost.PreviousTabConsole
  fullName: SadConsole.UI.ControlHost.PreviousTabConsole
- uid: SadConsole.UI.ControlHost.DisableControlFocusing*
  commentId: Overload:SadConsole.UI.ControlHost.DisableControlFocusing
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_DisableControlFocusing
  name: DisableControlFocusing
  nameWithType: ControlHost.DisableControlFocusing
  fullName: SadConsole.UI.ControlHost.DisableControlFocusing
- uid: SadConsole.UI.ControlHost.Count*
  commentId: Overload:SadConsole.UI.ControlHost.Count
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_Count
  name: Count
  nameWithType: ControlHost.Count
  fullName: SadConsole.UI.ControlHost.Count
- uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Count
  commentId: P:System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.Count
  parent: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<ControlBase>.Count
  fullName: System.Collections.Generic.ICollection<SadConsole.UI.Controls.ControlBase>.Count
  nameWithType.vb: ICollection(Of ControlBase).Count
  fullName.vb: System.Collections.Generic.ICollection(Of SadConsole.UI.Controls.ControlBase).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: SadConsole.UI.ControlHost.IsReadOnly*
  commentId: Overload:SadConsole.UI.ControlHost.IsReadOnly
  isExternal: true
  href: SadConsole.UI.ControlHost.html#SadConsole_UI_ControlHost_IsReadOnly
  name: IsReadOnly
  nameWithType: ControlHost.IsReadOnly
  fullName: SadConsole.UI.ControlHost.IsReadOnly
- uid: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}.IsReadOnly
  parent: System.Collections.Generic.ICollection{SadConsole.UI.Controls.ControlBase}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<ControlBase>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<SadConsole.UI.Controls.ControlBase>.IsReadOnly
  nameWithType.vb: ICollection(Of ControlBase).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of SadConsole.UI.Controls.ControlBase).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: SadConsole.UI.Controls.IContainer.Item(System.String)
  commentId: P:SadConsole.UI.Controls.IContainer.Item(System.String)
  parent: SadConsole.UI.Controls.IContainer
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: this[string]
  nameWithType: IContainer.this[string]
  fullName: SadConsole.UI.Controls.IContainer.this[string]
  nameWithType.vb: IContainer.this[](String)
  fullName.vb: SadConsole.UI.Controls.IContainer.this[](String)
  name.vb: this[](String)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ']'
  spec.vb:
  - uid: SadConsole.UI.Controls.IContainer.Item(System.String)
    name: this[]
    isExternal: true
    href: SadConsole.UI.Controls.IContainer.html#SadConsole_UI_Controls_IContainer_Item_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
