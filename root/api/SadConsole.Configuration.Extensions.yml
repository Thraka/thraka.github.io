### YamlMime:ManagedReference
items:
- uid: SadConsole.Configuration.Extensions
  commentId: T:SadConsole.Configuration.Extensions
  id: Extensions
  parent: SadConsole.Configuration
  children:
  - SadConsole.Configuration.Extensions.AddFrameRenderEvent(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  - SadConsole.Configuration.Extensions.AddFrameUpdateEvent(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  - SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder,System.Action{SadConsole.Configuration.FontConfig,SadConsole.Game})
  - SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder,System.Boolean)
  - SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder,System.String,System.String[])
  - SadConsole.Configuration.Extensions.FixOldFontName(SadConsole.Configuration.Builder)
  - SadConsole.Configuration.Extensions.IsStartingScreenFocused(SadConsole.Configuration.Builder,System.Boolean)
  - SadConsole.Configuration.Extensions.OnEnd(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  - SadConsole.Configuration.Extensions.OnStart(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  - SadConsole.Configuration.Extensions.SetScreenSize(SadConsole.Configuration.Builder,System.Int32,System.Int32)
  - SadConsole.Configuration.Extensions.SetSplashScreen(SadConsole.Configuration.Builder,System.Func{SadConsole.Game,SadConsole.ScreenSurface[]})
  - SadConsole.Configuration.Extensions.SetSplashScreen``1(SadConsole.Configuration.Builder)
  - SadConsole.Configuration.Extensions.SetStartingScreen(SadConsole.Configuration.Builder,System.Func{SadConsole.Game,SadConsole.IScreenObject})
  - SadConsole.Configuration.Extensions.SetStartingScreen``1(SadConsole.Configuration.Builder)
  - SadConsole.Configuration.Extensions.ShowMonoGameFPS(SadConsole.Configuration.Builder)
  - SadConsole.Configuration.Extensions.UseDefaultConsole(SadConsole.Configuration.Builder)
  - SadConsole.Configuration.Extensions.UseUnlimitedFPS(SadConsole.Configuration.Builder)
  - SadConsole.Configuration.Extensions.WithMonoGameCtor(SadConsole.Configuration.Builder,System.Action{SadConsole.Host.Game})
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: SadConsole.Configuration.Extensions
  type: Class
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Extensions to the <xref href="SadConsole.Configuration.Builder" data-throw-if-not-resolved="false"></xref> type.
  example: []
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: SadConsole.Configuration.Extensions.OnStart(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  commentId: M:SadConsole.Configuration.Extensions.OnStart(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  id: OnStart(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: OnStart(Builder, EventHandler<GameHost>)
  nameWithType: Extensions.OnStart(Builder, EventHandler<GameHost>)
  fullName: SadConsole.Configuration.Extensions.OnStart(SadConsole.Configuration.Builder, System.EventHandler<SadConsole.GameHost>)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Sets an event handler for the <xref href="SadConsole.GameHost.Started" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public static Builder OnStart(this Builder configBuilder, EventHandler<GameHost> instance_Started)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: instance_Started
      type: System.EventHandler{SadConsole.GameHost}
      description: The event handler
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function OnStart(configBuilder As Builder, instance_Started As EventHandler(Of GameHost)) As Builder
  overload: SadConsole.Configuration.Extensions.OnStart*
  nameWithType.vb: Extensions.OnStart(Builder, EventHandler(Of GameHost))
  fullName.vb: SadConsole.Configuration.Extensions.OnStart(SadConsole.Configuration.Builder, System.EventHandler(Of SadConsole.GameHost))
  name.vb: OnStart(Builder, EventHandler(Of GameHost))
- uid: SadConsole.Configuration.Extensions.OnEnd(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  commentId: M:SadConsole.Configuration.Extensions.OnEnd(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  id: OnEnd(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: OnEnd(Builder, EventHandler<GameHost>)
  nameWithType: Extensions.OnEnd(Builder, EventHandler<GameHost>)
  fullName: SadConsole.Configuration.Extensions.OnEnd(SadConsole.Configuration.Builder, System.EventHandler<SadConsole.GameHost>)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Sets an event handler for the <xref href="SadConsole.GameHost.Ending" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public static Builder OnEnd(this Builder configBuilder, EventHandler<GameHost> instance_Ending)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: instance_Ending
      type: System.EventHandler{SadConsole.GameHost}
      description: The event handler
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function OnEnd(configBuilder As Builder, instance_Ending As EventHandler(Of GameHost)) As Builder
  overload: SadConsole.Configuration.Extensions.OnEnd*
  nameWithType.vb: Extensions.OnEnd(Builder, EventHandler(Of GameHost))
  fullName.vb: SadConsole.Configuration.Extensions.OnEnd(SadConsole.Configuration.Builder, System.EventHandler(Of SadConsole.GameHost))
  name.vb: OnEnd(Builder, EventHandler(Of GameHost))
- uid: SadConsole.Configuration.Extensions.AddFrameUpdateEvent(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  commentId: M:SadConsole.Configuration.Extensions.AddFrameUpdateEvent(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  id: AddFrameUpdateEvent(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: AddFrameUpdateEvent(Builder, EventHandler<GameHost>)
  nameWithType: Extensions.AddFrameUpdateEvent(Builder, EventHandler<GameHost>)
  fullName: SadConsole.Configuration.Extensions.AddFrameUpdateEvent(SadConsole.Configuration.Builder, System.EventHandler<SadConsole.GameHost>)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Sets an event handler for the <xref href="SadConsole.GameHost.FrameUpdate" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public static Builder AddFrameUpdateEvent(this Builder configBuilder, EventHandler<GameHost> instance_FrameUpdate)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: instance_FrameUpdate
      type: System.EventHandler{SadConsole.GameHost}
      description: The event handler
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function AddFrameUpdateEvent(configBuilder As Builder, instance_FrameUpdate As EventHandler(Of GameHost)) As Builder
  overload: SadConsole.Configuration.Extensions.AddFrameUpdateEvent*
  nameWithType.vb: Extensions.AddFrameUpdateEvent(Builder, EventHandler(Of GameHost))
  fullName.vb: SadConsole.Configuration.Extensions.AddFrameUpdateEvent(SadConsole.Configuration.Builder, System.EventHandler(Of SadConsole.GameHost))
  name.vb: AddFrameUpdateEvent(Builder, EventHandler(Of GameHost))
- uid: SadConsole.Configuration.Extensions.AddFrameRenderEvent(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  commentId: M:SadConsole.Configuration.Extensions.AddFrameRenderEvent(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  id: AddFrameRenderEvent(SadConsole.Configuration.Builder,System.EventHandler{SadConsole.GameHost})
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: AddFrameRenderEvent(Builder, EventHandler<GameHost>)
  nameWithType: Extensions.AddFrameRenderEvent(Builder, EventHandler<GameHost>)
  fullName: SadConsole.Configuration.Extensions.AddFrameRenderEvent(SadConsole.Configuration.Builder, System.EventHandler<SadConsole.GameHost>)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Sets an event handler for the <xref href="SadConsole.GameHost.FrameRender" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public static Builder AddFrameRenderEvent(this Builder configBuilder, EventHandler<GameHost> instance_FrameRender)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: instance_FrameRender
      type: System.EventHandler{SadConsole.GameHost}
      description: The event handler
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function AddFrameRenderEvent(configBuilder As Builder, instance_FrameRender As EventHandler(Of GameHost)) As Builder
  overload: SadConsole.Configuration.Extensions.AddFrameRenderEvent*
  nameWithType.vb: Extensions.AddFrameRenderEvent(Builder, EventHandler(Of GameHost))
  fullName.vb: SadConsole.Configuration.Extensions.AddFrameRenderEvent(SadConsole.Configuration.Builder, System.EventHandler(Of SadConsole.GameHost))
  name.vb: AddFrameRenderEvent(Builder, EventHandler(Of GameHost))
- uid: SadConsole.Configuration.Extensions.WithMonoGameCtor(SadConsole.Configuration.Builder,System.Action{SadConsole.Host.Game})
  commentId: M:SadConsole.Configuration.Extensions.WithMonoGameCtor(SadConsole.Configuration.Builder,System.Action{SadConsole.Host.Game})
  id: WithMonoGameCtor(SadConsole.Configuration.Builder,System.Action{SadConsole.Host.Game})
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: WithMonoGameCtor(Builder, Action<Game>)
  nameWithType: Extensions.WithMonoGameCtor(Builder, Action<Game>)
  fullName: SadConsole.Configuration.Extensions.WithMonoGameCtor(SadConsole.Configuration.Builder, System.Action<SadConsole.Host.Game>)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: The <code class="paramref">monogameCtorCallback</code> method is called by the MonoGame constructor. Some MonoGame specific settings may only be settable via the constructor.
  example: []
  syntax:
    content: public static Builder WithMonoGameCtor(this Builder configBuilder, Action<Game> monogameCtorCallback)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: monogameCtorCallback
      type: System.Action{SadConsole.Host.Game}
      description: A method.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration object.
    content.vb: Public Shared Function WithMonoGameCtor(configBuilder As Builder, monogameCtorCallback As Action(Of Game)) As Builder
  overload: SadConsole.Configuration.Extensions.WithMonoGameCtor*
  nameWithType.vb: Extensions.WithMonoGameCtor(Builder, Action(Of Game))
  fullName.vb: SadConsole.Configuration.Extensions.WithMonoGameCtor(SadConsole.Configuration.Builder, System.Action(Of SadConsole.Host.Game))
  name.vb: WithMonoGameCtor(Builder, Action(Of Game))
- uid: SadConsole.Configuration.Extensions.UseDefaultConsole(SadConsole.Configuration.Builder)
  commentId: M:SadConsole.Configuration.Extensions.UseDefaultConsole(SadConsole.Configuration.Builder)
  id: UseDefaultConsole(SadConsole.Configuration.Builder)
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: UseDefaultConsole(Builder)
  nameWithType: Extensions.UseDefaultConsole(Builder)
  fullName: SadConsole.Configuration.Extensions.UseDefaultConsole(SadConsole.Configuration.Builder)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Sets the <xref href="SadConsole.GameHost.StartingConsole" data-throw-if-not-resolved="false"></xref> and <xref href="SadConsole.GameHost.Screen" data-throw-if-not-resolved="false"></xref> properties to new console when the game starts.
  example: []
  syntax:
    content: public static Builder UseDefaultConsole(this Builder configBuilder)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function UseDefaultConsole(configBuilder As Builder) As Builder
  overload: SadConsole.Configuration.Extensions.UseDefaultConsole*
- uid: SadConsole.Configuration.Extensions.IsStartingScreenFocused(SadConsole.Configuration.Builder,System.Boolean)
  commentId: M:SadConsole.Configuration.Extensions.IsStartingScreenFocused(SadConsole.Configuration.Builder,System.Boolean)
  id: IsStartingScreenFocused(SadConsole.Configuration.Builder,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: IsStartingScreenFocused(Builder, bool)
  nameWithType: Extensions.IsStartingScreenFocused(Builder, bool)
  fullName: SadConsole.Configuration.Extensions.IsStartingScreenFocused(SadConsole.Configuration.Builder, bool)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Either focuses or unfocuses the starting screen.
  example: []
  syntax:
    content: public static Builder IsStartingScreenFocused(this Builder configBuilder, bool value)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: value
      type: System.Boolean
      description: Indicates whether or not <xref href="SadConsole.GameHost.Screen" data-throw-if-not-resolved="false"></xref> is focused.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function IsStartingScreenFocused(configBuilder As Builder, value As Boolean) As Builder
  overload: SadConsole.Configuration.Extensions.IsStartingScreenFocused*
  nameWithType.vb: Extensions.IsStartingScreenFocused(Builder, Boolean)
  fullName.vb: SadConsole.Configuration.Extensions.IsStartingScreenFocused(SadConsole.Configuration.Builder, Boolean)
  name.vb: IsStartingScreenFocused(Builder, Boolean)
- uid: SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder,System.Action{SadConsole.Configuration.FontConfig,SadConsole.Game})
  commentId: M:SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder,System.Action{SadConsole.Configuration.FontConfig,SadConsole.Game})
  id: ConfigureFonts(SadConsole.Configuration.Builder,System.Action{SadConsole.Configuration.FontConfig,SadConsole.Game})
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: ConfigureFonts(Builder, Action<FontConfig, Game>)
  nameWithType: Extensions.ConfigureFonts(Builder, Action<FontConfig, Game>)
  fullName: SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder, System.Action<SadConsole.Configuration.FontConfig, SadConsole.Game>)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Configures which default font to use during game startup, as well as which other fonts to load for the game.
  example: []
  syntax:
    content: public static Builder ConfigureFonts(this Builder configBuilder, Action<FontConfig, Game> fontLoader)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: fontLoader
      type: System.Action{SadConsole.Configuration.FontConfig,SadConsole.Game}
      description: A method that provides access to the <xref href="SadConsole.Configuration.FontConfig" data-throw-if-not-resolved="false"></xref> object that loads fonts.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function ConfigureFonts(configBuilder As Builder, fontLoader As Action(Of FontConfig, Game)) As Builder
  overload: SadConsole.Configuration.Extensions.ConfigureFonts*
  nameWithType.vb: Extensions.ConfigureFonts(Builder, Action(Of FontConfig, Game))
  fullName.vb: SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder, System.Action(Of SadConsole.Configuration.FontConfig, SadConsole.Game))
  name.vb: ConfigureFonts(Builder, Action(Of FontConfig, Game))
- uid: SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder,System.String,System.String[])
  commentId: M:SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder,System.String,System.String[])
  id: ConfigureFonts(SadConsole.Configuration.Builder,System.String,System.String[])
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: ConfigureFonts(Builder, string, string[]?)
  nameWithType: Extensions.ConfigureFonts(Builder, string, string[]?)
  fullName: SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder, string, string[]?)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Configures SadConsole to use the specified font file as the default font.
  example: []
  syntax:
    content: public static Builder ConfigureFonts(this Builder configBuilder, string customDefaultFont, string[]? extraFonts = null)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: customDefaultFont
      type: System.String
      description: Creates the font config for SadConsole using this font file as the default.
    - id: extraFonts
      type: System.String[]
      description: Extra fonts to load into SadConsole.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function ConfigureFonts(configBuilder As Builder, customDefaultFont As String, extraFonts As String() = Nothing) As Builder
  overload: SadConsole.Configuration.Extensions.ConfigureFonts*
  nameWithType.vb: Extensions.ConfigureFonts(Builder, String, String())
  fullName.vb: SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder, String, String())
  name.vb: ConfigureFonts(Builder, String, String())
- uid: SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder,System.Boolean)
  commentId: M:SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder,System.Boolean)
  id: ConfigureFonts(SadConsole.Configuration.Builder,System.Boolean)
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: ConfigureFonts(Builder, bool)
  nameWithType: Extensions.ConfigureFonts(Builder, bool)
  fullName: SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder, bool)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Configures SadConsole to use the built in default fonts.
  example: []
  syntax:
    content: public static Builder ConfigureFonts(this Builder configBuilder, bool useExtendedDefault = false)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: useExtendedDefault
      type: System.Boolean
      description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, SadConsole sets the default font to <xref href="SadConsole.GameHost.EmbeddedFontExtended" data-throw-if-not-resolved="false"></xref>; otherwise <xref href="SadConsole.GameHost.EmbeddedFont" data-throw-if-not-resolved="false"></xref> is used.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function ConfigureFonts(configBuilder As Builder, useExtendedDefault As Boolean = False) As Builder
  overload: SadConsole.Configuration.Extensions.ConfigureFonts*
  nameWithType.vb: Extensions.ConfigureFonts(Builder, Boolean)
  fullName.vb: SadConsole.Configuration.Extensions.ConfigureFonts(SadConsole.Configuration.Builder, Boolean)
  name.vb: ConfigureFonts(Builder, Boolean)
- uid: SadConsole.Configuration.Extensions.FixOldFontName(SadConsole.Configuration.Builder)
  commentId: M:SadConsole.Configuration.Extensions.FixOldFontName(SadConsole.Configuration.Builder)
  id: FixOldFontName(SadConsole.Configuration.Builder)
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: FixOldFontName(Builder)
  nameWithType: Extensions.FixOldFontName(Builder)
  fullName: SadConsole.Configuration.Extensions.FixOldFontName(SadConsole.Configuration.Builder)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Adds the embedded fonts to the font dictionary with the old incorrect name.
  example: []
  syntax:
    content: public static Builder FixOldFontName(this Builder configBuilder)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function FixOldFontName(configBuilder As Builder) As Builder
  overload: SadConsole.Configuration.Extensions.FixOldFontName*
- uid: SadConsole.Configuration.Extensions.UseUnlimitedFPS(SadConsole.Configuration.Builder)
  commentId: M:SadConsole.Configuration.Extensions.UseUnlimitedFPS(SadConsole.Configuration.Builder)
  id: UseUnlimitedFPS(SadConsole.Configuration.Builder)
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: UseUnlimitedFPS(Builder)
  nameWithType: Extensions.UseUnlimitedFPS(Builder)
  fullName: SadConsole.Configuration.Extensions.UseUnlimitedFPS(SadConsole.Configuration.Builder)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Unlimited FPS when rendering (normally limited to 60fps). Must be set before the game is created.
  example: []
  syntax:
    content: public static Builder UseUnlimitedFPS(this Builder configBuilder)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function UseUnlimitedFPS(configBuilder As Builder) As Builder
  overload: SadConsole.Configuration.Extensions.UseUnlimitedFPS*
- uid: SadConsole.Configuration.Extensions.ShowMonoGameFPS(SadConsole.Configuration.Builder)
  commentId: M:SadConsole.Configuration.Extensions.ShowMonoGameFPS(SadConsole.Configuration.Builder)
  id: ShowMonoGameFPS(SadConsole.Configuration.Builder)
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: ShowMonoGameFPS(Builder)
  nameWithType: Extensions.ShowMonoGameFPS(Builder)
  fullName: SadConsole.Configuration.Extensions.ShowMonoGameFPS(SadConsole.Configuration.Builder)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Adds a MonoGame game component that renders the frames per-second of the game.
  example: []
  syntax:
    content: public static Builder ShowMonoGameFPS(this Builder configBuilder)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function ShowMonoGameFPS(configBuilder As Builder) As Builder
  overload: SadConsole.Configuration.Extensions.ShowMonoGameFPS*
- uid: SadConsole.Configuration.Extensions.SetSplashScreen``1(SadConsole.Configuration.Builder)
  commentId: M:SadConsole.Configuration.Extensions.SetSplashScreen``1(SadConsole.Configuration.Builder)
  id: SetSplashScreen``1(SadConsole.Configuration.Builder)
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: SetSplashScreen<TSplashScreen>(Builder)
  nameWithType: Extensions.SetSplashScreen<TSplashScreen>(Builder)
  fullName: SadConsole.Configuration.Extensions.SetSplashScreen<TSplashScreen>(SadConsole.Configuration.Builder)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Sets the startup splash screen to the specified object.
  example: []
  syntax:
    content: 'public static Builder SetSplashScreen<TSplashScreen>(this Builder configBuilder) where TSplashScreen : IScreenSurface, new()'
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    typeParameters:
    - id: TSplashScreen
      description: A parameterless <xref href="SadConsole.IScreenSurface" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function SetSplashScreen(Of TSplashScreen As {IScreenSurface, New})(configBuilder As Builder) As Builder
  overload: SadConsole.Configuration.Extensions.SetSplashScreen*
  nameWithType.vb: Extensions.SetSplashScreen(Of TSplashScreen)(Builder)
  fullName.vb: SadConsole.Configuration.Extensions.SetSplashScreen(Of TSplashScreen)(SadConsole.Configuration.Builder)
  name.vb: SetSplashScreen(Of TSplashScreen)(Builder)
- uid: SadConsole.Configuration.Extensions.SetSplashScreen(SadConsole.Configuration.Builder,System.Func{SadConsole.Game,SadConsole.ScreenSurface[]})
  commentId: M:SadConsole.Configuration.Extensions.SetSplashScreen(SadConsole.Configuration.Builder,System.Func{SadConsole.Game,SadConsole.ScreenSurface[]})
  id: SetSplashScreen(SadConsole.Configuration.Builder,System.Func{SadConsole.Game,SadConsole.ScreenSurface[]})
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: SetSplashScreen(Builder, Func<Game, ScreenSurface[]>)
  nameWithType: Extensions.SetSplashScreen(Builder, Func<Game, ScreenSurface[]>)
  fullName: SadConsole.Configuration.Extensions.SetSplashScreen(SadConsole.Configuration.Builder, System.Func<SadConsole.Game, SadConsole.ScreenSurface[]>)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Sets the startup splash screens to the array returned by the <code class="paramref">creator</code> delegate.
  example: []
  syntax:
    content: public static Builder SetSplashScreen(this Builder configBuilder, Func<Game, ScreenSurface[]> creator)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: creator
      type: System.Func{SadConsole.Game,SadConsole.ScreenSurface[]}
      description: A delegate that returns an array of surface objects.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function SetSplashScreen(configBuilder As Builder, creator As Func(Of Game, ScreenSurface())) As Builder
  overload: SadConsole.Configuration.Extensions.SetSplashScreen*
  nameWithType.vb: Extensions.SetSplashScreen(Builder, Func(Of Game, ScreenSurface()))
  fullName.vb: SadConsole.Configuration.Extensions.SetSplashScreen(SadConsole.Configuration.Builder, System.Func(Of SadConsole.Game, SadConsole.ScreenSurface()))
  name.vb: SetSplashScreen(Builder, Func(Of Game, ScreenSurface()))
- uid: SadConsole.Configuration.Extensions.SetStartingScreen``1(SadConsole.Configuration.Builder)
  commentId: M:SadConsole.Configuration.Extensions.SetStartingScreen``1(SadConsole.Configuration.Builder)
  id: SetStartingScreen``1(SadConsole.Configuration.Builder)
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: SetStartingScreen<TRootObject>(Builder)
  nameWithType: Extensions.SetStartingScreen<TRootObject>(Builder)
  fullName: SadConsole.Configuration.Extensions.SetStartingScreen<TRootObject>(SadConsole.Configuration.Builder)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Sets the <xref href="SadConsole.GameHost.Screen" data-throw-if-not-resolved="false"></xref> property to the specified type.
  example: []
  syntax:
    content: 'public static Builder SetStartingScreen<TRootObject>(this Builder configBuilder) where TRootObject : IScreenObject, new()'
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    typeParameters:
    - id: TRootObject
      description: A parameterless <xref href="SadConsole.IScreenObject" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function SetStartingScreen(Of TRootObject As {IScreenObject, New})(configBuilder As Builder) As Builder
  overload: SadConsole.Configuration.Extensions.SetStartingScreen*
  nameWithType.vb: Extensions.SetStartingScreen(Of TRootObject)(Builder)
  fullName.vb: SadConsole.Configuration.Extensions.SetStartingScreen(Of TRootObject)(SadConsole.Configuration.Builder)
  name.vb: SetStartingScreen(Of TRootObject)(Builder)
- uid: SadConsole.Configuration.Extensions.SetStartingScreen(SadConsole.Configuration.Builder,System.Func{SadConsole.Game,SadConsole.IScreenObject})
  commentId: M:SadConsole.Configuration.Extensions.SetStartingScreen(SadConsole.Configuration.Builder,System.Func{SadConsole.Game,SadConsole.IScreenObject})
  id: SetStartingScreen(SadConsole.Configuration.Builder,System.Func{SadConsole.Game,SadConsole.IScreenObject})
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: SetStartingScreen(Builder, Func<Game, IScreenObject>)
  nameWithType: Extensions.SetStartingScreen(Builder, Func<Game, IScreenObject>)
  fullName: SadConsole.Configuration.Extensions.SetStartingScreen(SadConsole.Configuration.Builder, System.Func<SadConsole.Game, SadConsole.IScreenObject>)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Sets the <xref href="SadConsole.GameHost.Screen" data-throw-if-not-resolved="false"></xref> property to the return value of the <code class="paramref">creator</code> parameter.
  example: []
  syntax:
    content: public static Builder SetStartingScreen(this Builder configBuilder, Func<Game, IScreenObject> creator)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: creator
      type: System.Func{SadConsole.Game,SadConsole.IScreenObject}
      description: A method that returns an object as the starting screen.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function SetStartingScreen(configBuilder As Builder, creator As Func(Of Game, IScreenObject)) As Builder
  overload: SadConsole.Configuration.Extensions.SetStartingScreen*
  nameWithType.vb: Extensions.SetStartingScreen(Builder, Func(Of Game, IScreenObject))
  fullName.vb: SadConsole.Configuration.Extensions.SetStartingScreen(SadConsole.Configuration.Builder, System.Func(Of SadConsole.Game, SadConsole.IScreenObject))
  name.vb: SetStartingScreen(Builder, Func(Of Game, IScreenObject))
- uid: SadConsole.Configuration.Extensions.SetScreenSize(SadConsole.Configuration.Builder,System.Int32,System.Int32)
  commentId: M:SadConsole.Configuration.Extensions.SetScreenSize(SadConsole.Configuration.Builder,System.Int32,System.Int32)
  id: SetScreenSize(SadConsole.Configuration.Builder,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.Configuration.Extensions
  langs:
  - csharp
  - vb
  name: SetScreenSize(Builder, int, int)
  nameWithType: Extensions.SetScreenSize(Builder, int, int)
  fullName: SadConsole.Configuration.Extensions.SetScreenSize(SadConsole.Configuration.Builder, int, int)
  type: Method
  assemblies:
  - SadConsole.Host.MonoGame
  namespace: SadConsole.Configuration
  summary: Sets the initial screen size of the window, in cells.
  example: []
  syntax:
    content: public static Builder SetScreenSize(this Builder configBuilder, int width, int height)
    parameters:
    - id: configBuilder
      type: SadConsole.Configuration.Builder
      description: The builder object that composes the game startup.
    - id: width
      type: System.Int32
      description: The cell count along the x-axis.
    - id: height
      type: System.Int32
      description: The cell count along the y-axis.
    return:
      type: SadConsole.Configuration.Builder
      description: The configuration builder.
    content.vb: Public Shared Function SetScreenSize(configBuilder As Builder, width As Integer, height As Integer) As Builder
  overload: SadConsole.Configuration.Extensions.SetScreenSize*
  nameWithType.vb: Extensions.SetScreenSize(Builder, Integer, Integer)
  fullName.vb: SadConsole.Configuration.Extensions.SetScreenSize(SadConsole.Configuration.Builder, Integer, Integer)
  name.vb: SetScreenSize(Builder, Integer, Integer)
references:
- uid: SadConsole.Configuration.Builder
  commentId: T:SadConsole.Configuration.Builder
  parent: SadConsole.Configuration
  isExternal: true
  href: SadConsole.Configuration.Builder.html
  name: Builder
  nameWithType: Builder
  fullName: SadConsole.Configuration.Builder
- uid: SadConsole.Configuration
  commentId: N:SadConsole.Configuration
  isExternal: true
  href: SadConsole.html
  name: SadConsole.Configuration
  nameWithType: SadConsole.Configuration
  fullName: SadConsole.Configuration
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Configuration
    name: Configuration
    isExternal: true
    href: SadConsole.Configuration.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Configuration
    name: Configuration
    isExternal: true
    href: SadConsole.Configuration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.GameHost.Started
  commentId: E:SadConsole.GameHost.Started
  parent: SadConsole.GameHost
  isExternal: true
  href: SadConsole.GameHost.html#SadConsole_GameHost_Started
  name: Started
  nameWithType: GameHost.Started
  fullName: SadConsole.GameHost.Started
- uid: SadConsole.Configuration.Extensions.OnStart*
  commentId: Overload:SadConsole.Configuration.Extensions.OnStart
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_OnStart_SadConsole_Configuration_Builder_System_EventHandler_SadConsole_GameHost__
  name: OnStart
  nameWithType: Extensions.OnStart
  fullName: SadConsole.Configuration.Extensions.OnStart
- uid: System.EventHandler{SadConsole.GameHost}
  commentId: T:System.EventHandler{SadConsole.GameHost}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<GameHost>
  nameWithType: EventHandler<GameHost>
  fullName: System.EventHandler<SadConsole.GameHost>
  nameWithType.vb: EventHandler(Of GameHost)
  fullName.vb: System.EventHandler(Of SadConsole.GameHost)
  name.vb: EventHandler(Of GameHost)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: SadConsole.GameHost
    name: GameHost
    isExternal: true
    href: SadConsole.GameHost.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.GameHost
    name: GameHost
    isExternal: true
    href: SadConsole.GameHost.html
  - name: )
- uid: SadConsole.GameHost
  commentId: T:SadConsole.GameHost
  parent: SadConsole
  isExternal: true
  href: SadConsole.GameHost.html
  name: GameHost
  nameWithType: GameHost
  fullName: SadConsole.GameHost
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: SadConsole.GameHost.Ending
  commentId: E:SadConsole.GameHost.Ending
  parent: SadConsole.GameHost
  isExternal: true
  href: SadConsole.GameHost.html#SadConsole_GameHost_Ending
  name: Ending
  nameWithType: GameHost.Ending
  fullName: SadConsole.GameHost.Ending
- uid: SadConsole.Configuration.Extensions.OnEnd*
  commentId: Overload:SadConsole.Configuration.Extensions.OnEnd
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_OnEnd_SadConsole_Configuration_Builder_System_EventHandler_SadConsole_GameHost__
  name: OnEnd
  nameWithType: Extensions.OnEnd
  fullName: SadConsole.Configuration.Extensions.OnEnd
- uid: SadConsole.GameHost.FrameUpdate
  commentId: E:SadConsole.GameHost.FrameUpdate
  parent: SadConsole.GameHost
  isExternal: true
  href: SadConsole.GameHost.html#SadConsole_GameHost_FrameUpdate
  name: FrameUpdate
  nameWithType: GameHost.FrameUpdate
  fullName: SadConsole.GameHost.FrameUpdate
- uid: SadConsole.Configuration.Extensions.AddFrameUpdateEvent*
  commentId: Overload:SadConsole.Configuration.Extensions.AddFrameUpdateEvent
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_AddFrameUpdateEvent_SadConsole_Configuration_Builder_System_EventHandler_SadConsole_GameHost__
  name: AddFrameUpdateEvent
  nameWithType: Extensions.AddFrameUpdateEvent
  fullName: SadConsole.Configuration.Extensions.AddFrameUpdateEvent
- uid: SadConsole.GameHost.FrameRender
  commentId: E:SadConsole.GameHost.FrameRender
  parent: SadConsole.GameHost
  isExternal: true
  href: SadConsole.GameHost.html#SadConsole_GameHost_FrameRender
  name: FrameRender
  nameWithType: GameHost.FrameRender
  fullName: SadConsole.GameHost.FrameRender
- uid: SadConsole.Configuration.Extensions.AddFrameRenderEvent*
  commentId: Overload:SadConsole.Configuration.Extensions.AddFrameRenderEvent
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_AddFrameRenderEvent_SadConsole_Configuration_Builder_System_EventHandler_SadConsole_GameHost__
  name: AddFrameRenderEvent
  nameWithType: Extensions.AddFrameRenderEvent
  fullName: SadConsole.Configuration.Extensions.AddFrameRenderEvent
- uid: SadConsole.Configuration.Extensions.WithMonoGameCtor*
  commentId: Overload:SadConsole.Configuration.Extensions.WithMonoGameCtor
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_WithMonoGameCtor_SadConsole_Configuration_Builder_System_Action_SadConsole_Host_Game__
  name: WithMonoGameCtor
  nameWithType: Extensions.WithMonoGameCtor
  fullName: SadConsole.Configuration.Extensions.WithMonoGameCtor
- uid: System.Action{SadConsole.Host.Game}
  commentId: T:System.Action{SadConsole.Host.Game}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Game>
  nameWithType: Action<Game>
  fullName: System.Action<SadConsole.Host.Game>
  nameWithType.vb: Action(Of Game)
  fullName.vb: System.Action(Of SadConsole.Host.Game)
  name.vb: Action(Of Game)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: SadConsole.Host.Game
    name: Game
    isExternal: true
    href: SadConsole.Host.Game.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Host.Game
    name: Game
    isExternal: true
    href: SadConsole.Host.Game.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.GameHost.StartingConsole
  commentId: P:SadConsole.GameHost.StartingConsole
  parent: SadConsole.GameHost
  isExternal: true
  href: SadConsole.GameHost.html#SadConsole_GameHost_StartingConsole
  name: StartingConsole
  nameWithType: GameHost.StartingConsole
  fullName: SadConsole.GameHost.StartingConsole
- uid: SadConsole.GameHost.Screen
  commentId: P:SadConsole.GameHost.Screen
  parent: SadConsole.GameHost
  isExternal: true
  href: SadConsole.GameHost.html#SadConsole_GameHost_Screen
  name: Screen
  nameWithType: GameHost.Screen
  fullName: SadConsole.GameHost.Screen
- uid: SadConsole.Configuration.Extensions.UseDefaultConsole*
  commentId: Overload:SadConsole.Configuration.Extensions.UseDefaultConsole
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_UseDefaultConsole_SadConsole_Configuration_Builder_
  name: UseDefaultConsole
  nameWithType: Extensions.UseDefaultConsole
  fullName: SadConsole.Configuration.Extensions.UseDefaultConsole
- uid: SadConsole.Configuration.Extensions.IsStartingScreenFocused*
  commentId: Overload:SadConsole.Configuration.Extensions.IsStartingScreenFocused
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_IsStartingScreenFocused_SadConsole_Configuration_Builder_System_Boolean_
  name: IsStartingScreenFocused
  nameWithType: Extensions.IsStartingScreenFocused
  fullName: SadConsole.Configuration.Extensions.IsStartingScreenFocused
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.Configuration.FontConfig
  commentId: T:SadConsole.Configuration.FontConfig
  isExternal: true
  href: SadConsole.Configuration.FontConfig.html
  name: FontConfig
  nameWithType: FontConfig
  fullName: SadConsole.Configuration.FontConfig
- uid: SadConsole.Configuration.Extensions.ConfigureFonts*
  commentId: Overload:SadConsole.Configuration.Extensions.ConfigureFonts
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_ConfigureFonts_SadConsole_Configuration_Builder_System_Action_SadConsole_Configuration_FontConfig_SadConsole_Game__
  name: ConfigureFonts
  nameWithType: Extensions.ConfigureFonts
  fullName: SadConsole.Configuration.Extensions.ConfigureFonts
- uid: System.Action{SadConsole.Configuration.FontConfig,SadConsole.Game}
  commentId: T:System.Action{SadConsole.Configuration.FontConfig,SadConsole.Game}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<FontConfig, Game>
  nameWithType: Action<FontConfig, Game>
  fullName: System.Action<SadConsole.Configuration.FontConfig, SadConsole.Game>
  nameWithType.vb: Action(Of FontConfig, Game)
  fullName.vb: System.Action(Of SadConsole.Configuration.FontConfig, SadConsole.Game)
  name.vb: Action(Of FontConfig, Game)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: SadConsole.Configuration.FontConfig
    name: FontConfig
    isExternal: true
    href: SadConsole.Configuration.FontConfig.html
  - name: ','
  - name: " "
  - uid: SadConsole.Game
    name: Game
    isExternal: true
    href: SadConsole.Game.html
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Configuration.FontConfig
    name: FontConfig
    isExternal: true
    href: SadConsole.Configuration.FontConfig.html
  - name: ','
  - name: " "
  - uid: SadConsole.Game
    name: Game
    isExternal: true
    href: SadConsole.Game.html
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SadConsole.GameHost.EmbeddedFontExtended
  commentId: P:SadConsole.GameHost.EmbeddedFontExtended
  parent: SadConsole.GameHost
  isExternal: true
  href: SadConsole.GameHost.html#SadConsole_GameHost_EmbeddedFontExtended
  name: EmbeddedFontExtended
  nameWithType: GameHost.EmbeddedFontExtended
  fullName: SadConsole.GameHost.EmbeddedFontExtended
- uid: SadConsole.GameHost.EmbeddedFont
  commentId: P:SadConsole.GameHost.EmbeddedFont
  parent: SadConsole.GameHost
  isExternal: true
  href: SadConsole.GameHost.html#SadConsole_GameHost_EmbeddedFont
  name: EmbeddedFont
  nameWithType: GameHost.EmbeddedFont
  fullName: SadConsole.GameHost.EmbeddedFont
- uid: SadConsole.Configuration.Extensions.FixOldFontName*
  commentId: Overload:SadConsole.Configuration.Extensions.FixOldFontName
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_FixOldFontName_SadConsole_Configuration_Builder_
  name: FixOldFontName
  nameWithType: Extensions.FixOldFontName
  fullName: SadConsole.Configuration.Extensions.FixOldFontName
- uid: SadConsole.Configuration.Extensions.UseUnlimitedFPS*
  commentId: Overload:SadConsole.Configuration.Extensions.UseUnlimitedFPS
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_UseUnlimitedFPS_SadConsole_Configuration_Builder_
  name: UseUnlimitedFPS
  nameWithType: Extensions.UseUnlimitedFPS
  fullName: SadConsole.Configuration.Extensions.UseUnlimitedFPS
- uid: SadConsole.Configuration.Extensions.ShowMonoGameFPS*
  commentId: Overload:SadConsole.Configuration.Extensions.ShowMonoGameFPS
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_ShowMonoGameFPS_SadConsole_Configuration_Builder_
  name: ShowMonoGameFPS
  nameWithType: Extensions.ShowMonoGameFPS
  fullName: SadConsole.Configuration.Extensions.ShowMonoGameFPS
- uid: SadConsole.IScreenSurface
  commentId: T:SadConsole.IScreenSurface
  parent: SadConsole
  isExternal: true
  href: SadConsole.IScreenSurface.html
  name: IScreenSurface
  nameWithType: IScreenSurface
  fullName: SadConsole.IScreenSurface
- uid: SadConsole.Configuration.Extensions.SetSplashScreen*
  commentId: Overload:SadConsole.Configuration.Extensions.SetSplashScreen
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_SetSplashScreen__1_SadConsole_Configuration_Builder_
  name: SetSplashScreen
  nameWithType: Extensions.SetSplashScreen
  fullName: SadConsole.Configuration.Extensions.SetSplashScreen
- uid: System.Func{SadConsole.Game,SadConsole.ScreenSurface[]}
  commentId: T:System.Func{SadConsole.Game,SadConsole.ScreenSurface[]}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Game, ScreenSurface[]>
  nameWithType: Func<Game, ScreenSurface[]>
  fullName: System.Func<SadConsole.Game, SadConsole.ScreenSurface[]>
  nameWithType.vb: Func(Of Game, ScreenSurface())
  fullName.vb: System.Func(Of SadConsole.Game, SadConsole.ScreenSurface())
  name.vb: Func(Of Game, ScreenSurface())
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: SadConsole.Game
    name: Game
    isExternal: true
    href: SadConsole.Game.html
  - name: ','
  - name: " "
  - uid: SadConsole.ScreenSurface
    name: ScreenSurface
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Game
    name: Game
    isExternal: true
    href: SadConsole.Game.html
  - name: ','
  - name: " "
  - uid: SadConsole.ScreenSurface
    name: ScreenSurface
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: SadConsole.IScreenObject
  commentId: T:SadConsole.IScreenObject
  parent: SadConsole
  isExternal: true
  href: SadConsole.IScreenObject.html
  name: IScreenObject
  nameWithType: IScreenObject
  fullName: SadConsole.IScreenObject
- uid: SadConsole.Configuration.Extensions.SetStartingScreen*
  commentId: Overload:SadConsole.Configuration.Extensions.SetStartingScreen
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_SetStartingScreen__1_SadConsole_Configuration_Builder_
  name: SetStartingScreen
  nameWithType: Extensions.SetStartingScreen
  fullName: SadConsole.Configuration.Extensions.SetStartingScreen
- uid: System.Func{SadConsole.Game,SadConsole.IScreenObject}
  commentId: T:System.Func{SadConsole.Game,SadConsole.IScreenObject}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Game, IScreenObject>
  nameWithType: Func<Game, IScreenObject>
  fullName: System.Func<SadConsole.Game, SadConsole.IScreenObject>
  nameWithType.vb: Func(Of Game, IScreenObject)
  fullName.vb: System.Func(Of SadConsole.Game, SadConsole.IScreenObject)
  name.vb: Func(Of Game, IScreenObject)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: SadConsole.Game
    name: Game
    isExternal: true
    href: SadConsole.Game.html
  - name: ','
  - name: " "
  - uid: SadConsole.IScreenObject
    name: IScreenObject
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Game
    name: Game
    isExternal: true
    href: SadConsole.Game.html
  - name: ','
  - name: " "
  - uid: SadConsole.IScreenObject
    name: IScreenObject
    isExternal: true
  - name: )
- uid: SadConsole.Configuration.Extensions.SetScreenSize*
  commentId: Overload:SadConsole.Configuration.Extensions.SetScreenSize
  isExternal: true
  href: SadConsole.Configuration.Extensions.html#SadConsole_Configuration_Extensions_SetScreenSize_SadConsole_Configuration_Builder_System_Int32_System_Int32_
  name: SetScreenSize
  nameWithType: Extensions.SetScreenSize
  fullName: SadConsole.Configuration.Extensions.SetScreenSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
