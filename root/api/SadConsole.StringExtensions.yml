### YamlMime:ManagedReference
items:
- uid: SadConsole.StringExtensions
  commentId: T:SadConsole.StringExtensions
  id: StringExtensions
  parent: SadConsole
  children:
  - SadConsole.StringExtensions.Align(System.String,SadConsole.HorizontalAlignment,System.Int32)
  - SadConsole.StringExtensions.Align(System.String,SadConsole.HorizontalAlignment,System.Int32,System.Char)
  - SadConsole.StringExtensions.CreateColored(System.String,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadConsole.Mirror},SadConsole.CellDecorator[])
  - SadConsole.StringExtensions.CreateGradient(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  - SadConsole.StringExtensions.CreateGradient(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  - SadConsole.StringExtensions.Masked(System.String,System.Char)
  - SadConsole.StringExtensions.ToBool(System.String)
  - SadConsole.StringExtensions.WordWrap(System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: SadConsole.StringExtensions
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Helpers for strings.
  example: []
  syntax:
    content: public static class StringExtensions
    content.vb: Public Module StringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: SadConsole.StringExtensions.Align(System.String,SadConsole.HorizontalAlignment,System.Int32)
  commentId: M:SadConsole.StringExtensions.Align(System.String,SadConsole.HorizontalAlignment,System.Int32)
  id: Align(System.String,SadConsole.HorizontalAlignment,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.StringExtensions
  langs:
  - csharp
  - vb
  name: Align(string, HorizontalAlignment, int)
  nameWithType: StringExtensions.Align(string, HorizontalAlignment, int)
  fullName: SadConsole.StringExtensions.Align(string, SadConsole.HorizontalAlignment, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Aligns a string given a total character width and alignment style. Fills in the extra space with the space character.
  example: []
  syntax:
    content: public static string Align(this string value, HorizontalAlignment alignment, int totalWidth)
    parameters:
    - id: value
      type: System.String
      description: The current string.
    - id: alignment
      type: SadConsole.HorizontalAlignment
      description: The horizontal alignment.
    - id: totalWidth
      type: System.Int32
      description: The total width of the new string.
    return:
      type: System.String
      description: A new string instance.
    content.vb: Public Shared Function Align(value As String, alignment As HorizontalAlignment, totalWidth As Integer) As String
  overload: SadConsole.StringExtensions.Align*
  nameWithType.vb: StringExtensions.Align(String, HorizontalAlignment, Integer)
  fullName.vb: SadConsole.StringExtensions.Align(String, SadConsole.HorizontalAlignment, Integer)
  name.vb: Align(String, HorizontalAlignment, Integer)
- uid: SadConsole.StringExtensions.Align(System.String,SadConsole.HorizontalAlignment,System.Int32,System.Char)
  commentId: M:SadConsole.StringExtensions.Align(System.String,SadConsole.HorizontalAlignment,System.Int32,System.Char)
  id: Align(System.String,SadConsole.HorizontalAlignment,System.Int32,System.Char)
  isExtensionMethod: true
  parent: SadConsole.StringExtensions
  langs:
  - csharp
  - vb
  name: Align(string, HorizontalAlignment, int, char)
  nameWithType: StringExtensions.Align(string, HorizontalAlignment, int, char)
  fullName: SadConsole.StringExtensions.Align(string, SadConsole.HorizontalAlignment, int, char)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Aligns a string given a total character width and alignment style.
  example: []
  syntax:
    content: public static string Align(this string value, HorizontalAlignment alignment, int totalWidth, char fillCharacter)
    parameters:
    - id: value
      type: System.String
      description: The current string.
    - id: alignment
      type: SadConsole.HorizontalAlignment
      description: The horizontal alignment.
    - id: totalWidth
      type: System.Int32
      description: The total width of the new string.
    - id: fillCharacter
      type: System.Char
      description: The character to use to fill in the extra spaces after alignment.
    return:
      type: System.String
      description: A new string instance.
    content.vb: Public Shared Function Align(value As String, alignment As HorizontalAlignment, totalWidth As Integer, fillCharacter As Char) As String
  overload: SadConsole.StringExtensions.Align*
  nameWithType.vb: StringExtensions.Align(String, HorizontalAlignment, Integer, Char)
  fullName.vb: SadConsole.StringExtensions.Align(String, SadConsole.HorizontalAlignment, Integer, Char)
  name.vb: Align(String, HorizontalAlignment, Integer, Char)
- uid: SadConsole.StringExtensions.CreateColored(System.String,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadConsole.Mirror},SadConsole.CellDecorator[])
  commentId: M:SadConsole.StringExtensions.CreateColored(System.String,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadConsole.Mirror},SadConsole.CellDecorator[])
  id: CreateColored(System.String,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadConsole.Mirror},SadConsole.CellDecorator[])
  isExtensionMethod: true
  parent: SadConsole.StringExtensions
  langs:
  - csharp
  - vb
  name: CreateColored(string, Color?, Color?, Mirror?, CellDecorator[]?)
  nameWithType: StringExtensions.CreateColored(string, Color?, Color?, Mirror?, CellDecorator[]?)
  fullName: SadConsole.StringExtensions.CreateColored(string, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, SadConsole.Mirror?, SadConsole.CellDecorator[]?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object from an existing string with the specified foreground and background, setting the ignore properties if needed.
  example: []
  syntax:
    content: public static ColoredString CreateColored(this string value, Color? foreground = null, Color? background = null, Mirror? mirror = null, CellDecorator[]? decorators = null)
    parameters:
    - id: value
      type: System.String
      description: The current string.
    - id: foreground
      type: System.Nullable{SadRogue.Primitives.Color}
      description: The foreground color. If null, <xref href="SadConsole.ColoredString.IgnoreForeground" data-throw-if-not-resolved="false"></xref> will be set.
    - id: background
      type: System.Nullable{SadRogue.Primitives.Color}
      description: The background color. If null, <xref href="SadConsole.ColoredString.IgnoreBackground" data-throw-if-not-resolved="false"></xref> will be set.
    - id: mirror
      type: System.Nullable{SadConsole.Mirror}
      description: The mirror setting. If null, <xref href="SadConsole.ColoredString.IgnoreMirror" data-throw-if-not-resolved="false"></xref> will be set.
    - id: decorators
      type: SadConsole.CellDecorator[]
      description: The decorators setting. If null, <xref href="SadConsole.ColoredString.IgnoreDecorators" data-throw-if-not-resolved="false"></xref> will be set.
    return:
      type: SadConsole.ColoredString
      description: A <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object instace.
    content.vb: Public Shared Function CreateColored(value As String, foreground As Color? = Nothing, background As Color? = Nothing, mirror As Mirror? = Nothing, decorators As CellDecorator() = Nothing) As ColoredString
  overload: SadConsole.StringExtensions.CreateColored*
  nameWithType.vb: StringExtensions.CreateColored(String, Color?, Color?, Mirror?, CellDecorator())
  fullName.vb: SadConsole.StringExtensions.CreateColored(String, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, SadConsole.Mirror?, SadConsole.CellDecorator())
  name.vb: CreateColored(String, Color?, Color?, Mirror?, CellDecorator())
- uid: SadConsole.StringExtensions.CreateGradient(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  commentId: M:SadConsole.StringExtensions.CreateGradient(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  id: CreateGradient(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  isExtensionMethod: true
  parent: SadConsole.StringExtensions
  langs:
  - csharp
  - vb
  name: CreateGradient(string, Color, Color)
  nameWithType: StringExtensions.CreateGradient(string, Color, Color)
  fullName: SadConsole.StringExtensions.CreateGradient(string, SadRogue.Primitives.Color, SadRogue.Primitives.Color)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object from an existing string with the specified foreground gradient and cell effect.
  example: []
  syntax:
    content: public static ColoredString CreateGradient(this string value, Color startingForeground, Color endingForeground)
    parameters:
    - id: value
      type: System.String
      description: The current string.
    - id: startingForeground
      type: SadRogue.Primitives.Color
      description: The starting foreground color to blend.
    - id: endingForeground
      type: SadRogue.Primitives.Color
      description: The ending foreground color to blend.
    return:
      type: SadConsole.ColoredString
      description: A <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object instace.
    content.vb: Public Shared Function CreateGradient(value As String, startingForeground As Color, endingForeground As Color) As ColoredString
  overload: SadConsole.StringExtensions.CreateGradient*
  nameWithType.vb: StringExtensions.CreateGradient(String, Color, Color)
  fullName.vb: SadConsole.StringExtensions.CreateGradient(String, SadRogue.Primitives.Color, SadRogue.Primitives.Color)
  name.vb: CreateGradient(String, Color, Color)
- uid: SadConsole.StringExtensions.CreateGradient(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  commentId: M:SadConsole.StringExtensions.CreateGradient(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  id: CreateGradient(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadRogue.Primitives.Color)
  isExtensionMethod: true
  parent: SadConsole.StringExtensions
  langs:
  - csharp
  - vb
  name: CreateGradient(string, Color, Color, Color, Color)
  nameWithType: StringExtensions.CreateGradient(string, Color, Color, Color, Color)
  fullName: SadConsole.StringExtensions.CreateGradient(string, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadRogue.Primitives.Color)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object from an existing string with the specified foreground gradient, background gradient, and cell effect.
  example: []
  syntax:
    content: public static ColoredString CreateGradient(this string value, Color startingForeground, Color endingForeground, Color startingBackground, Color endingBackground)
    parameters:
    - id: value
      type: System.String
      description: The current string.
    - id: startingForeground
      type: SadRogue.Primitives.Color
      description: The starting foreground color to blend.
    - id: endingForeground
      type: SadRogue.Primitives.Color
      description: The ending foreground color to blend.
    - id: startingBackground
      type: SadRogue.Primitives.Color
      description: The starting background color to blend.
    - id: endingBackground
      type: SadRogue.Primitives.Color
      description: The ending background color to blend.
    return:
      type: SadConsole.ColoredString
      description: A <xref href="SadConsole.ColoredString" data-throw-if-not-resolved="false"></xref> object instace.
    content.vb: Public Shared Function CreateGradient(value As String, startingForeground As Color, endingForeground As Color, startingBackground As Color, endingBackground As Color) As ColoredString
  overload: SadConsole.StringExtensions.CreateGradient*
  nameWithType.vb: StringExtensions.CreateGradient(String, Color, Color, Color, Color)
  fullName.vb: SadConsole.StringExtensions.CreateGradient(String, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadRogue.Primitives.Color, SadRogue.Primitives.Color)
  name.vb: CreateGradient(String, Color, Color, Color, Color)
- uid: SadConsole.StringExtensions.WordWrap(System.String,System.Int32)
  commentId: M:SadConsole.StringExtensions.WordWrap(System.String,System.Int32)
  id: WordWrap(System.String,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.StringExtensions
  langs:
  - csharp
  - vb
  name: WordWrap(string, int)
  nameWithType: StringExtensions.WordWrap(string, int)
  fullName: SadConsole.StringExtensions.WordWrap(string, int)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Wraps text into lines by words, long words are also properly wrapped into multiple lines.
  example: []
  syntax:
    content: public static IEnumerable<string> WordWrap(this string text, int maxCharsPerLine)
    parameters:
    - id: text
      type: System.String
      description: The text to parse.
    - id: maxCharsPerLine
      type: System.Int32
      description: The maximum number of characters per line of text returned.
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Each line in the string.
    content.vb: Public Shared Function WordWrap(text As String, maxCharsPerLine As Integer) As IEnumerable(Of String)
  overload: SadConsole.StringExtensions.WordWrap*
  nameWithType.vb: StringExtensions.WordWrap(String, Integer)
  fullName.vb: SadConsole.StringExtensions.WordWrap(String, Integer)
  name.vb: WordWrap(String, Integer)
- uid: SadConsole.StringExtensions.ToBool(System.String)
  commentId: M:SadConsole.StringExtensions.ToBool(System.String)
  id: ToBool(System.String)
  isExtensionMethod: true
  parent: SadConsole.StringExtensions
  langs:
  - csharp
  - vb
  name: ToBool(string)
  nameWithType: StringExtensions.ToBool(string)
  fullName: SadConsole.StringExtensions.ToBool(string)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Converts a string to a boolean when it is "0", "1", "true", or "false".
  example: []
  syntax:
    content: public static bool ToBool(this string item)
    parameters:
    - id: item
      type: System.String
      description: The string to convert
    return:
      type: System.Boolean
      description: The converted boolean value, otherwise false.
    content.vb: Public Shared Function ToBool(item As String) As Boolean
  overload: SadConsole.StringExtensions.ToBool*
  nameWithType.vb: StringExtensions.ToBool(String)
  fullName.vb: SadConsole.StringExtensions.ToBool(String)
  name.vb: ToBool(String)
- uid: SadConsole.StringExtensions.Masked(System.String,System.Char)
  commentId: M:SadConsole.StringExtensions.Masked(System.String,System.Char)
  id: Masked(System.String,System.Char)
  isExtensionMethod: true
  parent: SadConsole.StringExtensions
  langs:
  - csharp
  - vb
  name: Masked(string, char)
  nameWithType: StringExtensions.Masked(string, char)
  fullName: SadConsole.StringExtensions.Masked(string, char)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Returns a string of mask characters the same length as the input string.
  example: []
  syntax:
    content: public static string Masked(this string toMask, char mask)
    parameters:
    - id: toMask
      type: System.String
      description: The string to mask.
    - id: mask
      type: System.Char
      description: The mask to use.
    return:
      type: System.String
      description: A string of masks.
    content.vb: Public Shared Function Masked(toMask As String, mask As Char) As String
  overload: SadConsole.StringExtensions.Masked*
  nameWithType.vb: StringExtensions.Masked(String, Char)
  fullName.vb: SadConsole.StringExtensions.Masked(String, Char)
  name.vb: Masked(String, Char)
references:
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.StringExtensions.Align*
  commentId: Overload:SadConsole.StringExtensions.Align
  isExternal: true
  href: SadConsole.StringExtensions.html#SadConsole_StringExtensions_Align_System_String_SadConsole_HorizontalAlignment_System_Int32_
  name: Align
  nameWithType: StringExtensions.Align
  fullName: SadConsole.StringExtensions.Align
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SadConsole.HorizontalAlignment
  commentId: T:SadConsole.HorizontalAlignment
  parent: SadConsole
  isExternal: true
  href: SadConsole.HorizontalAlignment.html
  name: HorizontalAlignment
  nameWithType: HorizontalAlignment
  fullName: SadConsole.HorizontalAlignment
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: SadConsole.ColoredString
  commentId: T:SadConsole.ColoredString
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredString.html
  name: ColoredString
  nameWithType: ColoredString
  fullName: SadConsole.ColoredString
- uid: SadConsole.ColoredString.IgnoreForeground
  commentId: P:SadConsole.ColoredString.IgnoreForeground
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_IgnoreForeground
  name: IgnoreForeground
  nameWithType: ColoredString.IgnoreForeground
  fullName: SadConsole.ColoredString.IgnoreForeground
- uid: SadConsole.ColoredString.IgnoreBackground
  commentId: P:SadConsole.ColoredString.IgnoreBackground
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_IgnoreBackground
  name: IgnoreBackground
  nameWithType: ColoredString.IgnoreBackground
  fullName: SadConsole.ColoredString.IgnoreBackground
- uid: SadConsole.ColoredString.IgnoreMirror
  commentId: P:SadConsole.ColoredString.IgnoreMirror
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_IgnoreMirror
  name: IgnoreMirror
  nameWithType: ColoredString.IgnoreMirror
  fullName: SadConsole.ColoredString.IgnoreMirror
- uid: SadConsole.ColoredString.IgnoreDecorators
  commentId: P:SadConsole.ColoredString.IgnoreDecorators
  isExternal: true
  href: SadConsole.ColoredString.html#SadConsole_ColoredString_IgnoreDecorators
  name: IgnoreDecorators
  nameWithType: ColoredString.IgnoreDecorators
  fullName: SadConsole.ColoredString.IgnoreDecorators
- uid: SadConsole.StringExtensions.CreateColored*
  commentId: Overload:SadConsole.StringExtensions.CreateColored
  isExternal: true
  href: SadConsole.StringExtensions.html#SadConsole_StringExtensions_CreateColored_System_String_System_Nullable_SadRogue_Primitives_Color__System_Nullable_SadRogue_Primitives_Color__System_Nullable_SadConsole_Mirror__SadConsole_CellDecorator___
  name: CreateColored
  nameWithType: StringExtensions.CreateColored
  fullName: SadConsole.StringExtensions.CreateColored
- uid: System.Nullable{SadRogue.Primitives.Color}
  commentId: T:System.Nullable{SadRogue.Primitives.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: SadRogue.Primitives.Color?
  spec.csharp:
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: System.Nullable{SadConsole.Mirror}
  commentId: T:System.Nullable{SadConsole.Mirror}
  parent: System
  definition: System.Nullable`1
  href: SadConsole.Mirror.html
  name: Mirror?
  nameWithType: Mirror?
  fullName: SadConsole.Mirror?
  spec.csharp:
  - uid: SadConsole.Mirror
    name: Mirror
    isExternal: true
    href: SadConsole.Mirror.html
  - name: '?'
  spec.vb:
  - uid: SadConsole.Mirror
    name: Mirror
    isExternal: true
    href: SadConsole.Mirror.html
  - name: '?'
- uid: SadConsole.CellDecorator[]
  isExternal: true
  href: SadConsole.CellDecorator.html
  name: CellDecorator[]
  nameWithType: CellDecorator[]
  fullName: SadConsole.CellDecorator[]
  nameWithType.vb: CellDecorator()
  fullName.vb: SadConsole.CellDecorator()
  name.vb: CellDecorator()
  spec.csharp:
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: (
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.StringExtensions.CreateGradient*
  commentId: Overload:SadConsole.StringExtensions.CreateGradient
  isExternal: true
  href: SadConsole.StringExtensions.html#SadConsole_StringExtensions_CreateGradient_System_String_SadRogue_Primitives_Color_SadRogue_Primitives_Color_
  name: CreateGradient
  nameWithType: StringExtensions.CreateGradient
  fullName: SadConsole.StringExtensions.CreateGradient
- uid: SadRogue.Primitives.Color
  commentId: T:SadRogue.Primitives.Color
  parent: SadRogue.Primitives
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: SadRogue.Primitives.Color
- uid: SadRogue.Primitives
  commentId: N:SadRogue.Primitives
  isExternal: true
  href: SadRogue.html
  name: SadRogue.Primitives
  nameWithType: SadRogue.Primitives
  fullName: SadRogue.Primitives
  spec.csharp:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
  spec.vb:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
- uid: SadConsole.StringExtensions.WordWrap*
  commentId: Overload:SadConsole.StringExtensions.WordWrap
  isExternal: true
  href: SadConsole.StringExtensions.html#SadConsole_StringExtensions_WordWrap_System_String_System_Int32_
  name: WordWrap
  nameWithType: StringExtensions.WordWrap
  fullName: SadConsole.StringExtensions.WordWrap
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SadConsole.StringExtensions.ToBool*
  commentId: Overload:SadConsole.StringExtensions.ToBool
  isExternal: true
  href: SadConsole.StringExtensions.html#SadConsole_StringExtensions_ToBool_System_String_
  name: ToBool
  nameWithType: StringExtensions.ToBool
  fullName: SadConsole.StringExtensions.ToBool
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.StringExtensions.Masked*
  commentId: Overload:SadConsole.StringExtensions.Masked
  isExternal: true
  href: SadConsole.StringExtensions.html#SadConsole_StringExtensions_Masked_System_String_System_Char_
  name: Masked
  nameWithType: StringExtensions.Masked
  fullName: SadConsole.StringExtensions.Masked
