### YamlMime:ManagedReference
items:
- uid: SadConsole.Effects.EffectSet
  commentId: T:SadConsole.Effects.EffectSet
  id: EffectSet
  parent: SadConsole.Effects
  children:
  - SadConsole.Effects.EffectSet.#ctor
  - SadConsole.Effects.EffectSet.Add(SadConsole.Effects.ICellEffect)
  - SadConsole.Effects.EffectSet.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  - SadConsole.Effects.EffectSet.Clone
  - SadConsole.Effects.EffectSet.DelayBetweenEffects
  - SadConsole.Effects.EffectSet.Effects
  - SadConsole.Effects.EffectSet.GetEnumerator
  - SadConsole.Effects.EffectSet.Repeat
  - SadConsole.Effects.EffectSet.Restart
  - SadConsole.Effects.EffectSet.ToString
  - SadConsole.Effects.EffectSet.Update(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: EffectSet
  nameWithType: EffectSet
  fullName: SadConsole.Effects.EffectSet
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Chains one effect after another.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class EffectSet : CellEffectBase, ICellEffect, IEnumerable<ICellEffect>, IEnumerable
    content.vb: >-
      <DataContract>

      Public Class EffectSet Inherits CellEffectBase Implements ICellEffect, IEnumerable(Of ICellEffect), IEnumerable
  inheritance:
  - System.Object
  - SadConsole.Effects.CellEffectBase
  implements:
  - SadConsole.Effects.ICellEffect
  - System.Collections.Generic.IEnumerable{SadConsole.Effects.ICellEffect}
  - System.Collections.IEnumerable
  inheritedMembers:
  - SadConsole.Effects.CellEffectBase._delayFinished
  - SadConsole.Effects.CellEffectBase._timeElapsed
  - SadConsole.Effects.CellEffectBase.IsFinished
  - SadConsole.Effects.CellEffectBase.CloneOnAdd
  - SadConsole.Effects.CellEffectBase.StartDelay
  - SadConsole.Effects.CellEffectBase.RemoveOnFinished
  - SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
  - SadConsole.Effects.CellEffectBase.RunEffectOnApply
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: SadConsole.Effects.EffectSet.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.Effects.EffectSet.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  id: ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  nameWithType: EffectSet.ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  fullName: SadConsole.Effects.EffectSet.ApplyToCell(SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Applies the state of the effect to a cell.
  example: []
  syntax:
    content: public override bool ApplyToCell(ColoredGlyphBase cell, ColoredGlyphBase originalState)
    parameters:
    - id: cell
      type: SadConsole.ColoredGlyphBase
      description: The surface cell using this effect.
    - id: originalState
      type: SadConsole.ColoredGlyphBase
      description: The state of the cell prior to the effect being applied.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when this method modified the <code class="paramref">cell</code>; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function ApplyToCell(cell As ColoredGlyphBase, originalState As ColoredGlyphBase) As Boolean
  overridden: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  overload: SadConsole.Effects.EffectSet.ApplyToCell*
- uid: SadConsole.Effects.EffectSet.Update(System.TimeSpan)
  commentId: M:SadConsole.Effects.EffectSet.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: EffectSet.Update(TimeSpan)
  fullName: SadConsole.Effects.EffectSet.Update(System.TimeSpan)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Updates the state of the effect.
  example: []
  syntax:
    content: public override void Update(TimeSpan delta)
    parameters:
    - id: delta
      type: System.TimeSpan
      description: Time since the last call to this effect.
    content.vb: Public Overrides Sub Update(delta As TimeSpan)
  overridden: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  overload: SadConsole.Effects.EffectSet.Update*
- uid: SadConsole.Effects.EffectSet.Restart
  commentId: M:SadConsole.Effects.EffectSet.Restart
  id: Restart
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: Restart()
  nameWithType: EffectSet.Restart()
  fullName: SadConsole.Effects.EffectSet.Restart()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Restarts the cell effect but does not reset it.
  example: []
  syntax:
    content: public override void Restart()
    content.vb: Public Overrides Sub Restart()
  overridden: SadConsole.Effects.CellEffectBase.Restart
  overload: SadConsole.Effects.EffectSet.Restart*
- uid: SadConsole.Effects.EffectSet.Clone
  commentId: M:SadConsole.Effects.EffectSet.Clone
  id: Clone
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: EffectSet.Clone()
  fullName: SadConsole.Effects.EffectSet.Clone()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Returns a duplicate of this effect.
  example: []
  syntax:
    content: public override ICellEffect Clone()
    return:
      type: SadConsole.Effects.ICellEffect
      description: A new copy of this effect.
    content.vb: Public Overrides Function Clone() As ICellEffect
  overridden: SadConsole.Effects.CellEffectBase.Clone
  overload: SadConsole.Effects.EffectSet.Clone*
- uid: SadConsole.Effects.EffectSet.ToString
  commentId: M:SadConsole.Effects.EffectSet.ToString
  id: ToString
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EffectSet.ToString()
  fullName: SadConsole.Effects.EffectSet.ToString()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SadConsole.Effects.EffectSet.ToString*
- uid: SadConsole.Effects.EffectSet.GetEnumerator
  commentId: M:SadConsole.Effects.EffectSet.GetEnumerator
  id: GetEnumerator
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: EffectSet.GetEnumerator()
  fullName: SadConsole.Effects.EffectSet.GetEnumerator()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Gets an enumerator of all the effects.
  example: []
  syntax:
    content: public IEnumerator<ICellEffect> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{SadConsole.Effects.ICellEffect}
      description: The enumerator.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of ICellEffect)
  overload: SadConsole.Effects.EffectSet.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{SadConsole.Effects.ICellEffect}.GetEnumerator
- uid: SadConsole.Effects.EffectSet.Add(SadConsole.Effects.ICellEffect)
  commentId: M:SadConsole.Effects.EffectSet.Add(SadConsole.Effects.ICellEffect)
  id: Add(SadConsole.Effects.ICellEffect)
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: Add(ICellEffect)
  nameWithType: EffectSet.Add(ICellEffect)
  fullName: SadConsole.Effects.EffectSet.Add(SadConsole.Effects.ICellEffect)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: Adds an effect to the end of the <xref href="SadConsole.Effects.EffectSet.Effects" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public void Add(ICellEffect effect)
    parameters:
    - id: effect
      type: SadConsole.Effects.ICellEffect
      description: The effect to add.
    content.vb: Public Sub Add(effect As ICellEffect)
  overload: SadConsole.Effects.EffectSet.Add*
- uid: SadConsole.Effects.EffectSet.#ctor
  commentId: M:SadConsole.Effects.EffectSet.#ctor
  id: '#ctor'
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: EffectSet()
  nameWithType: EffectSet.EffectSet()
  fullName: SadConsole.Effects.EffectSet.EffectSet()
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  syntax:
    content: public EffectSet()
    content.vb: Public Sub New()
  overload: SadConsole.Effects.EffectSet.#ctor*
  nameWithType.vb: EffectSet.New()
  fullName.vb: SadConsole.Effects.EffectSet.New()
  name.vb: New()
- uid: SadConsole.Effects.EffectSet.Effects
  commentId: P:SadConsole.Effects.EffectSet.Effects
  id: Effects
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: Effects
  nameWithType: EffectSet.Effects
  fullName: SadConsole.Effects.EffectSet.Effects
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: The list of effects to process.
  example: []
  syntax:
    content: >-
      [DataMember]

      public LinkedList<ICellEffect> Effects { get; }
    parameters: []
    return:
      type: System.Collections.Generic.LinkedList{SadConsole.Effects.ICellEffect}
    content.vb: >-
      <DataMember>

      Public ReadOnly Property Effects As LinkedList(Of ICellEffect)
  overload: SadConsole.Effects.EffectSet.Effects*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.Effects.EffectSet.Repeat
  commentId: P:SadConsole.Effects.EffectSet.Repeat
  id: Repeat
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: Repeat
  nameWithType: EffectSet.Repeat
  fullName: SadConsole.Effects.EffectSet.Repeat
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, instead of ending when finished, it will repeat. Otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool Repeat { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property Repeat As Boolean
  overload: SadConsole.Effects.EffectSet.Repeat*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.Effects.EffectSet.DelayBetweenEffects
  commentId: P:SadConsole.Effects.EffectSet.DelayBetweenEffects
  id: DelayBetweenEffects
  parent: SadConsole.Effects.EffectSet
  langs:
  - csharp
  - vb
  name: DelayBetweenEffects
  nameWithType: EffectSet.DelayBetweenEffects
  fullName: SadConsole.Effects.EffectSet.DelayBetweenEffects
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.Effects
  summary: An artificial delay between each effect.
  example: []
  syntax:
    content: >-
      [DataMember]

      public TimeSpan DelayBetweenEffects { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: >-
      <DataMember>

      Public Property DelayBetweenEffects As TimeSpan
  overload: SadConsole.Effects.EffectSet.DelayBetweenEffects*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
references:
- uid: SadConsole.Effects
  commentId: N:SadConsole.Effects
  isExternal: true
  href: SadConsole.html
  name: SadConsole.Effects
  nameWithType: SadConsole.Effects
  fullName: SadConsole.Effects
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.Effects
    name: Effects
    isExternal: true
    href: SadConsole.Effects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SadConsole.Effects.CellEffectBase
  commentId: T:SadConsole.Effects.CellEffectBase
  parent: SadConsole.Effects
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html
  name: CellEffectBase
  nameWithType: CellEffectBase
  fullName: SadConsole.Effects.CellEffectBase
- uid: SadConsole.Effects.ICellEffect
  commentId: T:SadConsole.Effects.ICellEffect
  parent: SadConsole.Effects
  isExternal: true
  href: SadConsole.Effects.ICellEffect.html
  name: ICellEffect
  nameWithType: ICellEffect
  fullName: SadConsole.Effects.ICellEffect
- uid: System.Collections.Generic.IEnumerable{SadConsole.Effects.ICellEffect}
  commentId: T:System.Collections.Generic.IEnumerable{SadConsole.Effects.ICellEffect}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ICellEffect>
  nameWithType: IEnumerable<ICellEffect>
  fullName: System.Collections.Generic.IEnumerable<SadConsole.Effects.ICellEffect>
  nameWithType.vb: IEnumerable(Of ICellEffect)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.Effects.ICellEffect)
  name.vb: IEnumerable(Of ICellEffect)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.Effects.ICellEffect
    name: ICellEffect
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Effects.ICellEffect
    name: ICellEffect
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: SadConsole.Effects.CellEffectBase._delayFinished
  commentId: F:SadConsole.Effects.CellEffectBase._delayFinished
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase__delayFinished
  name: _delayFinished
  nameWithType: CellEffectBase._delayFinished
  fullName: SadConsole.Effects.CellEffectBase._delayFinished
- uid: SadConsole.Effects.CellEffectBase._timeElapsed
  commentId: F:SadConsole.Effects.CellEffectBase._timeElapsed
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase__timeElapsed
  name: _timeElapsed
  nameWithType: CellEffectBase._timeElapsed
  fullName: SadConsole.Effects.CellEffectBase._timeElapsed
- uid: SadConsole.Effects.CellEffectBase.IsFinished
  commentId: P:SadConsole.Effects.CellEffectBase.IsFinished
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_IsFinished
  name: IsFinished
  nameWithType: CellEffectBase.IsFinished
  fullName: SadConsole.Effects.CellEffectBase.IsFinished
- uid: SadConsole.Effects.CellEffectBase.CloneOnAdd
  commentId: P:SadConsole.Effects.CellEffectBase.CloneOnAdd
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_CloneOnAdd
  name: CloneOnAdd
  nameWithType: CellEffectBase.CloneOnAdd
  fullName: SadConsole.Effects.CellEffectBase.CloneOnAdd
- uid: SadConsole.Effects.CellEffectBase.StartDelay
  commentId: P:SadConsole.Effects.CellEffectBase.StartDelay
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_StartDelay
  name: StartDelay
  nameWithType: CellEffectBase.StartDelay
  fullName: SadConsole.Effects.CellEffectBase.StartDelay
- uid: SadConsole.Effects.CellEffectBase.RemoveOnFinished
  commentId: P:SadConsole.Effects.CellEffectBase.RemoveOnFinished
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_RemoveOnFinished
  name: RemoveOnFinished
  nameWithType: CellEffectBase.RemoveOnFinished
  fullName: SadConsole.Effects.CellEffectBase.RemoveOnFinished
- uid: SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
  commentId: P:SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_RestoreCellOnRemoved
  name: RestoreCellOnRemoved
  nameWithType: CellEffectBase.RestoreCellOnRemoved
  fullName: SadConsole.Effects.CellEffectBase.RestoreCellOnRemoved
- uid: SadConsole.Effects.CellEffectBase.RunEffectOnApply
  commentId: P:SadConsole.Effects.CellEffectBase.RunEffectOnApply
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_RunEffectOnApply
  name: RunEffectOnApply
  nameWithType: CellEffectBase.RunEffectOnApply
  fullName: SadConsole.Effects.CellEffectBase.RunEffectOnApply
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  name: ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  nameWithType: CellEffectBase.ApplyToCell(ColoredGlyphBase, ColoredGlyphBase)
  fullName: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase, SadConsole.ColoredGlyphBase)
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
    name: ApplyToCell
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  - name: (
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.ApplyToCell(SadConsole.ColoredGlyphBase,SadConsole.ColoredGlyphBase)
    name: ApplyToCell
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  - name: (
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: ','
  - name: " "
  - uid: SadConsole.ColoredGlyphBase
    name: ColoredGlyphBase
    isExternal: true
    href: SadConsole.ColoredGlyphBase.html
  - name: )
- uid: SadConsole.Effects.EffectSet.ApplyToCell*
  commentId: Overload:SadConsole.Effects.EffectSet.ApplyToCell
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_ApplyToCell_SadConsole_ColoredGlyphBase_SadConsole_ColoredGlyphBase_
  name: ApplyToCell
  nameWithType: EffectSet.ApplyToCell
  fullName: SadConsole.Effects.EffectSet.ApplyToCell
- uid: SadConsole.ColoredGlyphBase
  commentId: T:SadConsole.ColoredGlyphBase
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredGlyphBase.html
  name: ColoredGlyphBase
  nameWithType: ColoredGlyphBase
  fullName: SadConsole.ColoredGlyphBase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  commentId: M:SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Update_System_TimeSpan_
  name: Update(TimeSpan)
  nameWithType: CellEffectBase.Update(TimeSpan)
  fullName: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
    name: Update
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Update_System_TimeSpan_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.Update(System.TimeSpan)
    name: Update
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Update_System_TimeSpan_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: SadConsole.Effects.EffectSet.Update*
  commentId: Overload:SadConsole.Effects.EffectSet.Update
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_Update_System_TimeSpan_
  name: Update
  nameWithType: EffectSet.Update
  fullName: SadConsole.Effects.EffectSet.Update
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: SadConsole.Effects.CellEffectBase.Restart
  commentId: M:SadConsole.Effects.CellEffectBase.Restart
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Restart
  name: Restart()
  nameWithType: CellEffectBase.Restart()
  fullName: SadConsole.Effects.CellEffectBase.Restart()
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.Restart
    name: Restart
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Restart
  - name: (
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.Restart
    name: Restart
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Restart
  - name: (
  - name: )
- uid: SadConsole.Effects.EffectSet.Restart*
  commentId: Overload:SadConsole.Effects.EffectSet.Restart
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_Restart
  name: Restart
  nameWithType: EffectSet.Restart
  fullName: SadConsole.Effects.EffectSet.Restart
- uid: SadConsole.Effects.CellEffectBase.Clone
  commentId: M:SadConsole.Effects.CellEffectBase.Clone
  parent: SadConsole.Effects.CellEffectBase
  isExternal: true
  href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Clone
  name: Clone()
  nameWithType: CellEffectBase.Clone()
  fullName: SadConsole.Effects.CellEffectBase.Clone()
  spec.csharp:
  - uid: SadConsole.Effects.CellEffectBase.Clone
    name: Clone
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: SadConsole.Effects.CellEffectBase.Clone
    name: Clone
    isExternal: true
    href: SadConsole.Effects.CellEffectBase.html#SadConsole_Effects_CellEffectBase_Clone
  - name: (
  - name: )
- uid: SadConsole.Effects.EffectSet.Clone*
  commentId: Overload:SadConsole.Effects.EffectSet.Clone
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_Clone
  name: Clone
  nameWithType: EffectSet.Clone
  fullName: SadConsole.Effects.EffectSet.Clone
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SadConsole.Effects.EffectSet.ToString*
  commentId: Overload:SadConsole.Effects.EffectSet.ToString
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_ToString
  name: ToString
  nameWithType: EffectSet.ToString
  fullName: SadConsole.Effects.EffectSet.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SadConsole.Effects.EffectSet.GetEnumerator*
  commentId: Overload:SadConsole.Effects.EffectSet.GetEnumerator
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_GetEnumerator
  name: GetEnumerator
  nameWithType: EffectSet.GetEnumerator
  fullName: SadConsole.Effects.EffectSet.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{SadConsole.Effects.ICellEffect}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{SadConsole.Effects.ICellEffect}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{SadConsole.Effects.ICellEffect}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<ICellEffect>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<SadConsole.Effects.ICellEffect>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of ICellEffect).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.Effects.ICellEffect).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{SadConsole.Effects.ICellEffect}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{SadConsole.Effects.ICellEffect}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{SadConsole.Effects.ICellEffect}
  commentId: T:System.Collections.Generic.IEnumerator{SadConsole.Effects.ICellEffect}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<ICellEffect>
  nameWithType: IEnumerator<ICellEffect>
  fullName: System.Collections.Generic.IEnumerator<SadConsole.Effects.ICellEffect>
  nameWithType.vb: IEnumerator(Of ICellEffect)
  fullName.vb: System.Collections.Generic.IEnumerator(Of SadConsole.Effects.ICellEffect)
  name.vb: IEnumerator(Of ICellEffect)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: SadConsole.Effects.ICellEffect
    name: ICellEffect
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Effects.ICellEffect
    name: ICellEffect
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.Effects.EffectSet.Effects
  commentId: P:SadConsole.Effects.EffectSet.Effects
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_Effects
  name: Effects
  nameWithType: EffectSet.Effects
  fullName: SadConsole.Effects.EffectSet.Effects
- uid: SadConsole.Effects.EffectSet.Add*
  commentId: Overload:SadConsole.Effects.EffectSet.Add
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_Add_SadConsole_Effects_ICellEffect_
  name: Add
  nameWithType: EffectSet.Add
  fullName: SadConsole.Effects.EffectSet.Add
- uid: SadConsole.Effects.EffectSet.#ctor*
  commentId: Overload:SadConsole.Effects.EffectSet.#ctor
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet__ctor
  name: EffectSet
  nameWithType: EffectSet.EffectSet
  fullName: SadConsole.Effects.EffectSet.EffectSet
  nameWithType.vb: EffectSet.New
  fullName.vb: SadConsole.Effects.EffectSet.New
  name.vb: New
- uid: SadConsole.Effects.EffectSet.Effects*
  commentId: Overload:SadConsole.Effects.EffectSet.Effects
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_Effects
  name: Effects
  nameWithType: EffectSet.Effects
  fullName: SadConsole.Effects.EffectSet.Effects
- uid: System.Collections.Generic.LinkedList{SadConsole.Effects.ICellEffect}
  commentId: T:System.Collections.Generic.LinkedList{SadConsole.Effects.ICellEffect}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.LinkedList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  name: LinkedList<ICellEffect>
  nameWithType: LinkedList<ICellEffect>
  fullName: System.Collections.Generic.LinkedList<SadConsole.Effects.ICellEffect>
  nameWithType.vb: LinkedList(Of ICellEffect)
  fullName.vb: System.Collections.Generic.LinkedList(Of SadConsole.Effects.ICellEffect)
  name.vb: LinkedList(Of ICellEffect)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: <
  - uid: SadConsole.Effects.ICellEffect
    name: ICellEffect
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.Effects.ICellEffect
    name: ICellEffect
    isExternal: true
    href: SadConsole.Effects.ICellEffect.html
  - name: )
- uid: System.Collections.Generic.LinkedList`1
  commentId: T:System.Collections.Generic.LinkedList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  name: LinkedList<T>
  nameWithType: LinkedList<T>
  fullName: System.Collections.Generic.LinkedList<T>
  nameWithType.vb: LinkedList(Of T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T)
  name.vb: LinkedList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.Effects.EffectSet.Repeat*
  commentId: Overload:SadConsole.Effects.EffectSet.Repeat
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_Repeat
  name: Repeat
  nameWithType: EffectSet.Repeat
  fullName: SadConsole.Effects.EffectSet.Repeat
- uid: SadConsole.Effects.EffectSet.DelayBetweenEffects*
  commentId: Overload:SadConsole.Effects.EffectSet.DelayBetweenEffects
  isExternal: true
  href: SadConsole.Effects.EffectSet.html#SadConsole_Effects_EffectSet_DelayBetweenEffects
  name: DelayBetweenEffects
  nameWithType: EffectSet.DelayBetweenEffects
  fullName: SadConsole.Effects.EffectSet.DelayBetweenEffects
