### YamlMime:ManagedReference
items:
- uid: SadConsole.StringParser.ParseCommandStacks
  commentId: T:SadConsole.StringParser.ParseCommandStacks
  id: ParseCommandStacks
  parent: SadConsole.StringParser
  children:
  - SadConsole.StringParser.ParseCommandStacks.#ctor
  - SadConsole.StringParser.ParseCommandStacks.AddSafe(SadConsole.StringParser.ParseCommandBase)
  - SadConsole.StringParser.ParseCommandStacks.All
  - SadConsole.StringParser.ParseCommandStacks.Background
  - SadConsole.StringParser.ParseCommandStacks.CalculatedDecorators
  - SadConsole.StringParser.ParseCommandStacks.Decorator
  - SadConsole.StringParser.ParseCommandStacks.Effect
  - SadConsole.StringParser.ParseCommandStacks.Foreground
  - SadConsole.StringParser.ParseCommandStacks.Glyph
  - SadConsole.StringParser.ParseCommandStacks.Mirror
  - SadConsole.StringParser.ParseCommandStacks.RemoveSafe(SadConsole.StringParser.ParseCommandBase)
  langs:
  - csharp
  - vb
  name: ParseCommandStacks
  nameWithType: ParseCommandStacks
  fullName: SadConsole.StringParser.ParseCommandStacks
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: A list of behaviors applied as a string is processed.
  example: []
  syntax:
    content: public class ParseCommandStacks
    content.vb: Public Class ParseCommandStacks
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: SadConsole.StringParser.ParseCommandStacks.#ctor
  commentId: M:SadConsole.StringParser.ParseCommandStacks.#ctor
  id: '#ctor'
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: ParseCommandStacks()
  nameWithType: ParseCommandStacks.ParseCommandStacks()
  fullName: SadConsole.StringParser.ParseCommandStacks.ParseCommandStacks()
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: Creates new stacks of commands.
  example: []
  syntax:
    content: public ParseCommandStacks()
    content.vb: Public Sub New()
  overload: SadConsole.StringParser.ParseCommandStacks.#ctor*
  nameWithType.vb: ParseCommandStacks.New()
  fullName.vb: SadConsole.StringParser.ParseCommandStacks.New()
  name.vb: New()
- uid: SadConsole.StringParser.ParseCommandStacks.AddSafe(SadConsole.StringParser.ParseCommandBase)
  commentId: M:SadConsole.StringParser.ParseCommandStacks.AddSafe(SadConsole.StringParser.ParseCommandBase)
  id: AddSafe(SadConsole.StringParser.ParseCommandBase)
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: AddSafe(ParseCommandBase)
  nameWithType: ParseCommandStacks.AddSafe(ParseCommandBase)
  fullName: SadConsole.StringParser.ParseCommandStacks.AddSafe(SadConsole.StringParser.ParseCommandBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: >-
    Adds a behavior to the <xref href="SadConsole.StringParser.ParseCommandStacks.All" data-throw-if-not-resolved="false"></xref> collection and the collection 

    based on the <xref href="SadConsole.StringParser.ParseCommandBase.CommandType" data-throw-if-not-resolved="false"></xref> type.
  example: []
  syntax:
    content: public void AddSafe(ParseCommandBase command)
    parameters:
    - id: command
      type: SadConsole.StringParser.ParseCommandBase
      description: ''
    content.vb: Public Sub AddSafe(command As ParseCommandBase)
  overload: SadConsole.StringParser.ParseCommandStacks.AddSafe*
- uid: SadConsole.StringParser.ParseCommandStacks.RemoveSafe(SadConsole.StringParser.ParseCommandBase)
  commentId: M:SadConsole.StringParser.ParseCommandStacks.RemoveSafe(SadConsole.StringParser.ParseCommandBase)
  id: RemoveSafe(SadConsole.StringParser.ParseCommandBase)
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: RemoveSafe(ParseCommandBase)
  nameWithType: ParseCommandStacks.RemoveSafe(ParseCommandBase)
  fullName: SadConsole.StringParser.ParseCommandStacks.RemoveSafe(SadConsole.StringParser.ParseCommandBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: Removes a command from the appropriate command stack and from the <xref href="SadConsole.StringParser.ParseCommandStacks.All" data-throw-if-not-resolved="false"></xref> stack.
  example: []
  syntax:
    content: public void RemoveSafe(ParseCommandBase command)
    parameters:
    - id: command
      type: SadConsole.StringParser.ParseCommandBase
      description: The command to remove
    content.vb: Public Sub RemoveSafe(command As ParseCommandBase)
  overload: SadConsole.StringParser.ParseCommandStacks.RemoveSafe*
- uid: SadConsole.StringParser.ParseCommandStacks.Foreground
  commentId: P:SadConsole.StringParser.ParseCommandStacks.Foreground
  id: Foreground
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: Foreground
  nameWithType: ParseCommandStacks.Foreground
  fullName: SadConsole.StringParser.ParseCommandStacks.Foreground
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: The commands that affect the foreground.
  example: []
  syntax:
    content: public Stack<ParseCommandBase> Foreground { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Stack{SadConsole.StringParser.ParseCommandBase}
    content.vb: Public Property Foreground As Stack(Of ParseCommandBase)
  overload: SadConsole.StringParser.ParseCommandStacks.Foreground*
- uid: SadConsole.StringParser.ParseCommandStacks.Background
  commentId: P:SadConsole.StringParser.ParseCommandStacks.Background
  id: Background
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: Background
  nameWithType: ParseCommandStacks.Background
  fullName: SadConsole.StringParser.ParseCommandStacks.Background
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: The commands that affect the background.
  example: []
  syntax:
    content: public Stack<ParseCommandBase> Background { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Stack{SadConsole.StringParser.ParseCommandBase}
    content.vb: Public Property Background As Stack(Of ParseCommandBase)
  overload: SadConsole.StringParser.ParseCommandStacks.Background*
- uid: SadConsole.StringParser.ParseCommandStacks.Glyph
  commentId: P:SadConsole.StringParser.ParseCommandStacks.Glyph
  id: Glyph
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: Glyph
  nameWithType: ParseCommandStacks.Glyph
  fullName: SadConsole.StringParser.ParseCommandStacks.Glyph
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: The commands that affect the glyph.
  example: []
  syntax:
    content: public Stack<ParseCommandBase> Glyph { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Stack{SadConsole.StringParser.ParseCommandBase}
    content.vb: Public Property Glyph As Stack(Of ParseCommandBase)
  overload: SadConsole.StringParser.ParseCommandStacks.Glyph*
- uid: SadConsole.StringParser.ParseCommandStacks.Mirror
  commentId: P:SadConsole.StringParser.ParseCommandStacks.Mirror
  id: Mirror
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: Mirror
  nameWithType: ParseCommandStacks.Mirror
  fullName: SadConsole.StringParser.ParseCommandStacks.Mirror
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: The commands that affect the mirror setting.
  example: []
  syntax:
    content: public Stack<ParseCommandBase> Mirror { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Stack{SadConsole.StringParser.ParseCommandBase}
    content.vb: Public Property Mirror As Stack(Of ParseCommandBase)
  overload: SadConsole.StringParser.ParseCommandStacks.Mirror*
- uid: SadConsole.StringParser.ParseCommandStacks.Effect
  commentId: P:SadConsole.StringParser.ParseCommandStacks.Effect
  id: Effect
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: ParseCommandStacks.Effect
  fullName: SadConsole.StringParser.ParseCommandStacks.Effect
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: The commands that affect the glyph effect.
  example: []
  syntax:
    content: public Stack<ParseCommandBase> Effect { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Stack{SadConsole.StringParser.ParseCommandBase}
    content.vb: Public Property Effect As Stack(Of ParseCommandBase)
  overload: SadConsole.StringParser.ParseCommandStacks.Effect*
- uid: SadConsole.StringParser.ParseCommandStacks.Decorator
  commentId: P:SadConsole.StringParser.ParseCommandStacks.Decorator
  id: Decorator
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: Decorator
  nameWithType: ParseCommandStacks.Decorator
  fullName: SadConsole.StringParser.ParseCommandStacks.Decorator
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: The commands that affect the glyph decorators.
  example: []
  syntax:
    content: public Stack<ParseCommandBase> Decorator { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Stack{SadConsole.StringParser.ParseCommandBase}
    content.vb: Public Property Decorator As Stack(Of ParseCommandBase)
  overload: SadConsole.StringParser.ParseCommandStacks.Decorator*
- uid: SadConsole.StringParser.ParseCommandStacks.All
  commentId: P:SadConsole.StringParser.ParseCommandStacks.All
  id: All
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: All
  nameWithType: ParseCommandStacks.All
  fullName: SadConsole.StringParser.ParseCommandStacks.All
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: All commands.
  example: []
  syntax:
    content: public Stack<ParseCommandBase> All { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Stack{SadConsole.StringParser.ParseCommandBase}
    content.vb: Public Property All As Stack(Of ParseCommandBase)
  overload: SadConsole.StringParser.ParseCommandStacks.All*
- uid: SadConsole.StringParser.ParseCommandStacks.CalculatedDecorators
  commentId: P:SadConsole.StringParser.ParseCommandStacks.CalculatedDecorators
  id: CalculatedDecorators
  parent: SadConsole.StringParser.ParseCommandStacks
  langs:
  - csharp
  - vb
  name: CalculatedDecorators
  nameWithType: ParseCommandStacks.CalculatedDecorators
  fullName: SadConsole.StringParser.ParseCommandStacks.CalculatedDecorators
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole.StringParser
  summary: Returns the active array that is calculated from the <xref href="SadConsole.StringParser.ParseCommandStacks.Decorator" data-throw-if-not-resolved="false"></xref> stack.
  example: []
  syntax:
    content: public CellDecorator[] CalculatedDecorators { get; set; }
    parameters: []
    return:
      type: SadConsole.CellDecorator[]
    content.vb: Public Property CalculatedDecorators As CellDecorator()
  overload: SadConsole.StringParser.ParseCommandStacks.CalculatedDecorators*
references:
- uid: SadConsole.StringParser
  commentId: N:SadConsole.StringParser
  isExternal: true
  href: SadConsole.html
  name: SadConsole.StringParser
  nameWithType: SadConsole.StringParser
  fullName: SadConsole.StringParser
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.StringParser
    name: StringParser
    isExternal: true
    href: SadConsole.StringParser.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.StringParser
    name: StringParser
    isExternal: true
    href: SadConsole.StringParser.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.StringParser.ParseCommandStacks.#ctor*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.#ctor
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks__ctor
  name: ParseCommandStacks
  nameWithType: ParseCommandStacks.ParseCommandStacks
  fullName: SadConsole.StringParser.ParseCommandStacks.ParseCommandStacks
  nameWithType.vb: ParseCommandStacks.New
  fullName.vb: SadConsole.StringParser.ParseCommandStacks.New
  name.vb: New
- uid: SadConsole.StringParser.ParseCommandStacks.All
  commentId: P:SadConsole.StringParser.ParseCommandStacks.All
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_All
  name: All
  nameWithType: ParseCommandStacks.All
  fullName: SadConsole.StringParser.ParseCommandStacks.All
- uid: SadConsole.StringParser.ParseCommandBase.CommandType
  commentId: F:SadConsole.StringParser.ParseCommandBase.CommandType
  parent: SadConsole.StringParser.ParseCommandBase
  isExternal: true
  href: SadConsole.StringParser.ParseCommandBase.html#SadConsole_StringParser_ParseCommandBase_CommandType
  name: CommandType
  nameWithType: ParseCommandBase.CommandType
  fullName: SadConsole.StringParser.ParseCommandBase.CommandType
- uid: SadConsole.StringParser.ParseCommandStacks.AddSafe*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.AddSafe
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_AddSafe_SadConsole_StringParser_ParseCommandBase_
  name: AddSafe
  nameWithType: ParseCommandStacks.AddSafe
  fullName: SadConsole.StringParser.ParseCommandStacks.AddSafe
- uid: SadConsole.StringParser.ParseCommandBase
  commentId: T:SadConsole.StringParser.ParseCommandBase
  parent: SadConsole.StringParser
  isExternal: true
  href: SadConsole.StringParser.ParseCommandBase.html
  name: ParseCommandBase
  nameWithType: ParseCommandBase
  fullName: SadConsole.StringParser.ParseCommandBase
- uid: SadConsole.StringParser.ParseCommandStacks.RemoveSafe*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.RemoveSafe
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_RemoveSafe_SadConsole_StringParser_ParseCommandBase_
  name: RemoveSafe
  nameWithType: ParseCommandStacks.RemoveSafe
  fullName: SadConsole.StringParser.ParseCommandStacks.RemoveSafe
- uid: SadConsole.StringParser.ParseCommandStacks.Foreground*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.Foreground
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_Foreground
  name: Foreground
  nameWithType: ParseCommandStacks.Foreground
  fullName: SadConsole.StringParser.ParseCommandStacks.Foreground
- uid: System.Collections.Generic.Stack{SadConsole.StringParser.ParseCommandBase}
  commentId: T:System.Collections.Generic.Stack{SadConsole.StringParser.ParseCommandBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Stack`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  name: Stack<ParseCommandBase>
  nameWithType: Stack<ParseCommandBase>
  fullName: System.Collections.Generic.Stack<SadConsole.StringParser.ParseCommandBase>
  nameWithType.vb: Stack(Of ParseCommandBase)
  fullName.vb: System.Collections.Generic.Stack(Of SadConsole.StringParser.ParseCommandBase)
  name.vb: Stack(Of ParseCommandBase)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: <
  - uid: SadConsole.StringParser.ParseCommandBase
    name: ParseCommandBase
    isExternal: true
    href: SadConsole.StringParser.ParseCommandBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.StringParser.ParseCommandBase
    name: ParseCommandBase
    isExternal: true
    href: SadConsole.StringParser.ParseCommandBase.html
  - name: )
- uid: System.Collections.Generic.Stack`1
  commentId: T:System.Collections.Generic.Stack`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  name: Stack<T>
  nameWithType: Stack<T>
  fullName: System.Collections.Generic.Stack<T>
  nameWithType.vb: Stack(Of T)
  fullName.vb: System.Collections.Generic.Stack(Of T)
  name.vb: Stack(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SadConsole.StringParser.ParseCommandStacks.Background*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.Background
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_Background
  name: Background
  nameWithType: ParseCommandStacks.Background
  fullName: SadConsole.StringParser.ParseCommandStacks.Background
- uid: SadConsole.StringParser.ParseCommandStacks.Glyph*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.Glyph
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_Glyph
  name: Glyph
  nameWithType: ParseCommandStacks.Glyph
  fullName: SadConsole.StringParser.ParseCommandStacks.Glyph
- uid: SadConsole.StringParser.ParseCommandStacks.Mirror*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.Mirror
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_Mirror
  name: Mirror
  nameWithType: ParseCommandStacks.Mirror
  fullName: SadConsole.StringParser.ParseCommandStacks.Mirror
- uid: SadConsole.StringParser.ParseCommandStacks.Effect*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.Effect
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_Effect
  name: Effect
  nameWithType: ParseCommandStacks.Effect
  fullName: SadConsole.StringParser.ParseCommandStacks.Effect
- uid: SadConsole.StringParser.ParseCommandStacks.Decorator*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.Decorator
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_Decorator
  name: Decorator
  nameWithType: ParseCommandStacks.Decorator
  fullName: SadConsole.StringParser.ParseCommandStacks.Decorator
- uid: SadConsole.StringParser.ParseCommandStacks.All*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.All
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_All
  name: All
  nameWithType: ParseCommandStacks.All
  fullName: SadConsole.StringParser.ParseCommandStacks.All
- uid: SadConsole.StringParser.ParseCommandStacks.Decorator
  commentId: P:SadConsole.StringParser.ParseCommandStacks.Decorator
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_Decorator
  name: Decorator
  nameWithType: ParseCommandStacks.Decorator
  fullName: SadConsole.StringParser.ParseCommandStacks.Decorator
- uid: SadConsole.StringParser.ParseCommandStacks.CalculatedDecorators*
  commentId: Overload:SadConsole.StringParser.ParseCommandStacks.CalculatedDecorators
  isExternal: true
  href: SadConsole.StringParser.ParseCommandStacks.html#SadConsole_StringParser_ParseCommandStacks_CalculatedDecorators
  name: CalculatedDecorators
  nameWithType: ParseCommandStacks.CalculatedDecorators
  fullName: SadConsole.StringParser.ParseCommandStacks.CalculatedDecorators
- uid: SadConsole.CellDecorator[]
  isExternal: true
  href: SadConsole.CellDecorator.html
  name: CellDecorator[]
  nameWithType: CellDecorator[]
  fullName: SadConsole.CellDecorator[]
  nameWithType.vb: CellDecorator()
  fullName.vb: SadConsole.CellDecorator()
  name.vb: CellDecorator()
  spec.csharp:
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: (
  - name: )
