### YamlMime:ManagedReference
items:
- uid: SadConsole.CellDecoratorHelpers
  commentId: T:SadConsole.CellDecoratorHelpers
  id: CellDecoratorHelpers
  parent: SadConsole
  children:
  - SadConsole.CellDecoratorHelpers.AddDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  - SadConsole.CellDecoratorHelpers.AddDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  - SadConsole.CellDecoratorHelpers.CloneDecorators(SadConsole.ColoredGlyphBase)
  - SadConsole.CellDecoratorHelpers.ItemsMatch(System.Collections.Generic.List{SadConsole.CellDecorator},System.Collections.Generic.List{SadConsole.CellDecorator})
  - SadConsole.CellDecoratorHelpers.Pool
  - SadConsole.CellDecoratorHelpers.RemoveAllDecorators(SadConsole.ColoredGlyphBase)
  - SadConsole.CellDecoratorHelpers.RemoveDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  - SadConsole.CellDecoratorHelpers.RemoveDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  - SadConsole.CellDecoratorHelpers.SetDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  - SadConsole.CellDecoratorHelpers.SetDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  langs:
  - csharp
  - vb
  name: CellDecoratorHelpers
  nameWithType: CellDecoratorHelpers
  fullName: SadConsole.CellDecoratorHelpers
  type: Class
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Helpers for <xref href="SadConsole.CellDecorator" data-throw-if-not-resolved="false"></xref> and <xref href="SadConsole.ColoredGlyphBase.Decorators" data-throw-if-not-resolved="false"></xref> which manages null on the property.
  example: []
  syntax:
    content: public static class CellDecoratorHelpers
    content.vb: Public Module CellDecoratorHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: SadConsole.CellDecoratorHelpers.SetDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.CellDecoratorHelpers.SetDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  id: SetDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  parent: SadConsole.CellDecoratorHelpers
  langs:
  - csharp
  - vb
  name: SetDecorators(IEnumerable<CellDecorator>?, ColoredGlyphBase)
  nameWithType: CellDecoratorHelpers.SetDecorators(IEnumerable<CellDecorator>?, ColoredGlyphBase)
  fullName: SadConsole.CellDecoratorHelpers.SetDecorators(System.Collections.Generic.IEnumerable<SadConsole.CellDecorator>?, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Replaces the decorators of a glyph.
  example: []
  syntax:
    content: public static void SetDecorators(IEnumerable<CellDecorator>? decorators, ColoredGlyphBase glyph)
    parameters:
    - id: decorators
      type: System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
      description: The decorators to set. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> clears the decorators.
    - id: glyph
      type: SadConsole.ColoredGlyphBase
      description: The glyph to alter.
    content.vb: Public Shared Sub SetDecorators(decorators As IEnumerable(Of CellDecorator), glyph As ColoredGlyphBase)
  overload: SadConsole.CellDecoratorHelpers.SetDecorators*
  nameWithType.vb: CellDecoratorHelpers.SetDecorators(IEnumerable(Of CellDecorator), ColoredGlyphBase)
  fullName.vb: SadConsole.CellDecoratorHelpers.SetDecorators(System.Collections.Generic.IEnumerable(Of SadConsole.CellDecorator), SadConsole.ColoredGlyphBase)
  name.vb: SetDecorators(IEnumerable(Of CellDecorator), ColoredGlyphBase)
- uid: SadConsole.CellDecoratorHelpers.SetDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.CellDecoratorHelpers.SetDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  id: SetDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  parent: SadConsole.CellDecoratorHelpers
  langs:
  - csharp
  - vb
  name: SetDecorator(CellDecorator, ColoredGlyphBase)
  nameWithType: CellDecoratorHelpers.SetDecorator(CellDecorator, ColoredGlyphBase)
  fullName: SadConsole.CellDecoratorHelpers.SetDecorator(SadConsole.CellDecorator, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Replaces the decorators of a glyph with a single decorator.
  example: []
  syntax:
    content: public static void SetDecorator(CellDecorator decorator, ColoredGlyphBase glyph)
    parameters:
    - id: decorator
      type: SadConsole.CellDecorator
      description: The decorator to set.
    - id: glyph
      type: SadConsole.ColoredGlyphBase
      description: The glyph to alter.
    content.vb: Public Shared Sub SetDecorator(decorator As CellDecorator, glyph As ColoredGlyphBase)
  overload: SadConsole.CellDecoratorHelpers.SetDecorator*
- uid: SadConsole.CellDecoratorHelpers.AddDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.CellDecoratorHelpers.AddDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  id: AddDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  parent: SadConsole.CellDecoratorHelpers
  langs:
  - csharp
  - vb
  name: AddDecorators(IEnumerable<CellDecorator>?, ColoredGlyphBase)
  nameWithType: CellDecoratorHelpers.AddDecorators(IEnumerable<CellDecorator>?, ColoredGlyphBase)
  fullName: SadConsole.CellDecoratorHelpers.AddDecorators(System.Collections.Generic.IEnumerable<SadConsole.CellDecorator>?, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Adds the decorators to a glyph.
  example: []
  syntax:
    content: public static void AddDecorators(IEnumerable<CellDecorator>? decorators, ColoredGlyphBase glyph)
    parameters:
    - id: decorators
      type: System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
      description: The decorators to add. Duplicates are skipped.
    - id: glyph
      type: SadConsole.ColoredGlyphBase
      description: The glyph to alter.
    content.vb: Public Shared Sub AddDecorators(decorators As IEnumerable(Of CellDecorator), glyph As ColoredGlyphBase)
  overload: SadConsole.CellDecoratorHelpers.AddDecorators*
  nameWithType.vb: CellDecoratorHelpers.AddDecorators(IEnumerable(Of CellDecorator), ColoredGlyphBase)
  fullName.vb: SadConsole.CellDecoratorHelpers.AddDecorators(System.Collections.Generic.IEnumerable(Of SadConsole.CellDecorator), SadConsole.ColoredGlyphBase)
  name.vb: AddDecorators(IEnumerable(Of CellDecorator), ColoredGlyphBase)
- uid: SadConsole.CellDecoratorHelpers.AddDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.CellDecoratorHelpers.AddDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  id: AddDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  parent: SadConsole.CellDecoratorHelpers
  langs:
  - csharp
  - vb
  name: AddDecorator(CellDecorator, ColoredGlyphBase)
  nameWithType: CellDecoratorHelpers.AddDecorator(CellDecorator, ColoredGlyphBase)
  fullName: SadConsole.CellDecoratorHelpers.AddDecorator(SadConsole.CellDecorator, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Adds the specified decorator to a glyph.
  example: []
  syntax:
    content: public static void AddDecorator(CellDecorator decorator, ColoredGlyphBase glyph)
    parameters:
    - id: decorator
      type: SadConsole.CellDecorator
      description: The decorator to add.
    - id: glyph
      type: SadConsole.ColoredGlyphBase
      description: The glyph to alter.
    content.vb: Public Shared Sub AddDecorator(decorator As CellDecorator, glyph As ColoredGlyphBase)
  overload: SadConsole.CellDecoratorHelpers.AddDecorator*
- uid: SadConsole.CellDecoratorHelpers.RemoveDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.CellDecoratorHelpers.RemoveDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  id: RemoveDecorators(System.Collections.Generic.IEnumerable{SadConsole.CellDecorator},SadConsole.ColoredGlyphBase)
  parent: SadConsole.CellDecoratorHelpers
  langs:
  - csharp
  - vb
  name: RemoveDecorators(IEnumerable<CellDecorator>, ColoredGlyphBase)
  nameWithType: CellDecoratorHelpers.RemoveDecorators(IEnumerable<CellDecorator>, ColoredGlyphBase)
  fullName: SadConsole.CellDecoratorHelpers.RemoveDecorators(System.Collections.Generic.IEnumerable<SadConsole.CellDecorator>, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Removes the specified decorators from a glyph. If no decorators remain on the glyph, the <xref href="SadConsole.ColoredGlyphBase.Decorators" data-throw-if-not-resolved="false"></xref> collection is set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: public static void RemoveDecorators(IEnumerable<CellDecorator> decorators, ColoredGlyphBase glyph)
    parameters:
    - id: decorators
      type: System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
      description: The decorators to remove.
    - id: glyph
      type: SadConsole.ColoredGlyphBase
      description: The glyph to alter.
    content.vb: Public Shared Sub RemoveDecorators(decorators As IEnumerable(Of CellDecorator), glyph As ColoredGlyphBase)
  overload: SadConsole.CellDecoratorHelpers.RemoveDecorators*
  nameWithType.vb: CellDecoratorHelpers.RemoveDecorators(IEnumerable(Of CellDecorator), ColoredGlyphBase)
  fullName.vb: SadConsole.CellDecoratorHelpers.RemoveDecorators(System.Collections.Generic.IEnumerable(Of SadConsole.CellDecorator), SadConsole.ColoredGlyphBase)
  name.vb: RemoveDecorators(IEnumerable(Of CellDecorator), ColoredGlyphBase)
- uid: SadConsole.CellDecoratorHelpers.RemoveAllDecorators(SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.CellDecoratorHelpers.RemoveAllDecorators(SadConsole.ColoredGlyphBase)
  id: RemoveAllDecorators(SadConsole.ColoredGlyphBase)
  parent: SadConsole.CellDecoratorHelpers
  langs:
  - csharp
  - vb
  name: RemoveAllDecorators(ColoredGlyphBase)
  nameWithType: CellDecoratorHelpers.RemoveAllDecorators(ColoredGlyphBase)
  fullName: SadConsole.CellDecoratorHelpers.RemoveAllDecorators(SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Removes all decorators from a glyph, returns the list to the pool, and sets the <xref href="SadConsole.ColoredGlyphBase.Decorators" data-throw-if-not-resolved="false"></xref> collection to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: public static void RemoveAllDecorators(ColoredGlyphBase glyph)
    parameters:
    - id: glyph
      type: SadConsole.ColoredGlyphBase
      description: The glyph to alter.
    content.vb: Public Shared Sub RemoveAllDecorators(glyph As ColoredGlyphBase)
  overload: SadConsole.CellDecoratorHelpers.RemoveAllDecorators*
- uid: SadConsole.CellDecoratorHelpers.RemoveDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.CellDecoratorHelpers.RemoveDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  id: RemoveDecorator(SadConsole.CellDecorator,SadConsole.ColoredGlyphBase)
  parent: SadConsole.CellDecoratorHelpers
  langs:
  - csharp
  - vb
  name: RemoveDecorator(CellDecorator, ColoredGlyphBase)
  nameWithType: CellDecoratorHelpers.RemoveDecorator(CellDecorator, ColoredGlyphBase)
  fullName: SadConsole.CellDecoratorHelpers.RemoveDecorator(SadConsole.CellDecorator, SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Removes the specified decorator from a glyph. If no decorators remain on the glyph, the <xref href="SadConsole.ColoredGlyphBase.Decorators" data-throw-if-not-resolved="false"></xref> collection is set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: public static void RemoveDecorator(CellDecorator decorator, ColoredGlyphBase glyph)
    parameters:
    - id: decorator
      type: SadConsole.CellDecorator
      description: The decorator to remove.
    - id: glyph
      type: SadConsole.ColoredGlyphBase
      description: The glyph to alter.
    content.vb: Public Shared Sub RemoveDecorator(decorator As CellDecorator, glyph As ColoredGlyphBase)
  overload: SadConsole.CellDecoratorHelpers.RemoveDecorator*
- uid: SadConsole.CellDecoratorHelpers.CloneDecorators(SadConsole.ColoredGlyphBase)
  commentId: M:SadConsole.CellDecoratorHelpers.CloneDecorators(SadConsole.ColoredGlyphBase)
  id: CloneDecorators(SadConsole.ColoredGlyphBase)
  parent: SadConsole.CellDecoratorHelpers
  langs:
  - csharp
  - vb
  name: CloneDecorators(ColoredGlyphBase)
  nameWithType: CellDecoratorHelpers.CloneDecorators(ColoredGlyphBase)
  fullName: SadConsole.CellDecoratorHelpers.CloneDecorators(SadConsole.ColoredGlyphBase)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Returns a new list of decorators from the <xref href="SadConsole.ColoredGlyphBase.Decorators" data-throw-if-not-resolved="false"></xref> property of <code class="paramref">glyph</code>.
  example: []
  syntax:
    content: public static List<CellDecorator>? CloneDecorators(ColoredGlyphBase glyph)
    parameters:
    - id: glyph
      type: SadConsole.ColoredGlyphBase
      description: The glyph to copy the decorators from.
    return:
      type: System.Collections.Generic.List{SadConsole.CellDecorator}
      description: A list with all of the decorators from <code class="paramref">glyph</code>. If the glyph's decorators are <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> is returned.
    content.vb: Public Shared Function CloneDecorators(glyph As ColoredGlyphBase) As List(Of CellDecorator)
  overload: SadConsole.CellDecoratorHelpers.CloneDecorators*
- uid: SadConsole.CellDecoratorHelpers.ItemsMatch(System.Collections.Generic.List{SadConsole.CellDecorator},System.Collections.Generic.List{SadConsole.CellDecorator})
  commentId: M:SadConsole.CellDecoratorHelpers.ItemsMatch(System.Collections.Generic.List{SadConsole.CellDecorator},System.Collections.Generic.List{SadConsole.CellDecorator})
  id: ItemsMatch(System.Collections.Generic.List{SadConsole.CellDecorator},System.Collections.Generic.List{SadConsole.CellDecorator})
  isExtensionMethod: true
  parent: SadConsole.CellDecoratorHelpers
  langs:
  - csharp
  - vb
  name: ItemsMatch(List<CellDecorator>?, List<CellDecorator>?)
  nameWithType: CellDecoratorHelpers.ItemsMatch(List<CellDecorator>?, List<CellDecorator>?)
  fullName: SadConsole.CellDecoratorHelpers.ItemsMatch(System.Collections.Generic.List<SadConsole.CellDecorator>?, System.Collections.Generic.List<SadConsole.CellDecorator>?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Determines whether the contents of two <xref href="SadConsole.CellDecorator" data-throw-if-not-resolved="false"></xref> arrays are equal.
  example: []
  syntax:
    content: public static bool ItemsMatch(this List<CellDecorator>? self, List<CellDecorator>? other)
    parameters:
    - id: self
      type: System.Collections.Generic.List{SadConsole.CellDecorator}
      description: The first object to compare.
    - id: other
      type: System.Collections.Generic.List{SadConsole.CellDecorator}
      description: The second object to compare.
    return:
      type: System.Boolean
      description: A boolean value to indicate whether or not the two arrays are considered equal.
    content.vb: Public Shared Function ItemsMatch(self As List(Of CellDecorator), other As List(Of CellDecorator)) As Boolean
  overload: SadConsole.CellDecoratorHelpers.ItemsMatch*
  nameWithType.vb: CellDecoratorHelpers.ItemsMatch(List(Of CellDecorator), List(Of CellDecorator))
  fullName.vb: SadConsole.CellDecoratorHelpers.ItemsMatch(System.Collections.Generic.List(Of SadConsole.CellDecorator), System.Collections.Generic.List(Of SadConsole.CellDecorator))
  name.vb: ItemsMatch(List(Of CellDecorator), List(Of CellDecorator))
- uid: SadConsole.CellDecoratorHelpers.Pool
  commentId: P:SadConsole.CellDecoratorHelpers.Pool
  id: Pool
  parent: SadConsole.CellDecoratorHelpers
  langs:
  - csharp
  - vb
  name: Pool
  nameWithType: CellDecoratorHelpers.Pool
  fullName: SadConsole.CellDecoratorHelpers.Pool
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: The list pool used for creating the decorator lists applied to cells.
  example: []
  syntax:
    content: public static IListPool<CellDecorator> Pool { get; set; }
    parameters: []
    return:
      type: SadRogue.Primitives.Pooling.IListPool{SadConsole.CellDecorator}
    content.vb: Public Shared Property Pool As IListPool(Of CellDecorator)
  overload: SadConsole.CellDecoratorHelpers.Pool*
references:
- uid: SadConsole.CellDecorator
  commentId: T:SadConsole.CellDecorator
  parent: SadConsole
  isExternal: true
  href: SadConsole.CellDecorator.html
  name: CellDecorator
  nameWithType: CellDecorator
  fullName: SadConsole.CellDecorator
- uid: SadConsole.ColoredGlyphBase.Decorators
  commentId: P:SadConsole.ColoredGlyphBase.Decorators
  parent: SadConsole.ColoredGlyphBase
  isExternal: true
  href: SadConsole.ColoredGlyphBase.html#SadConsole_ColoredGlyphBase_Decorators
  name: Decorators
  nameWithType: ColoredGlyphBase.Decorators
  fullName: SadConsole.ColoredGlyphBase.Decorators
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: SadConsole.ColoredGlyphBase
  commentId: T:SadConsole.ColoredGlyphBase
  parent: SadConsole
  isExternal: true
  href: SadConsole.ColoredGlyphBase.html
  name: ColoredGlyphBase
  nameWithType: ColoredGlyphBase
  fullName: SadConsole.ColoredGlyphBase
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.CellDecoratorHelpers.SetDecorators*
  commentId: Overload:SadConsole.CellDecoratorHelpers.SetDecorators
  isExternal: true
  href: SadConsole.CellDecoratorHelpers.html#SadConsole_CellDecoratorHelpers_SetDecorators_System_Collections_Generic_IEnumerable_SadConsole_CellDecorator__SadConsole_ColoredGlyphBase_
  name: SetDecorators
  nameWithType: CellDecoratorHelpers.SetDecorators
  fullName: SadConsole.CellDecoratorHelpers.SetDecorators
- uid: System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
  commentId: T:System.Collections.Generic.IEnumerable{SadConsole.CellDecorator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<CellDecorator>
  nameWithType: IEnumerable<CellDecorator>
  fullName: System.Collections.Generic.IEnumerable<SadConsole.CellDecorator>
  nameWithType.vb: IEnumerable(Of CellDecorator)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.CellDecorator)
  name.vb: IEnumerable(Of CellDecorator)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SadConsole.CellDecoratorHelpers.SetDecorator*
  commentId: Overload:SadConsole.CellDecoratorHelpers.SetDecorator
  isExternal: true
  href: SadConsole.CellDecoratorHelpers.html#SadConsole_CellDecoratorHelpers_SetDecorator_SadConsole_CellDecorator_SadConsole_ColoredGlyphBase_
  name: SetDecorator
  nameWithType: CellDecoratorHelpers.SetDecorator
  fullName: SadConsole.CellDecoratorHelpers.SetDecorator
- uid: SadConsole.CellDecoratorHelpers.AddDecorators*
  commentId: Overload:SadConsole.CellDecoratorHelpers.AddDecorators
  isExternal: true
  href: SadConsole.CellDecoratorHelpers.html#SadConsole_CellDecoratorHelpers_AddDecorators_System_Collections_Generic_IEnumerable_SadConsole_CellDecorator__SadConsole_ColoredGlyphBase_
  name: AddDecorators
  nameWithType: CellDecoratorHelpers.AddDecorators
  fullName: SadConsole.CellDecoratorHelpers.AddDecorators
- uid: SadConsole.CellDecoratorHelpers.AddDecorator*
  commentId: Overload:SadConsole.CellDecoratorHelpers.AddDecorator
  isExternal: true
  href: SadConsole.CellDecoratorHelpers.html#SadConsole_CellDecoratorHelpers_AddDecorator_SadConsole_CellDecorator_SadConsole_ColoredGlyphBase_
  name: AddDecorator
  nameWithType: CellDecoratorHelpers.AddDecorator
  fullName: SadConsole.CellDecoratorHelpers.AddDecorator
- uid: SadConsole.CellDecoratorHelpers.RemoveDecorators*
  commentId: Overload:SadConsole.CellDecoratorHelpers.RemoveDecorators
  isExternal: true
  href: SadConsole.CellDecoratorHelpers.html#SadConsole_CellDecoratorHelpers_RemoveDecorators_System_Collections_Generic_IEnumerable_SadConsole_CellDecorator__SadConsole_ColoredGlyphBase_
  name: RemoveDecorators
  nameWithType: CellDecoratorHelpers.RemoveDecorators
  fullName: SadConsole.CellDecoratorHelpers.RemoveDecorators
- uid: SadConsole.CellDecoratorHelpers.RemoveAllDecorators*
  commentId: Overload:SadConsole.CellDecoratorHelpers.RemoveAllDecorators
  isExternal: true
  href: SadConsole.CellDecoratorHelpers.html#SadConsole_CellDecoratorHelpers_RemoveAllDecorators_SadConsole_ColoredGlyphBase_
  name: RemoveAllDecorators
  nameWithType: CellDecoratorHelpers.RemoveAllDecorators
  fullName: SadConsole.CellDecoratorHelpers.RemoveAllDecorators
- uid: SadConsole.CellDecoratorHelpers.RemoveDecorator*
  commentId: Overload:SadConsole.CellDecoratorHelpers.RemoveDecorator
  isExternal: true
  href: SadConsole.CellDecoratorHelpers.html#SadConsole_CellDecoratorHelpers_RemoveDecorator_SadConsole_CellDecorator_SadConsole_ColoredGlyphBase_
  name: RemoveDecorator
  nameWithType: CellDecoratorHelpers.RemoveDecorator
  fullName: SadConsole.CellDecoratorHelpers.RemoveDecorator
- uid: SadConsole.CellDecoratorHelpers.CloneDecorators*
  commentId: Overload:SadConsole.CellDecoratorHelpers.CloneDecorators
  isExternal: true
  href: SadConsole.CellDecoratorHelpers.html#SadConsole_CellDecoratorHelpers_CloneDecorators_SadConsole_ColoredGlyphBase_
  name: CloneDecorators
  nameWithType: CellDecoratorHelpers.CloneDecorators
  fullName: SadConsole.CellDecoratorHelpers.CloneDecorators
- uid: System.Collections.Generic.List{SadConsole.CellDecorator}
  commentId: T:System.Collections.Generic.List{SadConsole.CellDecorator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CellDecorator>
  nameWithType: List<CellDecorator>
  fullName: System.Collections.Generic.List<SadConsole.CellDecorator>
  nameWithType.vb: List(Of CellDecorator)
  fullName.vb: System.Collections.Generic.List(Of SadConsole.CellDecorator)
  name.vb: List(Of CellDecorator)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.CellDecoratorHelpers.ItemsMatch*
  commentId: Overload:SadConsole.CellDecoratorHelpers.ItemsMatch
  isExternal: true
  href: SadConsole.CellDecoratorHelpers.html#SadConsole_CellDecoratorHelpers_ItemsMatch_System_Collections_Generic_List_SadConsole_CellDecorator__System_Collections_Generic_List_SadConsole_CellDecorator__
  name: ItemsMatch
  nameWithType: CellDecoratorHelpers.ItemsMatch
  fullName: SadConsole.CellDecoratorHelpers.ItemsMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.CellDecoratorHelpers.Pool*
  commentId: Overload:SadConsole.CellDecoratorHelpers.Pool
  isExternal: true
  href: SadConsole.CellDecoratorHelpers.html#SadConsole_CellDecoratorHelpers_Pool
  name: Pool
  nameWithType: CellDecoratorHelpers.Pool
  fullName: SadConsole.CellDecoratorHelpers.Pool
- uid: SadRogue.Primitives.Pooling.IListPool{SadConsole.CellDecorator}
  commentId: T:SadRogue.Primitives.Pooling.IListPool{SadConsole.CellDecorator}
  parent: SadRogue.Primitives.Pooling
  definition: SadRogue.Primitives.Pooling.IListPool`1
  href: SadConsole.CellDecorator.html
  name: IListPool<CellDecorator>
  nameWithType: IListPool<CellDecorator>
  fullName: SadRogue.Primitives.Pooling.IListPool<SadConsole.CellDecorator>
  nameWithType.vb: IListPool(Of CellDecorator)
  fullName.vb: SadRogue.Primitives.Pooling.IListPool(Of SadConsole.CellDecorator)
  name.vb: IListPool(Of CellDecorator)
  spec.csharp:
  - uid: SadRogue.Primitives.Pooling.IListPool`1
    name: IListPool
    isExternal: true
  - name: <
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: '>'
  spec.vb:
  - uid: SadRogue.Primitives.Pooling.IListPool`1
    name: IListPool
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: )
- uid: SadRogue.Primitives.Pooling.IListPool`1
  commentId: T:SadRogue.Primitives.Pooling.IListPool`1
  isExternal: true
  name: IListPool<T>
  nameWithType: IListPool<T>
  fullName: SadRogue.Primitives.Pooling.IListPool<T>
  nameWithType.vb: IListPool(Of T)
  fullName.vb: SadRogue.Primitives.Pooling.IListPool(Of T)
  name.vb: IListPool(Of T)
  spec.csharp:
  - uid: SadRogue.Primitives.Pooling.IListPool`1
    name: IListPool
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SadRogue.Primitives.Pooling.IListPool`1
    name: IListPool
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadRogue.Primitives.Pooling
  commentId: N:SadRogue.Primitives.Pooling
  isExternal: true
  name: SadRogue.Primitives.Pooling
  nameWithType: SadRogue.Primitives.Pooling
  fullName: SadRogue.Primitives.Pooling
  spec.csharp:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
  - name: .
  - uid: SadRogue.Primitives.Pooling
    name: Pooling
    isExternal: true
  spec.vb:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
  - name: .
  - uid: SadRogue.Primitives.Pooling
    name: Pooling
    isExternal: true
