### YamlMime:ManagedReference
items:
- uid: SadConsole.CellDecorator
  commentId: T:SadConsole.CellDecorator
  id: CellDecorator
  parent: SadConsole
  children:
  - SadConsole.CellDecorator.#ctor(SadRogue.Primitives.Color,System.Int32,SadConsole.Mirror)
  - SadConsole.CellDecorator.Color
  - SadConsole.CellDecorator.Empty
  - SadConsole.CellDecorator.Equals(SadConsole.CellDecorator)
  - SadConsole.CellDecorator.Equals(System.Object)
  - SadConsole.CellDecorator.GetHashCode
  - SadConsole.CellDecorator.Glyph
  - SadConsole.CellDecorator.Mirror
  - SadConsole.CellDecorator.op_Equality(SadConsole.CellDecorator,SadConsole.CellDecorator)
  - SadConsole.CellDecorator.op_Inequality(SadConsole.CellDecorator,SadConsole.CellDecorator)
  langs:
  - csharp
  - vb
  name: CellDecorator
  nameWithType: CellDecorator
  fullName: SadConsole.CellDecorator
  type: Struct
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Decorates a cell with a colored glyph.
  example: []
  syntax:
    content: >-
      [DataContract]

      public readonly struct CellDecorator : IEquatable<CellDecorator>
    content.vb: >-
      <DataContract>

      Public Structure CellDecorator Implements IEquatable(Of CellDecorator)
  implements:
  - System.IEquatable{SadConsole.CellDecorator}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.GetType
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: SadConsole.CellDecorator.Color
  commentId: F:SadConsole.CellDecorator.Color
  id: Color
  parent: SadConsole.CellDecorator
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: CellDecorator.Color
  fullName: SadConsole.CellDecorator.Color
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Foreground color of the decorator.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly Color Color
    return:
      type: SadRogue.Primitives.Color
    content.vb: >-
      <DataMember>

      Public ReadOnly Color As Color
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.CellDecorator.Glyph
  commentId: F:SadConsole.CellDecorator.Glyph
  id: Glyph
  parent: SadConsole.CellDecorator
  langs:
  - csharp
  - vb
  name: Glyph
  nameWithType: CellDecorator.Glyph
  fullName: SadConsole.CellDecorator.Glyph
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Glyph of the decorator.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly int Glyph
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public ReadOnly Glyph As Integer
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.CellDecorator.Mirror
  commentId: F:SadConsole.CellDecorator.Mirror
  id: Mirror
  parent: SadConsole.CellDecorator
  langs:
  - csharp
  - vb
  name: Mirror
  nameWithType: CellDecorator.Mirror
  fullName: SadConsole.CellDecorator.Mirror
  type: Field
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Mirror setting of the decorator.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly Mirror Mirror
    return:
      type: SadConsole.Mirror
    content.vb: >-
      <DataMember>

      Public ReadOnly Mirror As Mirror
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SadConsole.CellDecorator.#ctor(SadRogue.Primitives.Color,System.Int32,SadConsole.Mirror)
  commentId: M:SadConsole.CellDecorator.#ctor(SadRogue.Primitives.Color,System.Int32,SadConsole.Mirror)
  id: '#ctor(SadRogue.Primitives.Color,System.Int32,SadConsole.Mirror)'
  parent: SadConsole.CellDecorator
  langs:
  - csharp
  - vb
  name: CellDecorator(Color, int, Mirror)
  nameWithType: CellDecorator.CellDecorator(Color, int, Mirror)
  fullName: SadConsole.CellDecorator.CellDecorator(SadRogue.Primitives.Color, int, SadConsole.Mirror)
  type: Constructor
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Creates a new decorator with the specified colors, glyph, visiblity, and mirror settings.
  example: []
  syntax:
    content: public CellDecorator(Color color, int glyph, Mirror mirror)
    parameters:
    - id: color
      type: SadRogue.Primitives.Color
      description: Foreground color.
    - id: glyph
      type: System.Int32
      description: Glyph value.
    - id: mirror
      type: SadConsole.Mirror
      description: Mirror setting.
    content.vb: Public Sub New(color As Color, glyph As Integer, mirror As Mirror)
  overload: SadConsole.CellDecorator.#ctor*
  nameWithType.vb: CellDecorator.New(Color, Integer, Mirror)
  fullName.vb: SadConsole.CellDecorator.New(SadRogue.Primitives.Color, Integer, SadConsole.Mirror)
  name.vb: New(Color, Integer, Mirror)
- uid: SadConsole.CellDecorator.Equals(SadConsole.CellDecorator)
  commentId: M:SadConsole.CellDecorator.Equals(SadConsole.CellDecorator)
  id: Equals(SadConsole.CellDecorator)
  parent: SadConsole.CellDecorator
  langs:
  - csharp
  - vb
  name: Equals(CellDecorator)
  nameWithType: CellDecorator.Equals(CellDecorator)
  fullName: SadConsole.CellDecorator.Equals(SadConsole.CellDecorator)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Determines if this object has the same value as the other.
  example: []
  syntax:
    content: public bool Equals(CellDecorator other)
    parameters:
    - id: other
      type: SadConsole.CellDecorator
      description: The object to test against.
    return:
      type: System.Boolean
      description: True if the objects have the same values.
    content.vb: Public Function Equals(other As CellDecorator) As Boolean
  overload: SadConsole.CellDecorator.Equals*
  implements:
  - System.IEquatable{SadConsole.CellDecorator}.Equals(SadConsole.CellDecorator)
- uid: SadConsole.CellDecorator.op_Equality(SadConsole.CellDecorator,SadConsole.CellDecorator)
  commentId: M:SadConsole.CellDecorator.op_Equality(SadConsole.CellDecorator,SadConsole.CellDecorator)
  id: op_Equality(SadConsole.CellDecorator,SadConsole.CellDecorator)
  parent: SadConsole.CellDecorator
  langs:
  - csharp
  - vb
  name: operator ==(CellDecorator, CellDecorator)
  nameWithType: CellDecorator.operator ==(CellDecorator, CellDecorator)
  fullName: SadConsole.CellDecorator.operator ==(SadConsole.CellDecorator, SadConsole.CellDecorator)
  type: Operator
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Checks that the left and right objects match.
  example: []
  syntax:
    content: public static bool operator ==(CellDecorator left, CellDecorator right)
    parameters:
    - id: left
      type: SadConsole.CellDecorator
      description: The first object to test.
    - id: right
      type: SadConsole.CellDecorator
      description: The second object to test.
    return:
      type: System.Boolean
      description: True when the <xref href="SadConsole.CellDecorator.Color" data-throw-if-not-resolved="false"></xref>, <xref href="SadConsole.CellDecorator.Glyph" data-throw-if-not-resolved="false"></xref>, and <xref href="SadConsole.CellDecorator.Mirror" data-throw-if-not-resolved="false"></xref> match.
    content.vb: Public Shared Operator =(left As CellDecorator, right As CellDecorator) As Boolean
  overload: SadConsole.CellDecorator.op_Equality*
  nameWithType.vb: CellDecorator.=(CellDecorator, CellDecorator)
  fullName.vb: SadConsole.CellDecorator.=(SadConsole.CellDecorator, SadConsole.CellDecorator)
  name.vb: =(CellDecorator, CellDecorator)
- uid: SadConsole.CellDecorator.op_Inequality(SadConsole.CellDecorator,SadConsole.CellDecorator)
  commentId: M:SadConsole.CellDecorator.op_Inequality(SadConsole.CellDecorator,SadConsole.CellDecorator)
  id: op_Inequality(SadConsole.CellDecorator,SadConsole.CellDecorator)
  parent: SadConsole.CellDecorator
  langs:
  - csharp
  - vb
  name: operator !=(CellDecorator, CellDecorator)
  nameWithType: CellDecorator.operator !=(CellDecorator, CellDecorator)
  fullName: SadConsole.CellDecorator.operator !=(SadConsole.CellDecorator, SadConsole.CellDecorator)
  type: Operator
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: Checks that the left and right objects do not match.
  example: []
  syntax:
    content: public static bool operator !=(CellDecorator left, CellDecorator right)
    parameters:
    - id: left
      type: SadConsole.CellDecorator
      description: The first object to test.
    - id: right
      type: SadConsole.CellDecorator
      description: The second object to test.
    return:
      type: System.Boolean
      description: True when the <xref href="SadConsole.CellDecorator.Color" data-throw-if-not-resolved="false"></xref>, <xref href="SadConsole.CellDecorator.Glyph" data-throw-if-not-resolved="false"></xref>, and <xref href="SadConsole.CellDecorator.Mirror" data-throw-if-not-resolved="false"></xref> do not match.
    content.vb: Public Shared Operator <>(left As CellDecorator, right As CellDecorator) As Boolean
  overload: SadConsole.CellDecorator.op_Inequality*
  nameWithType.vb: CellDecorator.<>(CellDecorator, CellDecorator)
  fullName.vb: SadConsole.CellDecorator.<>(SadConsole.CellDecorator, SadConsole.CellDecorator)
  name.vb: <>(CellDecorator, CellDecorator)
- uid: SadConsole.CellDecorator.Equals(System.Object)
  commentId: M:SadConsole.CellDecorator.Equals(System.Object)
  id: Equals(System.Object)
  parent: SadConsole.CellDecorator
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: CellDecorator.Equals(object?)
  fullName: SadConsole.CellDecorator.Equals(object?)
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: SadConsole.CellDecorator.Equals*
  nameWithType.vb: CellDecorator.Equals(Object)
  fullName.vb: SadConsole.CellDecorator.Equals(Object)
  name.vb: Equals(Object)
- uid: SadConsole.CellDecorator.GetHashCode
  commentId: M:SadConsole.CellDecorator.GetHashCode
  id: GetHashCode
  parent: SadConsole.CellDecorator
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CellDecorator.GetHashCode()
  fullName: SadConsole.CellDecorator.GetHashCode()
  type: Method
  assemblies:
  - SadConsole
  namespace: SadConsole
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: SadConsole.CellDecorator.GetHashCode*
- uid: SadConsole.CellDecorator.Empty
  commentId: P:SadConsole.CellDecorator.Empty
  id: Empty
  parent: SadConsole.CellDecorator
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: CellDecorator.Empty
  fullName: SadConsole.CellDecorator.Empty
  type: Property
  assemblies:
  - SadConsole
  namespace: SadConsole
  summary: An empty cell decorator.
  example: []
  syntax:
    content: public static CellDecorator Empty { get; }
    parameters: []
    return:
      type: SadConsole.CellDecorator
    content.vb: Public Shared ReadOnly Property Empty As CellDecorator
  overload: SadConsole.CellDecorator.Empty*
references:
- uid: SadConsole
  commentId: N:SadConsole
  isExternal: true
  href: SadConsole.html
  name: SadConsole
  nameWithType: SadConsole
  fullName: SadConsole
- uid: System.IEquatable{SadConsole.CellDecorator}
  commentId: T:System.IEquatable{SadConsole.CellDecorator}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<CellDecorator>
  nameWithType: IEquatable<CellDecorator>
  fullName: System.IEquatable<SadConsole.CellDecorator>
  nameWithType.vb: IEquatable(Of CellDecorator)
  fullName.vb: System.IEquatable(Of SadConsole.CellDecorator)
  name.vb: IEquatable(Of CellDecorator)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SadRogue.Primitives.Color
  commentId: T:SadRogue.Primitives.Color
  parent: SadRogue.Primitives
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: SadRogue.Primitives.Color
- uid: SadRogue.Primitives
  commentId: N:SadRogue.Primitives
  isExternal: true
  href: SadRogue.html
  name: SadRogue.Primitives
  nameWithType: SadRogue.Primitives
  fullName: SadRogue.Primitives
  spec.csharp:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
  spec.vb:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SadConsole.Mirror
  commentId: T:SadConsole.Mirror
  parent: SadConsole
  isExternal: true
  href: SadConsole.Mirror.html
  name: Mirror
  nameWithType: Mirror
  fullName: SadConsole.Mirror
- uid: SadConsole.CellDecorator.#ctor*
  commentId: Overload:SadConsole.CellDecorator.#ctor
  isExternal: true
  href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.#ctor(SadRogue.Primitives.Color,System.Int32,SadConsole.Mirror)
  name: CellDecorator
  nameWithType: CellDecorator.CellDecorator
  fullName: SadConsole.CellDecorator.CellDecorator
  nameWithType.vb: CellDecorator.New
  fullName.vb: SadConsole.CellDecorator.New
  name.vb: New
- uid: SadConsole.CellDecorator.Equals*
  commentId: Overload:SadConsole.CellDecorator.Equals
  isExternal: true
  href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.Equals(SadConsole.CellDecorator)
  name: Equals
  nameWithType: CellDecorator.Equals
  fullName: SadConsole.CellDecorator.Equals
- uid: System.IEquatable{SadConsole.CellDecorator}.Equals(SadConsole.CellDecorator)
  commentId: M:System.IEquatable{SadConsole.CellDecorator}.Equals(SadConsole.CellDecorator)
  parent: System.IEquatable{SadConsole.CellDecorator}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-sadconsole.celldecorator-.equals#system-iequatable((sadconsole-celldecorator))-equals(sadconsole-celldecorator)
  name: Equals(CellDecorator)
  nameWithType: IEquatable<CellDecorator>.Equals(CellDecorator)
  fullName: System.IEquatable<SadConsole.CellDecorator>.Equals(SadConsole.CellDecorator)
  nameWithType.vb: IEquatable(Of CellDecorator).Equals(CellDecorator)
  fullName.vb: System.IEquatable(Of SadConsole.CellDecorator).Equals(SadConsole.CellDecorator)
  spec.csharp:
  - uid: System.IEquatable{SadConsole.CellDecorator}.Equals(SadConsole.CellDecorator)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-sadconsole.celldecorator-.equals#system-iequatable((sadconsole-celldecorator))-equals(sadconsole-celldecorator)
  - name: (
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{SadConsole.CellDecorator}.Equals(SadConsole.CellDecorator)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-sadconsole.celldecorator-.equals#system-iequatable((sadconsole-celldecorator))-equals(sadconsole-celldecorator)
  - name: (
  - uid: SadConsole.CellDecorator
    name: CellDecorator
    isExternal: true
    href: SadConsole.CellDecorator.html
  - name: )
- uid: SadConsole.CellDecorator
  commentId: T:SadConsole.CellDecorator
  parent: SadConsole
  isExternal: true
  href: SadConsole.CellDecorator.html
  name: CellDecorator
  nameWithType: CellDecorator
  fullName: SadConsole.CellDecorator
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: SadConsole.CellDecorator.Color
  commentId: F:SadConsole.CellDecorator.Color
  isExternal: true
  href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.Color
  name: Color
  nameWithType: CellDecorator.Color
  fullName: SadConsole.CellDecorator.Color
- uid: SadConsole.CellDecorator.Glyph
  commentId: F:SadConsole.CellDecorator.Glyph
  isExternal: true
  href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.Glyph
  name: Glyph
  nameWithType: CellDecorator.Glyph
  fullName: SadConsole.CellDecorator.Glyph
- uid: SadConsole.CellDecorator.Mirror
  commentId: F:SadConsole.CellDecorator.Mirror
  isExternal: true
  href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.Mirror
  name: Mirror
  nameWithType: CellDecorator.Mirror
  fullName: SadConsole.CellDecorator.Mirror
- uid: SadConsole.CellDecorator.op_Equality*
  commentId: Overload:SadConsole.CellDecorator.op_Equality
  isExternal: true
  href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.op_Equality(SadConsole.CellDecorator,SadConsole.CellDecorator)
  name: operator ==
  nameWithType: CellDecorator.operator ==
  fullName: SadConsole.CellDecorator.operator ==
  nameWithType.vb: CellDecorator.=
  fullName.vb: SadConsole.CellDecorator.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SadConsole.CellDecorator.op_Equality*
    name: ==
    isExternal: true
    href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.op_Equality(SadConsole.CellDecorator,SadConsole.CellDecorator)
- uid: SadConsole.CellDecorator.op_Inequality*
  commentId: Overload:SadConsole.CellDecorator.op_Inequality
  isExternal: true
  href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.op_Inequality(SadConsole.CellDecorator,SadConsole.CellDecorator)
  name: operator !=
  nameWithType: CellDecorator.operator !=
  fullName: SadConsole.CellDecorator.operator !=
  nameWithType.vb: CellDecorator.<>
  fullName.vb: SadConsole.CellDecorator.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SadConsole.CellDecorator.op_Inequality*
    name: '!='
    isExternal: true
    href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.op_Inequality(SadConsole.CellDecorator,SadConsole.CellDecorator)
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: SadConsole.CellDecorator.GetHashCode*
  commentId: Overload:SadConsole.CellDecorator.GetHashCode
  isExternal: true
  href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.GetHashCode
  name: GetHashCode
  nameWithType: CellDecorator.GetHashCode
  fullName: SadConsole.CellDecorator.GetHashCode
- uid: SadConsole.CellDecorator.Empty*
  commentId: Overload:SadConsole.CellDecorator.Empty
  isExternal: true
  href: SadConsole.CellDecorator.html#SadConsole.CellDecorator.Empty
  name: Empty
  nameWithType: CellDecorator.Empty
  fullName: SadConsole.CellDecorator.Empty
