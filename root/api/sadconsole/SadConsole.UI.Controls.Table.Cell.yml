### YamlMime:ManagedReference
items:
- uid: SadConsole.UI.Controls.Table.Cell
  commentId: T:SadConsole.UI.Controls.Table.Cell
  id: Table.Cell
  parent: SadConsole.UI.Controls
  children:
  - SadConsole.UI.Controls.Table.Cell.Background
  - SadConsole.UI.Controls.Table.Cell.Column
  - SadConsole.UI.Controls.Table.Cell.CopyAppearanceFrom(SadConsole.UI.Controls.Table.Cell)
  - SadConsole.UI.Controls.Table.Cell.Equals(SadConsole.UI.Controls.Table.Cell)
  - SadConsole.UI.Controls.Table.Cell.Equals(System.Object)
  - SadConsole.UI.Controls.Table.Cell.Foreground
  - SadConsole.UI.Controls.Table.Cell.GetHashCode
  - SadConsole.UI.Controls.Table.Cell.Height
  - SadConsole.UI.Controls.Table.Cell.InternalCreate(System.Int32,System.Int32,SadConsole.UI.Controls.Table,System.Object,System.Boolean)
  - SadConsole.UI.Controls.Table.Cell.IsVisible
  - SadConsole.UI.Controls.Table.Cell.Row
  - SadConsole.UI.Controls.Table.Cell.Settings
  - SadConsole.UI.Controls.Table.Cell.StringValue
  - SadConsole.UI.Controls.Table.Cell.Value
  - SadConsole.UI.Controls.Table.Cell.Width
  - SadConsole.UI.Controls.Table.Cell.op_Equality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
  - SadConsole.UI.Controls.Table.Cell.op_Inequality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
  langs:
  - csharp
  - vb
  name: Table.Cell
  nameWithType: Table.Cell
  fullName: SadConsole.UI.Controls.Table.Cell
  type: Class
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: A basic cell used in the Table control
  example: []
  syntax:
    content: 'public sealed class Table.Cell : IEquatable<Table.Cell>'
    content.vb: Public NotInheritable Class Table.Cell Implements IEquatable(Of Table.Cell)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{SadConsole.UI.Controls.Table.Cell}
  inheritedMembers:
  - System.Object.GetType
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - SadConsole.UI.Controls.Table.Cell.SadConsole.UI.Controls.TableExtensions.Deselect
  - SadConsole.UI.Controls.Table.Cell.SadConsole.UI.Controls.TableExtensions.Remove
  - SadConsole.UI.Controls.Table.Cell.SadConsole.UI.Controls.TableExtensions.Resize(System.Nullable{System.Int32},System.Nullable{System.Int32})
  - SadConsole.UI.Controls.Table.Cell.SadConsole.UI.Controls.TableExtensions.Select
  - SadConsole.UI.Controls.Table.Cell.SadConsole.UI.Controls.TableExtensions.SetLayout(System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
- uid: SadConsole.UI.Controls.Table.Cell.InternalCreate(System.Int32,System.Int32,SadConsole.UI.Controls.Table,System.Object,System.Boolean)
  commentId: M:SadConsole.UI.Controls.Table.Cell.InternalCreate(System.Int32,System.Int32,SadConsole.UI.Controls.Table,System.Object,System.Boolean)
  id: InternalCreate(System.Int32,System.Int32,SadConsole.UI.Controls.Table,System.Object,System.Boolean)
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: InternalCreate(int, int, Table, object, bool)
  nameWithType: Table.Cell.InternalCreate(int, int, Table, object, bool)
  fullName: SadConsole.UI.Controls.Table.Cell.InternalCreate(int, int, SadConsole.UI.Controls.Table, object, bool)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Internal use only. This is used by the table and the theme to create new cell instances.
  example: []
  syntax:
    content: public static Table.Cell InternalCreate(int row, int col, Table table, object value, bool addToTableIfModified = true)
    parameters:
    - id: row
      type: System.Int32
    - id: col
      type: System.Int32
    - id: table
      type: SadConsole.UI.Controls.Table
    - id: value
      type: System.Object
    - id: addToTableIfModified
      type: System.Boolean
    return:
      type: SadConsole.UI.Controls.Table.Cell
    content.vb: Public Shared Function InternalCreate(row As Integer, col As Integer, table As Table, value As Object, addToTableIfModified As Boolean = True) As Table.Cell
  overload: SadConsole.UI.Controls.Table.Cell.InternalCreate*
  nameWithType.vb: Table.Cell.InternalCreate(Integer, Integer, Table, Object, Boolean)
  fullName.vb: SadConsole.UI.Controls.Table.Cell.InternalCreate(Integer, Integer, SadConsole.UI.Controls.Table, Object, Boolean)
  name.vb: InternalCreate(Integer, Integer, Table, Object, Boolean)
- uid: SadConsole.UI.Controls.Table.Cell.op_Equality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
  commentId: M:SadConsole.UI.Controls.Table.Cell.op_Equality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
  id: op_Equality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: operator ==(Cell?, Cell?)
  nameWithType: Table.Cell.operator ==(Table.Cell?, Table.Cell?)
  fullName: SadConsole.UI.Controls.Table.Cell.operator ==(SadConsole.UI.Controls.Table.Cell?, SadConsole.UI.Controls.Table.Cell?)
  type: Operator
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public static bool operator ==(Table.Cell? a, Table.Cell? b)
    parameters:
    - id: a
      type: SadConsole.UI.Controls.Table.Cell
    - id: b
      type: SadConsole.UI.Controls.Table.Cell
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Table.Cell, b As Table.Cell) As Boolean
  overload: SadConsole.UI.Controls.Table.Cell.op_Equality*
  nameWithType.vb: Table.Cell.=(Table.Cell, Table.Cell)
  fullName.vb: SadConsole.UI.Controls.Table.Cell.=(SadConsole.UI.Controls.Table.Cell, SadConsole.UI.Controls.Table.Cell)
  name.vb: =(Cell, Cell)
- uid: SadConsole.UI.Controls.Table.Cell.op_Inequality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
  commentId: M:SadConsole.UI.Controls.Table.Cell.op_Inequality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
  id: op_Inequality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: operator !=(Cell?, Cell?)
  nameWithType: Table.Cell.operator !=(Table.Cell?, Table.Cell?)
  fullName: SadConsole.UI.Controls.Table.Cell.operator !=(SadConsole.UI.Controls.Table.Cell?, SadConsole.UI.Controls.Table.Cell?)
  type: Operator
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public static bool operator !=(Table.Cell? a, Table.Cell? b)
    parameters:
    - id: a
      type: SadConsole.UI.Controls.Table.Cell
    - id: b
      type: SadConsole.UI.Controls.Table.Cell
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Table.Cell, b As Table.Cell) As Boolean
  overload: SadConsole.UI.Controls.Table.Cell.op_Inequality*
  nameWithType.vb: Table.Cell.<>(Table.Cell, Table.Cell)
  fullName.vb: SadConsole.UI.Controls.Table.Cell.<>(SadConsole.UI.Controls.Table.Cell, SadConsole.UI.Controls.Table.Cell)
  name.vb: <>(Cell, Cell)
- uid: SadConsole.UI.Controls.Table.Cell.Equals(SadConsole.UI.Controls.Table.Cell)
  commentId: M:SadConsole.UI.Controls.Table.Cell.Equals(SadConsole.UI.Controls.Table.Cell)
  id: Equals(SadConsole.UI.Controls.Table.Cell)
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: Equals(Cell?)
  nameWithType: Table.Cell.Equals(Table.Cell?)
  fullName: SadConsole.UI.Controls.Table.Cell.Equals(SadConsole.UI.Controls.Table.Cell?)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public bool Equals(Table.Cell? cell)
    parameters:
    - id: cell
      type: SadConsole.UI.Controls.Table.Cell
    return:
      type: System.Boolean
    content.vb: Public Function Equals(cell As Table.Cell) As Boolean
  overload: SadConsole.UI.Controls.Table.Cell.Equals*
  implements:
  - System.IEquatable{SadConsole.UI.Controls.Table.Cell}.Equals(SadConsole.UI.Controls.Table.Cell)
  nameWithType.vb: Table.Cell.Equals(Table.Cell)
  fullName.vb: SadConsole.UI.Controls.Table.Cell.Equals(SadConsole.UI.Controls.Table.Cell)
  name.vb: Equals(Cell)
- uid: SadConsole.UI.Controls.Table.Cell.Equals(System.Object)
  commentId: M:SadConsole.UI.Controls.Table.Cell.Equals(System.Object)
  id: Equals(System.Object)
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Table.Cell.Equals(object?)
  fullName: SadConsole.UI.Controls.Table.Cell.Equals(object?)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: SadConsole.UI.Controls.Table.Cell.Equals*
  nameWithType.vb: Table.Cell.Equals(Object)
  fullName.vb: SadConsole.UI.Controls.Table.Cell.Equals(Object)
  name.vb: Equals(Object)
- uid: SadConsole.UI.Controls.Table.Cell.GetHashCode
  commentId: M:SadConsole.UI.Controls.Table.Cell.GetHashCode
  id: GetHashCode
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Table.Cell.GetHashCode()
  fullName: SadConsole.UI.Controls.Table.Cell.GetHashCode()
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: SadConsole.UI.Controls.Table.Cell.GetHashCode*
- uid: SadConsole.UI.Controls.Table.Cell.CopyAppearanceFrom(SadConsole.UI.Controls.Table.Cell)
  commentId: M:SadConsole.UI.Controls.Table.Cell.CopyAppearanceFrom(SadConsole.UI.Controls.Table.Cell)
  id: CopyAppearanceFrom(SadConsole.UI.Controls.Table.Cell)
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: CopyAppearanceFrom(Cell)
  nameWithType: Table.Cell.CopyAppearanceFrom(Table.Cell)
  fullName: SadConsole.UI.Controls.Table.Cell.CopyAppearanceFrom(SadConsole.UI.Controls.Table.Cell)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Copies the appearance of the cell passed to this method, onto the this cell.
  example: []
  syntax:
    content: public void CopyAppearanceFrom(Table.Cell cell)
    parameters:
    - id: cell
      type: SadConsole.UI.Controls.Table.Cell
      description: ''
    content.vb: Public Sub CopyAppearanceFrom(cell As Table.Cell)
  overload: SadConsole.UI.Controls.Table.Cell.CopyAppearanceFrom*
- uid: SadConsole.UI.Controls.Table.Cell.Row
  commentId: P:SadConsole.UI.Controls.Table.Cell.Row
  id: Row
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: Row
  nameWithType: Table.Cell.Row
  fullName: SadConsole.UI.Controls.Table.Cell.Row
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The row this cell is part of
  example: []
  syntax:
    content: public int Row { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Row As Integer
  overload: SadConsole.UI.Controls.Table.Cell.Row*
- uid: SadConsole.UI.Controls.Table.Cell.Column
  commentId: P:SadConsole.UI.Controls.Table.Cell.Column
  id: Column
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: Column
  nameWithType: Table.Cell.Column
  fullName: SadConsole.UI.Controls.Table.Cell.Column
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The column this cell is part of
  example: []
  syntax:
    content: public int Column { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Column As Integer
  overload: SadConsole.UI.Controls.Table.Cell.Column*
- uid: SadConsole.UI.Controls.Table.Cell.Height
  commentId: P:SadConsole.UI.Controls.Table.Cell.Height
  id: Height
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Table.Cell.Height
  fullName: SadConsole.UI.Controls.Table.Cell.Height
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The height of the row this cell is part of
  example: []
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Height As Integer
  overload: SadConsole.UI.Controls.Table.Cell.Height*
- uid: SadConsole.UI.Controls.Table.Cell.Width
  commentId: P:SadConsole.UI.Controls.Table.Cell.Width
  id: Width
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Table.Cell.Width
  fullName: SadConsole.UI.Controls.Table.Cell.Width
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The width of the column this cell is part of
  example: []
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Width As Integer
  overload: SadConsole.UI.Controls.Table.Cell.Width*
- uid: SadConsole.UI.Controls.Table.Cell.Foreground
  commentId: P:SadConsole.UI.Controls.Table.Cell.Foreground
  id: Foreground
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: Foreground
  nameWithType: Table.Cell.Foreground
  fullName: SadConsole.UI.Controls.Table.Cell.Foreground
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The foreground color used by the cell
  example: []
  syntax:
    content: public Color Foreground { get; set; }
    parameters: []
    return:
      type: SadRogue.Primitives.Color
    content.vb: Public Property Foreground As Color
  overload: SadConsole.UI.Controls.Table.Cell.Foreground*
- uid: SadConsole.UI.Controls.Table.Cell.Background
  commentId: P:SadConsole.UI.Controls.Table.Cell.Background
  id: Background
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: Background
  nameWithType: Table.Cell.Background
  fullName: SadConsole.UI.Controls.Table.Cell.Background
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The background color used by the cell
  example: []
  syntax:
    content: public Color Background { get; set; }
    parameters: []
    return:
      type: SadRogue.Primitives.Color
    content.vb: Public Property Background As Color
  overload: SadConsole.UI.Controls.Table.Cell.Background*
- uid: SadConsole.UI.Controls.Table.Cell.StringValue
  commentId: P:SadConsole.UI.Controls.Table.Cell.StringValue
  id: StringValue
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: StringValue
  nameWithType: Table.Cell.StringValue
  fullName: SadConsole.UI.Controls.Table.Cell.StringValue
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The text shown within the cell, empty string when no value.
  example: []
  syntax:
    content: public string StringValue { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property StringValue As String
  overload: SadConsole.UI.Controls.Table.Cell.StringValue*
- uid: SadConsole.UI.Controls.Table.Cell.Value
  commentId: P:SadConsole.UI.Controls.Table.Cell.Value
  id: Value
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Table.Cell.Value
  fullName: SadConsole.UI.Controls.Table.Cell.Value
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The value of the cell, .ToString() method is shown as the text result within the cell.
  example: []
  syntax:
    content: public object? Value { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Value As Object
  overload: SadConsole.UI.Controls.Table.Cell.Value*
- uid: SadConsole.UI.Controls.Table.Cell.IsVisible
  commentId: P:SadConsole.UI.Controls.Table.Cell.IsVisible
  id: IsVisible
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: Table.Cell.IsVisible
  fullName: SadConsole.UI.Controls.Table.Cell.IsVisible
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: >-
    Set to false if the cell should not be rendered within the table (default IsVisible sadconsole behaviour),

    If an entire row or column IsVislbe is set to false in the layout, it will skip this row/column entirely (differs from default behaviour)
  example: []
  syntax:
    content: public bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsVisible As Boolean
  overload: SadConsole.UI.Controls.Table.Cell.IsVisible*
- uid: SadConsole.UI.Controls.Table.Cell.Settings
  commentId: P:SadConsole.UI.Controls.Table.Cell.Settings
  id: Settings
  parent: SadConsole.UI.Controls.Table.Cell
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: Table.Cell.Settings
  fullName: SadConsole.UI.Controls.Table.Cell.Settings
  type: Property
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: The setting options used by the cell to define its layout
  example: []
  syntax:
    content: public Table.Cell.Options Settings { get; }
    parameters: []
    return:
      type: SadConsole.UI.Controls.Table.Cell.Options
    content.vb: Public ReadOnly Property Settings As Table.Cell.Options
  overload: SadConsole.UI.Controls.Table.Cell.Settings*
references:
- uid: SadConsole.UI.Controls
  commentId: N:SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.html
  name: SadConsole.UI.Controls
  nameWithType: SadConsole.UI.Controls
  fullName: SadConsole.UI.Controls
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{SadConsole.UI.Controls.Table.Cell}
  commentId: T:System.IEquatable{SadConsole.UI.Controls.Table.Cell}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Table.Cell>
  nameWithType: IEquatable<Table.Cell>
  fullName: System.IEquatable<SadConsole.UI.Controls.Table.Cell>
  nameWithType.vb: IEquatable(Of Table.Cell)
  fullName.vb: System.IEquatable(Of SadConsole.UI.Controls.Table.Cell)
  name.vb: IEquatable(Of Table.Cell)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: SadConsole.UI.Controls.Table.Cell.SadConsole.UI.Controls.TableExtensions.Deselect
  commentId: M:SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  parent: SadConsole.UI.Controls.TableExtensions
  definition: SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  name: Deselect(Cell)
  nameWithType: TableExtensions.Deselect(Table.Cell)
  fullName: SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
    name: Deselect
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
    name: Deselect
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: SadConsole.UI.Controls.Table.Cell.SadConsole.UI.Controls.TableExtensions.Remove
  commentId: M:SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  parent: SadConsole.UI.Controls.TableExtensions
  definition: SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  name: Remove(Cell)
  nameWithType: TableExtensions.Remove(Table.Cell)
  fullName: SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
    name: Remove
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
    name: Remove
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: SadConsole.UI.Controls.Table.Cell.SadConsole.UI.Controls.TableExtensions.Resize(System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: SadConsole.UI.Controls.TableExtensions
  definition: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name: Resize(Cell, int?, int?)
  nameWithType: TableExtensions.Resize(Table.Cell, int?, int?)
  fullName: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell, int?, int?)
  nameWithType.vb: TableExtensions.Resize(Table.Cell, Integer?, Integer?)
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell, Integer?, Integer?)
  name.vb: Resize(Cell, Integer?, Integer?)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
    name: Resize
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
    name: Resize
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
- uid: SadConsole.UI.Controls.Table.Cell.SadConsole.UI.Controls.TableExtensions.Select
  commentId: M:SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  parent: SadConsole.UI.Controls.TableExtensions
  definition: SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  name: Select(Cell)
  nameWithType: TableExtensions.Select(Table.Cell)
  fullName: SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
    name: Select
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
    name: Select
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: SadConsole.UI.Controls.Table.Cell.SadConsole.UI.Controls.TableExtensions.SetLayout(System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  commentId: M:SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  parent: SadConsole.UI.Controls.TableExtensions
  definition: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  name: SetLayout(Cell, Color?, Color?, Options)
  nameWithType: TableExtensions.SetLayout(Table.Cell, Color?, Color?, Table.Cell.Options)
  fullName: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, SadConsole.UI.Controls.Table.Cell.Options)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
    name: SetLayout
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: ','
  - name: " "
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
    name: SetLayout
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: ','
  - name: " "
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  commentId: M:SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  name: Deselect(Cell)
  nameWithType: TableExtensions.Deselect(Table.Cell)
  fullName: SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
    name: Deselect
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
    name: Deselect
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: SadConsole.UI.Controls.TableExtensions
  commentId: T:SadConsole.UI.Controls.TableExtensions
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html
  name: TableExtensions
  nameWithType: TableExtensions
  fullName: SadConsole.UI.Controls.TableExtensions
- uid: SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  commentId: M:SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  name: Remove(Cell)
  nameWithType: TableExtensions.Remove(Table.Cell)
  fullName: SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
    name: Remove
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
    name: Remove
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name: Resize(Cell, int?, int?)
  nameWithType: TableExtensions.Resize(Table.Cell, int?, int?)
  fullName: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell, int?, int?)
  nameWithType.vb: TableExtensions.Resize(Table.Cell, Integer?, Integer?)
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell, Integer?, Integer?)
  name.vb: Resize(Cell, Integer?, Integer?)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
    name: Resize
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
    name: Resize
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
- uid: SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  commentId: M:SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  name: Select(Cell)
  nameWithType: TableExtensions.Select(Table.Cell)
  fullName: SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
    name: Select
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
    name: Select
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  commentId: M:SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  name: SetLayout(Cell, Color?, Color?, Options)
  nameWithType: TableExtensions.SetLayout(Table.Cell, Color?, Color?, Table.Cell.Options)
  fullName: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, SadConsole.UI.Controls.Table.Cell.Options)
  spec.csharp:
  - uid: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
    name: SetLayout
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: ','
  - name: " "
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: )
  spec.vb:
  - uid: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
    name: SetLayout
    isExternal: true
    href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: ','
  - name: " "
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  - name: )
- uid: SadConsole.UI.Controls.Table.Cell.InternalCreate*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.InternalCreate
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.InternalCreate(System.Int32,System.Int32,SadConsole.UI.Controls.Table,System.Object,System.Boolean)
  name: InternalCreate
  nameWithType: Table.Cell.InternalCreate
  fullName: SadConsole.UI.Controls.Table.Cell.InternalCreate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SadConsole.UI.Controls.Table
  commentId: T:SadConsole.UI.Controls.Table
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table
  nameWithType: Table
  fullName: SadConsole.UI.Controls.Table
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadConsole.UI.Controls.Table.Cell
  commentId: T:SadConsole.UI.Controls.Table.Cell
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.Cell
  nameWithType: Table.Cell
  fullName: SadConsole.UI.Controls.Table.Cell
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
- uid: SadConsole.UI.Controls.Table.Cell.op_Equality*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.op_Equality
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.op_Equality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
  name: operator ==
  nameWithType: Table.Cell.operator ==
  fullName: SadConsole.UI.Controls.Table.Cell.operator ==
  nameWithType.vb: Table.Cell.=
  fullName.vb: SadConsole.UI.Controls.Table.Cell.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell.op_Equality*
    name: ==
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.op_Equality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
- uid: SadConsole.UI.Controls.Table.Cell.op_Inequality*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.op_Inequality
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.op_Inequality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
  name: operator !=
  nameWithType: Table.Cell.operator !=
  fullName: SadConsole.UI.Controls.Table.Cell.operator !=
  nameWithType.vb: Table.Cell.<>
  fullName.vb: SadConsole.UI.Controls.Table.Cell.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SadConsole.UI.Controls.Table.Cell.op_Inequality*
    name: '!='
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.op_Inequality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)
- uid: SadConsole.UI.Controls.Table.Cell.Equals*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Equals
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.Equals(SadConsole.UI.Controls.Table.Cell)
  name: Equals
  nameWithType: Table.Cell.Equals
  fullName: SadConsole.UI.Controls.Table.Cell.Equals
- uid: System.IEquatable{SadConsole.UI.Controls.Table.Cell}.Equals(SadConsole.UI.Controls.Table.Cell)
  commentId: M:System.IEquatable{SadConsole.UI.Controls.Table.Cell}.Equals(SadConsole.UI.Controls.Table.Cell)
  parent: System.IEquatable{SadConsole.UI.Controls.Table.Cell}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-sadconsole.ui.controls.table.cell-.equals#system-iequatable((sadconsole-ui-controls-table-cell))-equals(sadconsole-ui-controls-table-cell)
  name: Equals(Cell)
  nameWithType: IEquatable<Table.Cell>.Equals(Table.Cell)
  fullName: System.IEquatable<SadConsole.UI.Controls.Table.Cell>.Equals(SadConsole.UI.Controls.Table.Cell)
  nameWithType.vb: IEquatable(Of Table.Cell).Equals(Table.Cell)
  fullName.vb: System.IEquatable(Of SadConsole.UI.Controls.Table.Cell).Equals(SadConsole.UI.Controls.Table.Cell)
  spec.csharp:
  - uid: System.IEquatable{SadConsole.UI.Controls.Table.Cell}.Equals(SadConsole.UI.Controls.Table.Cell)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-sadconsole.ui.controls.table.cell-.equals#system-iequatable((sadconsole-ui-controls-table-cell))-equals(sadconsole-ui-controls-table-cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{SadConsole.UI.Controls.Table.Cell}.Equals(SadConsole.UI.Controls.Table.Cell)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-sadconsole.ui.controls.table.cell-.equals#system-iequatable((sadconsole-ui-controls-table-cell))-equals(sadconsole-ui-controls-table-cell)
  - name: (
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: SadConsole.UI.Controls.Table.Cell.GetHashCode*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.GetHashCode
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.GetHashCode
  name: GetHashCode
  nameWithType: Table.Cell.GetHashCode
  fullName: SadConsole.UI.Controls.Table.Cell.GetHashCode
- uid: SadConsole.UI.Controls.Table.Cell.CopyAppearanceFrom*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.CopyAppearanceFrom
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.CopyAppearanceFrom(SadConsole.UI.Controls.Table.Cell)
  name: CopyAppearanceFrom
  nameWithType: Table.Cell.CopyAppearanceFrom
  fullName: SadConsole.UI.Controls.Table.Cell.CopyAppearanceFrom
- uid: SadConsole.UI.Controls.Table.Cell.Row*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Row
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.Row
  name: Row
  nameWithType: Table.Cell.Row
  fullName: SadConsole.UI.Controls.Table.Cell.Row
- uid: SadConsole.UI.Controls.Table.Cell.Column*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Column
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.Column
  name: Column
  nameWithType: Table.Cell.Column
  fullName: SadConsole.UI.Controls.Table.Cell.Column
- uid: SadConsole.UI.Controls.Table.Cell.Height*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Height
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.Height
  name: Height
  nameWithType: Table.Cell.Height
  fullName: SadConsole.UI.Controls.Table.Cell.Height
- uid: SadConsole.UI.Controls.Table.Cell.Width*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Width
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.Width
  name: Width
  nameWithType: Table.Cell.Width
  fullName: SadConsole.UI.Controls.Table.Cell.Width
- uid: SadConsole.UI.Controls.Table.Cell.Foreground*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Foreground
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.Foreground
  name: Foreground
  nameWithType: Table.Cell.Foreground
  fullName: SadConsole.UI.Controls.Table.Cell.Foreground
- uid: SadRogue.Primitives.Color
  commentId: T:SadRogue.Primitives.Color
  parent: SadRogue.Primitives
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: SadRogue.Primitives.Color
- uid: SadRogue.Primitives
  commentId: N:SadRogue.Primitives
  isExternal: true
  href: SadRogue.html
  name: SadRogue.Primitives
  nameWithType: SadRogue.Primitives
  fullName: SadRogue.Primitives
  spec.csharp:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
  spec.vb:
  - uid: SadRogue
    name: SadRogue
    isExternal: true
    href: SadRogue.html
  - name: .
  - uid: SadRogue.Primitives
    name: Primitives
    isExternal: true
    href: SadRogue.Primitives.html
- uid: SadConsole.UI.Controls.Table.Cell.Background*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Background
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.Background
  name: Background
  nameWithType: Table.Cell.Background
  fullName: SadConsole.UI.Controls.Table.Cell.Background
- uid: SadConsole.UI.Controls.Table.Cell.StringValue*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.StringValue
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.StringValue
  name: StringValue
  nameWithType: Table.Cell.StringValue
  fullName: SadConsole.UI.Controls.Table.Cell.StringValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SadConsole.UI.Controls.Table.Cell.Value*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Value
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.Value
  name: Value
  nameWithType: Table.Cell.Value
  fullName: SadConsole.UI.Controls.Table.Cell.Value
- uid: SadConsole.UI.Controls.Table.Cell.IsVisible*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.IsVisible
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.IsVisible
  name: IsVisible
  nameWithType: Table.Cell.IsVisible
  fullName: SadConsole.UI.Controls.Table.Cell.IsVisible
- uid: SadConsole.UI.Controls.Table.Cell.Settings*
  commentId: Overload:SadConsole.UI.Controls.Table.Cell.Settings
  isExternal: true
  href: SadConsole.UI.Controls.Table.Cell.html#SadConsole.UI.Controls.Table.Cell.Settings
  name: Settings
  nameWithType: Table.Cell.Settings
  fullName: SadConsole.UI.Controls.Table.Cell.Settings
- uid: SadConsole.UI.Controls.Table.Cell.Options
  commentId: T:SadConsole.UI.Controls.Table.Cell.Options
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.Cell.Options
  nameWithType: Table.Cell.Options
  fullName: SadConsole.UI.Controls.Table.Cell.Options
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
