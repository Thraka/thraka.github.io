### YamlMime:ManagedReference
items:
- uid: SadConsole.UI.Controls.TableExtensions
  commentId: T:SadConsole.UI.Controls.TableExtensions
  id: TableExtensions
  parent: SadConsole.UI.Controls
  children:
  - SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  - SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  - SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
  - SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
  - SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  - SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  - SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  - SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  langs:
  - csharp
  - vb
  name: TableExtensions
  nameWithType: TableExtensions
  fullName: SadConsole.UI.Controls.TableExtensions
  type: Class
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Extensions used for the <xref href="SadConsole.UI.Controls.Table" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class TableExtensions
    content.vb: Public Module TableExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SadConsole.UI.Controls.TableExtensions
  langs:
  - csharp
  - vb
  name: Range(TableCells, int, int, int, int)
  nameWithType: TableExtensions.Range(Table.TableCells, int, int, int, int)
  fullName: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells, int, int, int, int)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Returns a range of cells that fits the given parameter values.
  example: []
  syntax:
    content: public static IEnumerable<Table.Cell> Range(this Table.TableCells cells, int startRow, int startCol, int endRow, int endCol)
    parameters:
    - id: cells
      type: SadConsole.UI.Controls.Table.TableCells
      description: ''
    - id: startRow
      type: System.Int32
      description: ''
    - id: startCol
      type: System.Int32
      description: ''
    - id: endRow
      type: System.Int32
      description: ''
    - id: endCol
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}
      description: ''
    content.vb: Public Shared Function Range(cells As Table.TableCells, startRow As Integer, startCol As Integer, endRow As Integer, endCol As Integer) As IEnumerable(Of Table.Cell)
  overload: SadConsole.UI.Controls.TableExtensions.Range*
  nameWithType.vb: TableExtensions.Range(Table.TableCells, Integer, Integer, Integer, Integer)
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells, Integer, Integer, Integer, Integer)
  name.vb: Range(TableCells, Integer, Integer, Integer, Integer)
- uid: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
  commentId: M:SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
  id: ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
  isExtensionMethod: true
  parent: SadConsole.UI.Controls.TableExtensions
  langs:
  - csharp
  - vb
  name: ForEach(IEnumerable<Cell>, Action<Cell>)
  nameWithType: TableExtensions.ForEach(IEnumerable<Table.Cell>, Action<Table.Cell>)
  fullName: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable<SadConsole.UI.Controls.Table.Cell>, System.Action<SadConsole.UI.Controls.Table.Cell>)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Executes an action on each cell.
  example: []
  syntax:
    content: public static void ForEach(this IEnumerable<Table.Cell> range, Action<Table.Cell> action)
    parameters:
    - id: range
      type: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}
      description: ''
    - id: action
      type: System.Action{SadConsole.UI.Controls.Table.Cell}
      description: ''
    content.vb: Public Shared Sub ForEach(range As IEnumerable(Of Table.Cell), action As Action(Of Table.Cell))
  overload: SadConsole.UI.Controls.TableExtensions.ForEach*
  nameWithType.vb: TableExtensions.ForEach(IEnumerable(Of Table.Cell), Action(Of Table.Cell))
  fullName.vb: SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable(Of SadConsole.UI.Controls.Table.Cell), System.Action(Of SadConsole.UI.Controls.Table.Cell))
  name.vb: ForEach(IEnumerable(Of Cell), Action(Of Cell))
- uid: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  commentId: M:SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  id: SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  isExtensionMethod: true
  parent: SadConsole.UI.Controls.TableExtensions
  langs:
  - csharp
  - vb
  name: SetLayout(Cell, Color?, Color?, Options?)
  nameWithType: TableExtensions.SetLayout(Table.Cell, Color?, Color?, Table.Cell.Options?)
  fullName: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, SadConsole.UI.Controls.Table.Cell.Options?)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Sets the layout for the cell.
  example: []
  syntax:
    content: public static void SetLayout(this Table.Cell cell, Color? foreground = null, Color? background = null, Table.Cell.Options? settings = null)
    parameters:
    - id: cell
      type: SadConsole.UI.Controls.Table.Cell
      description: ''
    - id: foreground
      type: System.Nullable{SadRogue.Primitives.Color}
      description: ''
    - id: background
      type: System.Nullable{SadRogue.Primitives.Color}
      description: ''
    - id: settings
      type: SadConsole.UI.Controls.Table.Cell.Options
      description: ''
    content.vb: Public Shared Sub SetLayout(cell As Table.Cell, foreground As Color? = Nothing, background As Color? = Nothing, settings As Table.Cell.Options = Nothing)
  overload: SadConsole.UI.Controls.TableExtensions.SetLayout*
  nameWithType.vb: TableExtensions.SetLayout(Table.Cell, Color?, Color?, Table.Cell.Options)
  fullName.vb: SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell, SadRogue.Primitives.Color?, SadRogue.Primitives.Color?, SadConsole.UI.Controls.Table.Cell.Options)
  name.vb: SetLayout(Cell, Color?, Color?, Options)
- uid: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: SadConsole.UI.Controls.TableExtensions
  langs:
  - csharp
  - vb
  name: Resize(Cell, int?, int?)
  nameWithType: TableExtensions.Resize(Table.Cell, int?, int?)
  fullName: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell, int?, int?)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: >-
    Resizes the entire column and row to the specified sizes.

    If no sizes are specified for both row and column, the cell will be reset to the default size.
  example: []
  syntax:
    content: public static void Resize(this Table.Cell cell, int? rowSize = null, int? columnSize = null)
    parameters:
    - id: cell
      type: SadConsole.UI.Controls.Table.Cell
      description: ''
    - id: rowSize
      type: System.Nullable{System.Int32}
      description: ''
    - id: columnSize
      type: System.Nullable{System.Int32}
      description: ''
    content.vb: Public Shared Sub Resize(cell As Table.Cell, rowSize As Integer? = Nothing, columnSize As Integer? = Nothing)
  overload: SadConsole.UI.Controls.TableExtensions.Resize*
  nameWithType.vb: TableExtensions.Resize(Table.Cell, Integer?, Integer?)
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell, Integer?, Integer?)
  name.vb: Resize(Cell, Integer?, Integer?)
- uid: SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  commentId: M:SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  id: Select(SadConsole.UI.Controls.Table.Cell)
  isExtensionMethod: true
  parent: SadConsole.UI.Controls.TableExtensions
  langs:
  - csharp
  - vb
  name: Select(Cell)
  nameWithType: TableExtensions.Select(Table.Cell)
  fullName: SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Sets the cell as the selected cell.
  example: []
  syntax:
    content: public static void Select(this Table.Cell cell)
    parameters:
    - id: cell
      type: SadConsole.UI.Controls.Table.Cell
      description: ''
    content.vb: Public Shared Sub [Select](cell As Table.Cell)
  overload: SadConsole.UI.Controls.TableExtensions.Select*
- uid: SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  commentId: M:SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  id: Deselect(SadConsole.UI.Controls.Table.Cell)
  isExtensionMethod: true
  parent: SadConsole.UI.Controls.TableExtensions
  langs:
  - csharp
  - vb
  name: Deselect(Cell)
  nameWithType: TableExtensions.Deselect(Table.Cell)
  fullName: SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Incase this cell is the selected cell, it will unselect it.
  example: []
  syntax:
    content: public static void Deselect(this Table.Cell cell)
    parameters:
    - id: cell
      type: SadConsole.UI.Controls.Table.Cell
      description: ''
    content.vb: Public Shared Sub Deselect(cell As Table.Cell)
  overload: SadConsole.UI.Controls.TableExtensions.Deselect*
- uid: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  commentId: M:SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  id: Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  isExtensionMethod: true
  parent: SadConsole.UI.Controls.TableExtensions
  langs:
  - csharp
  - vb
  name: Column(TableCells, params int[])
  nameWithType: TableExtensions.Column(Table.TableCells, params int[])
  fullName: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells, params int[])
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Get the layout for the given columns.
  example: []
  syntax:
    content: public static Table.TableCells.Layout.RangeEnumerable Column(this Table.TableCells cells, params int[] columns)
    parameters:
    - id: cells
      type: SadConsole.UI.Controls.Table.TableCells
      description: ''
    - id: columns
      type: System.Int32[]
      description: ''
    return:
      type: SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable
      description: ''
    content.vb: Public Shared Function Column(cells As Table.TableCells, ParamArray columns As Integer()) As Table.TableCells.Layout.RangeEnumerable
  overload: SadConsole.UI.Controls.TableExtensions.Column*
  nameWithType.vb: TableExtensions.Column(Table.TableCells, ParamArray Integer())
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells, ParamArray Integer())
  name.vb: Column(TableCells, ParamArray Integer())
- uid: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  commentId: M:SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  id: Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  isExtensionMethod: true
  parent: SadConsole.UI.Controls.TableExtensions
  langs:
  - csharp
  - vb
  name: Row(TableCells, params int[])
  nameWithType: TableExtensions.Row(Table.TableCells, params int[])
  fullName: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells, params int[])
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Get the layout for the given rows.
  example: []
  syntax:
    content: public static Table.TableCells.Layout.RangeEnumerable Row(this Table.TableCells cells, params int[] rows)
    parameters:
    - id: cells
      type: SadConsole.UI.Controls.Table.TableCells
      description: ''
    - id: rows
      type: System.Int32[]
      description: ''
    return:
      type: SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable
      description: ''
    content.vb: Public Shared Function Row(cells As Table.TableCells, ParamArray rows As Integer()) As Table.TableCells.Layout.RangeEnumerable
  overload: SadConsole.UI.Controls.TableExtensions.Row*
  nameWithType.vb: TableExtensions.Row(Table.TableCells, ParamArray Integer())
  fullName.vb: SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells, ParamArray Integer())
  name.vb: Row(TableCells, ParamArray Integer())
- uid: SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  commentId: M:SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  id: Remove(SadConsole.UI.Controls.Table.Cell)
  isExtensionMethod: true
  parent: SadConsole.UI.Controls.TableExtensions
  langs:
  - csharp
  - vb
  name: Remove(Cell)
  nameWithType: TableExtensions.Remove(Table.Cell)
  fullName: SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  type: Method
  assemblies:
  - SadConsole.Extended
  namespace: SadConsole.UI.Controls
  summary: Removes the cell from its table.
  example: []
  syntax:
    content: public static void Remove(this Table.Cell cell)
    parameters:
    - id: cell
      type: SadConsole.UI.Controls.Table.Cell
      description: ''
    content.vb: Public Shared Sub Remove(cell As Table.Cell)
  overload: SadConsole.UI.Controls.TableExtensions.Remove*
references:
- uid: SadConsole.UI.Controls.Table
  commentId: T:SadConsole.UI.Controls.Table
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table
  nameWithType: Table
  fullName: SadConsole.UI.Controls.Table
- uid: SadConsole.UI.Controls
  commentId: N:SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.html
  name: SadConsole.UI.Controls
  nameWithType: SadConsole.UI.Controls
  fullName: SadConsole.UI.Controls
  spec.csharp:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
  spec.vb:
  - uid: SadConsole
    name: SadConsole
    isExternal: true
    href: SadConsole.html
  - name: .
  - uid: SadConsole.UI
    name: UI
    isExternal: true
    href: SadConsole.UI.html
  - name: .
  - uid: SadConsole.UI.Controls
    name: Controls
    isExternal: true
    href: SadConsole.UI.Controls.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadConsole.UI.Controls.TableExtensions.Range*
  commentId: Overload:SadConsole.UI.Controls.TableExtensions.Range
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)
  name: Range
  nameWithType: TableExtensions.Range
  fullName: SadConsole.UI.Controls.TableExtensions.Range
- uid: SadConsole.UI.Controls.Table.TableCells
  commentId: T:SadConsole.UI.Controls.Table.TableCells
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.TableCells
  nameWithType: Table.TableCells
  fullName: SadConsole.UI.Controls.Table.TableCells
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}
  commentId: T:System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Table.Cell>
  nameWithType: IEnumerable<Table.Cell>
  fullName: System.Collections.Generic.IEnumerable<SadConsole.UI.Controls.Table.Cell>
  nameWithType.vb: IEnumerable(Of Table.Cell)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SadConsole.UI.Controls.Table.Cell)
  name.vb: IEnumerable(Of Table.Cell)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SadConsole.UI.Controls.TableExtensions.ForEach*
  commentId: Overload:SadConsole.UI.Controls.TableExtensions.ForEach
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})
  name: ForEach
  nameWithType: TableExtensions.ForEach
  fullName: SadConsole.UI.Controls.TableExtensions.ForEach
- uid: System.Action{SadConsole.UI.Controls.Table.Cell}
  commentId: T:System.Action{SadConsole.UI.Controls.Table.Cell}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Table.Cell>
  nameWithType: Action<Table.Cell>
  fullName: System.Action<SadConsole.UI.Controls.Table.Cell>
  nameWithType.vb: Action(Of Table.Cell)
  fullName.vb: System.Action(Of SadConsole.UI.Controls.Table.Cell)
  name.vb: Action(Of Table.Cell)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.UI.Controls.TableExtensions.SetLayout*
  commentId: Overload:SadConsole.UI.Controls.TableExtensions.SetLayout
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)
  name: SetLayout
  nameWithType: TableExtensions.SetLayout
  fullName: SadConsole.UI.Controls.TableExtensions.SetLayout
- uid: SadConsole.UI.Controls.Table.Cell
  commentId: T:SadConsole.UI.Controls.Table.Cell
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.Cell
  nameWithType: Table.Cell
  fullName: SadConsole.UI.Controls.Table.Cell
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
- uid: System.Nullable{SadRogue.Primitives.Color}
  commentId: T:System.Nullable{SadRogue.Primitives.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: SadRogue.Primitives.Color?
  spec.csharp:
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: SadRogue.Primitives.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: SadConsole.UI.Controls.Table.Cell.Options
  commentId: T:SadConsole.UI.Controls.Table.Cell.Options
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.Cell.Options
  nameWithType: Table.Cell.Options
  fullName: SadConsole.UI.Controls.Table.Cell.Options
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell
    name: Cell
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.Cell.Options
    name: Options
    isExternal: true
    href: SadConsole.UI.Controls.Table.Cell.Options.html
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SadConsole.UI.Controls.TableExtensions.Resize*
  commentId: Overload:SadConsole.UI.Controls.TableExtensions.Resize
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name: Resize
  nameWithType: TableExtensions.Resize
  fullName: SadConsole.UI.Controls.TableExtensions.Resize
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: SadConsole.UI.Controls.TableExtensions.Select*
  commentId: Overload:SadConsole.UI.Controls.TableExtensions.Select
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)
  name: Select
  nameWithType: TableExtensions.Select
  fullName: SadConsole.UI.Controls.TableExtensions.Select
- uid: SadConsole.UI.Controls.TableExtensions.Deselect*
  commentId: Overload:SadConsole.UI.Controls.TableExtensions.Deselect
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)
  name: Deselect
  nameWithType: TableExtensions.Deselect
  fullName: SadConsole.UI.Controls.TableExtensions.Deselect
- uid: SadConsole.UI.Controls.TableExtensions.Column*
  commentId: Overload:SadConsole.UI.Controls.TableExtensions.Column
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  name: Column
  nameWithType: TableExtensions.Column
  fullName: SadConsole.UI.Controls.TableExtensions.Column
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable
  commentId: T:SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable
  parent: SadConsole.UI.Controls
  isExternal: true
  href: SadConsole.UI.Controls.Table.html
  name: Table.TableCells.Layout.RangeEnumerable
  nameWithType: Table.TableCells.Layout.RangeEnumerable
  fullName: SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable
  spec.csharp:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells.Layout
    name: Layout
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.Layout.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable
    name: RangeEnumerable
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable.html
  spec.vb:
  - uid: SadConsole.UI.Controls.Table
    name: Table
    isExternal: true
    href: SadConsole.UI.Controls.Table.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells
    name: TableCells
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells.Layout
    name: Layout
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.Layout.html
  - name: .
  - uid: SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable
    name: RangeEnumerable
    isExternal: true
    href: SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable.html
- uid: SadConsole.UI.Controls.TableExtensions.Row*
  commentId: Overload:SadConsole.UI.Controls.TableExtensions.Row
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])
  name: Row
  nameWithType: TableExtensions.Row
  fullName: SadConsole.UI.Controls.TableExtensions.Row
- uid: SadConsole.UI.Controls.TableExtensions.Remove*
  commentId: Overload:SadConsole.UI.Controls.TableExtensions.Remove
  isExternal: true
  href: SadConsole.UI.Controls.TableExtensions.html#SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)
  name: Remove
  nameWithType: TableExtensions.Remove
  fullName: SadConsole.UI.Controls.TableExtensions.Remove
